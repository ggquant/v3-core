{"contracts":{"flattened/UniswapV3Factory.sol:BitMath":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b296f64d7198c99addb84b9e551774a6d7d82bf8134ff0edd200c12886b0c05a64736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b296f64d7198c99addb84b9e551774a6d7d82bf8134ff0edd200c12886b0c05a64736f6c63430007060033","devdoc":"{\"details\":\"This library provides functionality for computing bit properties of an unsigned integer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BitMath\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides functionality for computing bit properties of an unsigned integer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BitMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"BitMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"53401:2602:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"53401:2602:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"version\":1}"},"flattened/UniswapV3Factory.sol:FixedPoint128":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207dbdc0f917bf38be3a052a9d1c5127feb9975c62a279af406770b899359dbfd964736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207dbdc0f917bf38be3a052a9d1c5127feb9975c62a279af406770b899359dbfd964736f6c63430007060033","devdoc":"{\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint128\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint128\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"FixedPoint128\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"65452:99:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"65452:99:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}"},"flattened/UniswapV3Factory.sol:FixedPoint96":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a628236c5158e89b4dffa7d69dc3b29738d741a10f21fb954f11fa7a9070eaf064736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a628236c5158e89b4dffa7d69dc3b29738d741a10f21fb954f11fa7a9070eaf064736f6c63430007060033","devdoc":"{\"details\":\"Used in SqrtPriceMath.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint96\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Used in SqrtPriceMath.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint96\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"FixedPoint96\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"90360:134:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"90360:134:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}"},"flattened/UniswapV3Factory.sol:FullMath":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eebad31f2b67bdca05ed72e7175a66b15b00ff3bf4fbfc78cab819060d4f7c7364736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eebad31f2b67bdca05ed72e7175a66b15b00ff3bf4fbfc78cab819060d4f7c7364736f6c63430007060033","devdoc":"{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"FullMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"60474:4762:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"60474:4762:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}"},"flattened/UniswapV3Factory.sol:IERC20Minimal":{"abi":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","bin":"","bin-runtime":"","devdoc":"{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"title\":\"Minimal ERC20 interface for Uniswap\",\"version\":1}","hashes":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"title\":\"Minimal ERC20 interface for Uniswap\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"notice\":\"Contains a subset of the full ERC20 interface that is used in Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"IERC20Minimal\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"","srcmap-runtime":"","userdoc":"{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"notice\":\"Contains a subset of the full ERC20 interface that is used in Uniswap V3\",\"version\":1}"},"flattened/UniswapV3Factory.sol:IUniswapV3Factory":{"abi":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","bin":"","bin-runtime":"","devdoc":"{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1}","hashes":{"createPool(address,address,uint24)":"a1671295","enableFeeAmount(uint24,int24)":"8a7c195f","feeAmountTickSpacing(uint24)":"22afcccb","getPool(address,address,uint24)":"1698ee82","owner()":"8da5cb5b","setOwner(address)":"13af4035"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"","srcmap-runtime":"","userdoc":"{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}"},"flattened/UniswapV3Factory.sol:IUniswapV3FlashCallback":{"abi":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3FlashCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","bin":"","bin-runtime":"","devdoc":"{\"kind\":\"dev\",\"methods\":{\"uniswapV3FlashCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\",\"params\":{\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#flash call\",\"fee0\":\"The fee amount in token0 due to the pool by the end of the flash\",\"fee1\":\"The fee amount in token1 due to the pool by the end of the flash\"}}},\"title\":\"Callback for IUniswapV3PoolActions#flash\",\"version\":1}","hashes":{"uniswapV3FlashCallback(uint256,uint256,bytes)":"e9cbafb0"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3FlashCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3FlashCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\",\"params\":{\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#flash call\",\"fee0\":\"The fee amount in token0 due to the pool by the end of the flash\",\"fee1\":\"The fee amount in token1 due to the pool by the end of the flash\"}}},\"title\":\"Callback for IUniswapV3PoolActions#flash\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3FlashCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after transferring to the recipient from IUniswapV3Pool#flash.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#flash must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"IUniswapV3FlashCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"","srcmap-runtime":"","userdoc":"{\"kind\":\"user\",\"methods\":{\"uniswapV3FlashCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after transferring to the recipient from IUniswapV3Pool#flash.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#flash must implement this interface\",\"version\":1}"},"flattened/UniswapV3Factory.sol:IUniswapV3MintCallback":{"abi":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","bin":"","bin-runtime":"","devdoc":"{\"kind\":\"dev\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\",\"params\":{\"amount0Owed\":\"The amount of token0 due to the pool for the minted liquidity\",\"amount1Owed\":\"The amount of token1 due to the pool for the minted liquidity\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#mint call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#mint\",\"version\":1}","hashes":{"uniswapV3MintCallback(uint256,uint256,bytes)":"d3487997"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\",\"params\":{\"amount0Owed\":\"The amount of token0 due to the pool for the minted liquidity\",\"amount1Owed\":\"The amount of token1 due to the pool for the minted liquidity\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#mint call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#mint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#mint must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"IUniswapV3MintCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"","srcmap-runtime":"","userdoc":"{\"kind\":\"user\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#mint must implement this interface\",\"version\":1}"},"flattened/UniswapV3Factory.sol:IUniswapV3Pool":{"abi":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","bin":"","bin-runtime":"","devdoc":"{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1}","hashes":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","collectProtocol(address,uint128,uint128)":"85b66729","factory()":"c45a0155","fee()":"ddca3f43","feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","liquidity()":"1a686502","maxLiquidityPerTick()":"70cf754a","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","observations(uint256)":"252c09d7","observe(uint32[])":"883bdbfd","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","setFeeProtocol(uint8,uint8)":"8206a4d1","slot0()":"3850c7bd","snapshotCumulativesInside(int24,int24)":"a38807f2","swap(address,bool,int256,uint160,bytes)":"128acb08","tickBitmap(int16)":"5339c296","tickSpacing()":"d0c93a7c","ticks(int24)":"f30dba93","token0()":"0dfe1681","token1()":"d21220a7"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"","srcmap-runtime":"","userdoc":"{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}"},"flattened/UniswapV3Factory.sol:IUniswapV3PoolActions":{"abi":"[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","bin":"","bin-runtime":"","devdoc":"{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1}","hashes":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","swap(address,bool,int256,uint160,bytes)":"128acb08"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"","srcmap-runtime":"","userdoc":"{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}"},"flattened/UniswapV3Factory.sol:IUniswapV3PoolDeployer":{"abi":"[{\"inputs\":[],\"name\":\"parameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","bin":"","bin-runtime":"","devdoc":"{\"details\":\"This is used to avoid having constructor arguments in the pool contract, which results in the init code hash of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain\",\"kind\":\"dev\",\"methods\":{\"parameters()\":{\"details\":\"Called by the pool constructor to fetch the parameters of the pool Returns factory The factory address Returns token0 The first token of the pool by address sort order Returns token1 The second token of the pool by address sort order Returns fee The fee collected upon every swap in the pool, denominated in hundredths of a bip Returns tickSpacing The minimum number of ticks between initialized ticks\"}},\"title\":\"An interface for a contract that is capable of deploying Uniswap V3 Pools\",\"version\":1}","hashes":{"parameters()":"89035730"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"parameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is used to avoid having constructor arguments in the pool contract, which results in the init code hash of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain\",\"kind\":\"dev\",\"methods\":{\"parameters()\":{\"details\":\"Called by the pool constructor to fetch the parameters of the pool Returns factory The factory address Returns token0 The first token of the pool by address sort order Returns token1 The second token of the pool by address sort order Returns fee The fee collected upon every swap in the pool, denominated in hundredths of a bip Returns tickSpacing The minimum number of ticks between initialized ticks\"}},\"title\":\"An interface for a contract that is capable of deploying Uniswap V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"parameters()\":{\"notice\":\"Get the parameters to be used in constructing the pool, set transiently during pool creation.\"}},\"notice\":\"A contract that constructs a pool must implement this to pass arguments to the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"IUniswapV3PoolDeployer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"","srcmap-runtime":"","userdoc":"{\"kind\":\"user\",\"methods\":{\"parameters()\":{\"notice\":\"Get the parameters to be used in constructing the pool, set transiently during pool creation.\"}},\"notice\":\"A contract that constructs a pool must implement this to pass arguments to the pool\",\"version\":1}"},"flattened/UniswapV3Factory.sol:IUniswapV3PoolDerivedState":{"abi":"[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","bin":"","bin-runtime":"","devdoc":"{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1}","hashes":{"observe(uint32[])":"883bdbfd","snapshotCumulativesInside(int24,int24)":"a38807f2"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"","srcmap-runtime":"","userdoc":"{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}"},"flattened/UniswapV3Factory.sol:IUniswapV3PoolEvents":{"abi":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}]","bin":"","bin-runtime":"","devdoc":"{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"","srcmap-runtime":"","userdoc":"{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}"},"flattened/UniswapV3Factory.sol:IUniswapV3PoolImmutables":{"abi":"[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","bin":"","bin-runtime":"","devdoc":"{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1}","hashes":{"factory()":"c45a0155","fee()":"ddca3f43","maxLiquidityPerTick()":"70cf754a","tickSpacing()":"d0c93a7c","token0()":"0dfe1681","token1()":"d21220a7"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"","srcmap-runtime":"","userdoc":"{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}"},"flattened/UniswapV3Factory.sol:IUniswapV3PoolOwnerActions":{"abi":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","bin":"","bin-runtime":"","devdoc":"{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1}","hashes":{"collectProtocol(address,uint128,uint128)":"85b66729","setFeeProtocol(uint8,uint8)":"8206a4d1"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"","srcmap-runtime":"","userdoc":"{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}"},"flattened/UniswapV3Factory.sol:IUniswapV3PoolState":{"abi":"[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","bin":"","bin-runtime":"","devdoc":"{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1}","hashes":{"feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","liquidity()":"1a686502","observations(uint256)":"252c09d7","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","slot0()":"3850c7bd","tickBitmap(int16)":"5339c296","ticks(int24)":"f30dba93"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"","srcmap-runtime":"","userdoc":"{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}"},"flattened/UniswapV3Factory.sol:IUniswapV3SwapCallback":{"abi":"[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","bin":"","bin-runtime":"","devdoc":"{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1}","hashes":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"","srcmap-runtime":"","userdoc":"{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}"},"flattened/UniswapV3Factory.sol:LiquidityMath":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220202e1c1cc871c9d6d342394ba8cb0466827eed85228fb3116b52e29a026faa0164736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220202e1c1cc871c9d6d342394ba8cb0466827eed85228fb3116b52e29a026faa0164736f6c63430007060033","devdoc":"{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math library for liquidity\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math library for liquidity\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"LiquidityMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"43103:512:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"43103:512:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"version\":1}"},"flattened/UniswapV3Factory.sol:LowGasSafeMath":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a9cab925594cfe7e892fd7ce70a9e3ea6cc33d6653a1d72103b405156cd50b464736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a9cab925594cfe7e892fd7ce70a9e3ea6cc33d6653a1d72103b405156cd50b464736f6c63430007060033","devdoc":"{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"LowGasSafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"31852:1446:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"31852:1446:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\",\"version\":1}"},"flattened/UniswapV3Factory.sol:NoDelegateCall":{"abi":"[]","bin":"","bin-runtime":"","devdoc":"{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"original\":{\"details\":\"The original address of this contract\"}},\"title\":\"Prevents delegatecall to a contract\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"original\":{\"details\":\"The original address of this contract\"}},\"title\":\"Prevents delegatecall to a contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Base contract that provides a modifier for preventing delegatecall to methods in a child contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"NoDelegateCall\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"","srcmap-runtime":"","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"Base contract that provides a modifier for preventing delegatecall to methods in a child contract\",\"version\":1}"},"flattened/UniswapV3Factory.sol:Oracle":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd8e880cc7d7afcdec59367220a3de438ff35b5b5642525ed9319ad23ba309364736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd8e880cc7d7afcdec59367220a3de438ff35b5b5642525ed9319ad23ba309364736f6c63430007060033","devdoc":"{\"details\":\"Instances of stored oracle data, \\\"observations\\\", are collected in the oracle array Every pool is initialized with an oracle array length of 1. Anyone can pay the SSTOREs to increase the maximum length of the oracle array. New slots will be added when the array is fully populated. Observations are overwritten when the full length of the oracle array is populated. The most recent observation is available, independent of the length of the oracle array, by passing 0 to observe()\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Oracle\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Instances of stored oracle data, \\\"observations\\\", are collected in the oracle array Every pool is initialized with an oracle array length of 1. Anyone can pay the SSTOREs to increase the maximum length of the oracle array. New slots will be added when the array is fully populated. Observations are overwritten when the full length of the oracle array is populated. The most recent observation is available, independent of the length of the oracle array, by passing 0 to observe()\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Oracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides price and liquidity data useful for a wide variety of system designs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"Oracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"69745:15731:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"69745:15731:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides price and liquidity data useful for a wide variety of system designs\",\"version\":1}"},"flattened/UniswapV3Factory.sol:Position":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001a4a4ae4833d84bf9e3a1d81e4e2b9fa35135096c988efdc888376eec8024d564736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001a4a4ae4833d84bf9e3a1d81e4e2b9fa35135096c988efdc888376eec8024d564736f6c63430007060033","devdoc":"{\"details\":\"Positions store additional state for tracking fees owed to the position\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Position\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Positions store additional state for tracking fees owed to the position\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Position\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Positions represent an owner address' liquidity between a lower and upper tick boundary\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"Position\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"65832:3224:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"65832:3224:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"Positions represent an owner address' liquidity between a lower and upper tick boundary\",\"version\":1}"},"flattened/UniswapV3Factory.sol:SafeCast":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a487c641fa3aeb81bc2cc8aa987ccba85e23bdc0c97d0b7501b25bd540750f164736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a487c641fa3aeb81bc2cc8aa987ccba85e23bdc0c97d0b7501b25bd540750f164736f6c63430007060033","devdoc":"{\"kind\":\"dev\",\"methods\":{},\"title\":\"Safe casting methods\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Safe casting methods\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for safely casting between types\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"33463:882:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"33463:882:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for safely casting between types\",\"version\":1}"},"flattened/UniswapV3Factory.sol:SqrtPriceMath":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122003229a34c2c1f53c9132efd35195daf01f735b00241b10a3f1c712a8294cc2f064736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122003229a34c2c1f53c9132efd35195daf01f735b00241b10a3f1c712a8294cc2f064736f6c63430007060033","devdoc":"{\"kind\":\"dev\",\"methods\":{},\"title\":\"Functions based on Q64.96 sqrt price and liquidity\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Functions based on Q64.96 sqrt price and liquidity\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"SqrtPriceMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"90740:10404:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"90740:10404:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas\",\"version\":1}"},"flattened/UniswapV3Factory.sol:SwapMath":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0cd93bb7367959446b7d031938203022e642dae0fb9143b2004b72ea046c19b64736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0cd93bb7367959446b7d031938203022e642dae0fb9143b2004b72ea046c19b64736f6c63430007060033","devdoc":"{\"kind\":\"dev\",\"methods\":{},\"title\":\"Computes the result of a swap within ticks\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Computes the result of a swap within ticks\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for computing the result of a swap within a single tick price range, i.e., a single tick.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"SwapMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"101389:4340:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"101389:4340:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for computing the result of a swap within a single tick price range, i.e., a single tick.\",\"version\":1}"},"flattened/UniswapV3Factory.sol:Tick":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d6e626b1935bef9cab6efb30f4402c01bb50164ee79cf71e3ae4d89ec593cf464736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d6e626b1935bef9cab6efb30f4402c01bb50164ee79cf71e3ae4d89ec593cf464736f6c63430007060033","devdoc":"{\"kind\":\"dev\",\"methods\":{},\"title\":\"Tick\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Tick\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains functions for managing tick processes and relevant calculations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"Tick\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"43792:9423:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"43792:9423:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains functions for managing tick processes and relevant calculations\",\"version\":1}"},"flattened/UniswapV3Factory.sol:TickBitmap":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001bb99f629483001374245fbdd08c6da7bc9391079a31b68b9b5bfccbe9d954364736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001bb99f629483001374245fbdd08c6da7bc9391079a31b68b9b5bfccbe9d954364736f6c63430007060033","devdoc":"{\"details\":\"The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Packed tick initialized state library\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Packed tick initialized state library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Stores a packed mapping of tick index to its initialized state\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"TickBitmap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"56319:3780:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"56319:3780:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"Stores a packed mapping of tick index to its initialized state\",\"version\":1}"},"flattened/UniswapV3Factory.sol:TickMath":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220586ca5be5be1911e9668ab8e70c8feb4014f784be4354037e802e5da39db9ea964736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220586ca5be5be1911e9668ab8e70c8feb4014f784be4354037e802e5da39db9ea964736f6c63430007060033","devdoc":"{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"TickMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"34658:8331:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"34658:8331:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}"},"flattened/UniswapV3Factory.sol:TransferHelper":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220be3962021849f9ebc1f755fef99d79e660865bc94cfcfb92e32424fd2a3c17c464736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220be3962021849f9ebc1f755fef99d79e660865bc94cfcfb92e32424fd2a3c17c464736f6c63430007060033","devdoc":"{\"kind\":\"dev\",\"methods\":{},\"title\":\"TransferHelper\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"TransferHelper\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"88771:679:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"88771:679:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false\",\"version\":1}"},"flattened/UniswapV3Factory.sol:UniswapV3Factory":{"abi":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","bin":"60a060405234801561001057600080fd5b503060601b608052600380546001600160a01b031916339081179091556040516000907fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c908290a36101f4600081815260046020527ffb8cf1d12598d1a039dd1d106665851a96aadf67d0d9ed76fceea282119208b7805462ffffff1916600a908117909155604051909291600080516020615ffa83398151915291a3610bb8600081815260046020527f72dffa9b822156d9cf4b0090fa0b656bcb9cc2b2c60eb6acfc20a34f54b31743805462ffffff1916603c908117909155604051909291600080516020615ffa83398151915291a3612710600081815260046020527f8cc740d51daa94ff54f33bd779c2d20149f524c340519b49181be5a08615f829805462ffffff191660c8908117909155604051909291600080516020615ffa83398151915291a360805160601c615e86610174600039806105515250615e866000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063890357301161005b578063890357301461013b5780638a7c195f146101855780638da5cb5b146101b0578063a1671295146101b85761007d565b806313af4035146100825780631698ee82146100aa57806322afcccb14610102575b600080fd5b6100a86004803603602081101561009857600080fd5b50356001600160a01b03166101f4565b005b6100e6600480360360608110156100c057600080fd5b5080356001600160a01b03908116916020810135909116906040013562ffffff16610267565b604080516001600160a01b039092168252519081900360200190f35b6101246004803603602081101561011857600080fd5b503562ffffff16610293565b6040805160029290920b8252519081900360200190f35b6101436102a8565b604080516001600160a01b0396871681529486166020860152929094168383015262ffffff16606083015260029290920b608082015290519081900360a00190f35b6100a86004803603604081101561019b57600080fd5b5062ffffff813516906020013560020b6102de565b6100e66103a1565b6100e6600480360360608110156101ce57600080fd5b5080356001600160a01b03908116916020810135909116906040013562ffffff166103b0565b6003546001600160a01b0316331461020b57600080fd5b6003546040516001600160a01b038084169216907fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c90600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b60056020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b60046020526000908152604090205460020b81565b600054600154600280546001600160a01b03938416939283169281169162ffffff600160a01b83041691600160b81b9004900b85565b6003546001600160a01b031633146102f557600080fd5b620f42408262ffffff161061030957600080fd5b60008160020b13801561032057506140008160020b125b61032957600080fd5b62ffffff8216600090815260046020526040902054600290810b900b1561034f57600080fd5b62ffffff828116600081815260046020526040808220805462ffffff1916600287900b958616179055517fc66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc9190a35050565b6003546001600160a01b031681565b60006103ba610546565b826001600160a01b0316846001600160a01b031614156103d957600080fd5b600080846001600160a01b0316866001600160a01b0316106103fc5784866103ff565b85855b90925090506001600160a01b03821661041757600080fd5b62ffffff8416600090815260046020526040902054600290810b9081900b61043e57600080fd5b6001600160a01b0383811660009081526005602090815260408083208685168452825280832062ffffff8a168452909152902054161561047d57600080fd5b61048a308484888561057d565b6001600160a01b03808516600081815260056020818152604080842089871680865290835281852062ffffff8e168087529084528286208054988a166001600160a01b0319998a1681179091558287529484528286208787528452828620818752845294829020805490971684179096558051600289900b815291820192909252815195995091947f783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b71189281900390910190a45050509392505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461057b57600080fd5b565b6040805160a0810182526001600160a01b03878116808352878216602080850182905292881684860181905262ffffff888116606080880182905260028a810b6080998a01819052600080546001600160a01b03199081169099178155600180548a16891790558254909816861762ffffff60a01b1916600160a01b85021762ffffff60b81b1916600160b81b91830b9095160293909317909255875180870194909452838801929092528281019190915285518083039091018152930193849052825192909101919091209091610654906106ab565b8190604051809103906000f5905080158015610674573d6000803e3d6000fd5b50600080546001600160a01b0319908116909155600180549091169055600280546001600160d01b03191690559695505050505050565b615798806106b98339019056fe6101606040523480156200001257600080fd5b503060601b60805260408051630890357360e41b81529051600091339163890357309160048082019260a092909190829003018186803b1580156200005657600080fd5b505afa1580156200006b573d6000803e3d6000fd5b505050506040513d60a08110156200008257600080fd5b508051602080830151604084015160608086015160809096015160e896871b6001600160e81b0319166101005291811b6001600160601b031990811660e05292811b831660c0529390931b1660a052600282810b900b90921b610120529150620000f79082906200010f811b62002adb17901c565b60801b6001600160801b03191661014052506200017d565b60008082600281900b620d89e719816200012557fe5b05029050600083600281900b620d89e8816200013d57fe5b0502905060008460020b83830360020b816200015557fe5b0560010190508062ffffff166001600160801b038016816200017357fe5b0495945050505050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160e81c6101205160e81c6101405160801c61554e6200024a60003980611fab5280614a4d5280614a84525080610bd852806128975280614ab85280614aea525080610cc7528061198852806119bf52806128df5250806111855280611a425280611eb152806123e652806128bb5280613d7c5250806108aa52806112b35280611a115280611e4b52806123605280613c33525080612038528061221f5280612873525080612b52525061554e6000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806370cf754a116100de578063c45a015511610097578063ddca3f4311610071578063ddca3f43146107d8578063f3058399146107f8578063f30dba9314610800578063f637731d146108825761018e565b8063c45a0155146107a9578063d0c93a7c146107b1578063d21220a7146107d05761018e565b806370cf754a146105a05780638206a4d1146105a857806385b66729146105d0578063883bdbfd1461060d578063a34123a714610714578063a38807f21461074e5761018e565b80633850c7bd1161014b578063490e6cbc11610125578063490e6cbc1461044c5780634f1eb3d8146104d6578063514ea4bf146105275780635339c296146105805761018e565b80633850c7bd146103395780633c8a7d8d1461039257806346141319146104325761018e565b80630dfe168114610193578063128acb08146101b75780631a686502146102645780631ad8b03b14610288578063252c09d7146102bf57806332148f6714610316575b600080fd5b61019b6108a8565b604080516001600160a01b039092168252519081900360200190f35b61024b600480360360a08110156101cd57600080fd5b6001600160a01b0382358116926020810135151592604082013592606083013516919081019060a081016080820135600160201b81111561020d57600080fd5b82018360208201111561021f57600080fd5b803590602001918460018302840111600160201b8311171561024057600080fd5b5090925090506108cc565b6040805192835260208301919091528051918290030190f35b61026c61146b565b604080516001600160801b039092168252519081900360200190f35b61029061147a565b60405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390f35b6102dc600480360360208110156102d557600080fd5b5035611494565b6040805163ffffffff909516855260069390930b60208501526001600160a01b039091168383015215156060830152519081900360800190f35b6103376004803603602081101561032c57600080fd5b503561ffff166114d9565b005b6103416115d3565b604080516001600160a01b03909816885260029690960b602088015261ffff9485168787015292841660608701529216608085015260ff90911660a0840152151560c0830152519081900360e00190f35b61024b600480360360a08110156103a857600080fd5b6001600160a01b03823516916020810135600290810b92604083013590910b916001600160801b036060820135169181019060a081016080820135600160201b8111156103f457600080fd5b82018360208201111561040657600080fd5b803590602001918460018302840111600160201b8311171561042757600080fd5b509092509050611623565b61043a6118df565b60408051918252519081900360200190f35b6103376004803603608081101561046257600080fd5b6001600160a01b038235169160208101359160408201359190810190608081016060820135600160201b81111561049857600080fd5b8201836020820111156104aa57600080fd5b803590602001918460018302840111600160201b831117156104cb57600080fd5b5090925090506118e5565b610290600480360360a08110156104ec57600080fd5b506001600160a01b03813516906020810135600290810b91604081013590910b906001600160801b0360608201358116916080013516611d40565b6105446004803603602081101561053d57600080fd5b5035611f5a565b604080516001600160801b0396871681526020810195909552848101939093529084166060840152909216608082015290519081900360a00190f35b61043a6004803603602081101561059657600080fd5b503560010b611f97565b61026c611fa9565b610337600480360360408110156105be57600080fd5b5060ff81358116916020013516611fcd565b610290600480360360608110156105e657600080fd5b506001600160a01b03813516906001600160801b03602082013581169160400135166121b1565b61067b6004803603602081101561062357600080fd5b810190602081018135600160201b81111561063d57600080fd5b82018360208201111561064f57600080fd5b803590602001918460208302840111600160201b8311171561067057600080fd5b50909250905061247e565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156106bf5781810151838201526020016106a7565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156106fe5781810151838201526020016106e6565b5050505090500194505050505060405180910390f35b61024b6004803603606081101561072a57600080fd5b508035600290810b91602081013590910b90604001356001600160801b031661250b565b6107786004803603604081101561076457600080fd5b508035600290810b9160200135900b612682565b6040805160069490940b84526001600160a01b03909216602084015263ffffffff1682820152519081900360600190f35b61019b612871565b6107b9612895565b6040805160029290920b8252519081900360200190f35b61019b6128b9565b6107e06128dd565b6040805162ffffff9092168252519081900360200190f35b61043a612901565b6108206004803603602081101561081657600080fd5b503560020b612907565b604080516001600160801b039099168952600f9790970b602089015287870195909552606087019390935260069190910b60808601526001600160a01b031660a085015263ffffffff1660c0840152151560e083015251908190036101000190f35b6103376004803603602081101561089857600080fd5b50356001600160a01b0316612971565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108d7612b47565b8561090e576040805162461bcd60e51b8152602060048201526002602482015261415360f01b604482015290519081900360640190fd5b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602083015261ffff600160b81b8204811693830193909352600160c81b810483166060830152600160d81b8104909216608082015260ff600160e81b8304811660a0830152600160f01b909204909116151560c082018190526109c7576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b87610a125780600001516001600160a01b0316866001600160a01b0316118015610a0d575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716105b610a44565b80600001516001600160a01b0316866001600160a01b0316108015610a4457506401000276a36001600160a01b038716115b610a7b576040805162461bcd60e51b815260206004820152600360248201526214d41360ea1b604482015290519081900360640190fd5b6000805460ff60f01b191681556040805160c08101909152808a610aaa5760048460a0015160ff16901c610abd565b60108460a0015160ff1681610abb57fe5b065b60ff1681526004546001600160801b03166020820152604001610ade612b7e565b63ffffffff168152602001600060060b815260200160006001600160a01b031681526020016000151581525090506000808913905060006040518060e001604052808b81526020016000815260200185600001516001600160a01b03168152602001856020015160020b81526020018c610b5a57600254610b5e565b6001545b815260200160006001600160801b0316815260200184602001516001600160801b031681525090505b805115801590610bad5750886001600160a01b031681604001516001600160a01b031614155b15610f7757610bba6154b5565b60408201516001600160a01b031681526060820151610bfd906006907f00000000000000000000000000000000000000000000000000000000000000008f612b82565b15156040830152600290810b810b60208301819052620d89e719910b1215610c2e57620d89e7196020820152610c4d565b6020810151620d89e860029190910b1315610c4d57620d89e860208201525b610c5a8160200151612cc4565b6001600160a01b031660608201526040820151610ceb908d610c94578b6001600160a01b031683606001516001600160a01b031611610cae565b8b6001600160a01b031683606001516001600160a01b0316105b610cbc578260600151610cbe565b8b5b60c085015185517f0000000000000000000000000000000000000000000000000000000000000000612ff5565b60c085015260a084015260808301526001600160a01b031660408301528215610d4d57610d218160c001518260800151016131e7565b825103825260a0810151610d4390610d38906131e7565b6020840151906131fd565b6020830152610d88565b610d5a8160a001516131e7565b825101825260c08101516080820151610d8291610d7791016131e7565b602084015190613219565b60208301525b835160ff1615610dce576000846000015160ff168260c0015181610da857fe5b60c0840180519290910491829003905260a0840180519091016001600160801b03169052505b60c08201516001600160801b031615610e0d57610e018160c00151600160801b8460c001516001600160801b031661322f565b60808301805190910190525b80606001516001600160a01b031682604001516001600160a01b03161415610f3657806040015115610f0d578360a00151610e9757610e75846040015160008760200151886040015188602001518a6060015160086132df909695949392919063ffffffff16565b6001600160a01b03166080860152600690810b900b6060850152600160a08501525b6000610ee382602001518e610eae57600154610eb4565b84608001515b8f610ec3578560800151610ec7565b6002545b608089015160608a015160408b01516005959493929190613471565b90508c15610eef576000035b610efd8360c001518261352b565b6001600160801b031660c0840152505b8b610f1c578060200151610f25565b60018160200151035b600290810b900b6060830152610f71565b80600001516001600160a01b031682604001516001600160a01b031614610f7157610f6482604001516135e1565b600290810b900b60608301525b50610b87565b836020015160020b816060015160020b1461104557600080610fc586604001518660400151886020015188602001518a606001518b6080015160086138fc909695949392919063ffffffff16565b604085015160608601516000805461ffff60c81b1916600160c81b61ffff958616021761ffff60b81b1916600160b81b95909416949094029290921762ffffff60a01b1916600160a01b62ffffff60029490940b9390931692909202919091176001600160a01b0319166001600160a01b039091161790555061106a9050565b6040810151600080546001600160a01b0319166001600160a01b039092169190911790555b8060c001516001600160801b031683602001516001600160801b0316146110b05760c0810151600480546001600160801b0319166001600160801b039092169190911790555b8a1561110057608081015160015560a08101516001600160801b0316156110fb5760a0810151600380546001600160801b031981166001600160801b03918216909301169190911790555b611146565b608081015160025560a08101516001600160801b0316156111465760a0810151600380546001600160801b03808216600160801b92839004821690940116029190911790555b8115158b15151461115f57602081015181518b0361116c565b80600001518a0381602001515b90965094508a156112a55760008512156111ae576111ae7f00000000000000000000000000000000000000000000000000000000000000008d87600003613a97565b60006111b8613be5565b9050336001600160a01b031663fa461e3388888c8c6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561123c57600080fd5b505af1158015611250573d6000803e3d6000fd5b5050505061125c613be5565b6112668289613d1e565b111561129f576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b506113cf565b60008612156112dc576112dc7f00000000000000000000000000000000000000000000000000000000000000008d88600003613a97565b60006112e6613d2e565b9050336001600160a01b031663fa461e3388888c8c6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561136a57600080fd5b505af115801561137e573d6000803e3d6000fd5b5050505061138a613d2e565b6113948288613d1e565b11156113cd576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b505b60408082015160c083015160608085015184518b8152602081018b90526001600160a01b03948516818701526001600160801b039093169183019190915260020b60808201529151908e169133917fc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca679181900360a00190a350506000805460ff60f01b1916600160f01b17905550919890975095505050505050565b6004546001600160801b031681565b6003546001600160801b0380821691600160801b90041682565b60088161ffff81106114a557600080fd5b015463ffffffff81169150600160201b810460060b90600160581b81046001600160a01b031690600160f81b900460ff1684565b600054600160f01b900460ff1661151d576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b19169055611532612b47565b60008054600160d81b900461ffff169061154e60088385613dc6565b6000805461ffff808416600160d81b810261ffff60d81b19909316929092179092559192508316146115bb576040805161ffff80851682528316602082015281517fac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a929181900390910190a15b50506000805460ff60f01b1916600160f01b17905550565b6000546001600160a01b03811690600160a01b810460020b9061ffff600160b81b8204811691600160c81b8104821691600160d81b8204169060ff600160e81b8204811691600160f01b90041687565b600080548190600160f01b900460ff1661166a576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b191690556001600160801b03851661168a57600080fd5b6000806116d860405180608001604052808c6001600160a01b031681526020018b60020b81526020018a60020b81526020016116ce8a6001600160801b0316613e69565b600f0b9052613e7a565b925092505081935080925060008060008611156116fa576116f7613be5565b91505b841561170b57611708613d2e565b90505b336001600160a01b031663d348799787878b8b6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561178d57600080fd5b505af11580156117a1573d6000803e3d6000fd5b5050505060008611156117f8576117b6613be5565b6117c08388613d1e565b11156117f8576040805162461bcd60e51b815260206004820152600260248201526104d360f41b604482015290519081900360640190fd5b841561184857611806613d2e565b6118108287613d1e565b1115611848576040805162461bcd60e51b81526020600482015260026024820152614d3160f01b604482015290519081900360640190fd5b8960020b8b60020b8d6001600160a01b03167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338d8b8b60405180856001600160a01b03168152602001846001600160801b0316815260200183815260200182815260200194505050505060405180910390a450506000805460ff60f01b1916600160f01b17905550919890975095505050505050565b60025481565b600054600160f01b900460ff16611929576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905561193e612b47565b6004546001600160801b031680611980576040805162461bcd60e51b81526020600482015260016024820152601360fa1b604482015290519081900360640190fd5b60006119b5867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f42406140ba565b905060006119ec867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f42406140ba565b905060006119f8613be5565b90506000611a04613d2e565b90508815611a3757611a377f00000000000000000000000000000000000000000000000000000000000000008b8b613a97565b8715611a6857611a687f00000000000000000000000000000000000000000000000000000000000000008b8a613a97565b336001600160a01b031663e9cbafb085858a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b158015611aea57600080fd5b505af1158015611afe573d6000803e3d6000fd5b505050506000611b0c613be5565b90506000611b18613d2e565b905081611b258588613d1e565b1115611b5d576040805162461bcd60e51b8152602060048201526002602482015261046360f41b604482015290519081900360640190fd5b80611b688487613d1e565b1115611ba0576040805162461bcd60e51b8152602060048201526002602482015261463160f01b604482015290519081900360640190fd5b8382038382038115611c2f5760008054600160e81b9004600f16908115611bd3578160ff168481611bcd57fe5b04611bd6565b60005b90506001600160801b03811615611c0957600380546001600160801b038082168401166001600160801b03199091161790555b611c23818503600160801b8d6001600160801b031661322f565b60018054909101905550505b8015611cba5760008054600160e81b900460041c600f16908115611c5f578160ff168381611c5957fe5b04611c62565b60005b90506001600160801b03811615611c9457600380546001600160801b03600160801b8083048216850182160291161790555b611cae818403600160801b8d6001600160801b031661322f565b60028054909101905550505b8d6001600160a01b0316336001600160a01b03167fbdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca6338f8f86866040518085815260200184815260200183815260200182815260200194505050505060405180910390a350506000805460ff60f01b1916600160f01b179055505050505050505050505050565b600080548190600160f01b900460ff16611d87576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b19168155611da160073389896140f4565b60038101549091506001600160801b0390811690861611611dc25784611dd1565b60038101546001600160801b03165b60038201549093506001600160801b03600160801b909104811690851611611df95783611e0f565b6003810154600160801b90046001600160801b03165b91506001600160801b03831615611e74576003810180546001600160801b031981166001600160801b03918216869003821617909155611e74907f0000000000000000000000000000000000000000000000000000000000000000908a908616613a97565b6001600160801b03821615611eda576003810180546001600160801b03600160801b808304821686900382160291811691909117909155611eda907f0000000000000000000000000000000000000000000000000000000000000000908a908516613a97565b604080516001600160a01b038a1681526001600160801b0380861660208301528416818301529051600288810b92908a900b9133917f70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0919081900360600190a4506000805460ff60f01b1916600160f01b17905590969095509350505050565b60076020526000908152604090208054600182015460028301546003909301546001600160801b0392831693919281811691600160801b90041685565b60066020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600054600160f01b900460ff16612011576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905560408051638da5cb5b60e01b815290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638da5cb5b916004808301926020929190829003018186803b15801561207e57600080fd5b505afa158015612092573d6000803e3d6000fd5b505050506040513d60208110156120a857600080fd5b50516001600160a01b031633146120be57600080fd5b60ff821615806120e1575060048260ff16101580156120e15750600a8260ff1611155b801561210b575060ff8116158061210b575060048160ff161015801561210b5750600a8160ff1611155b61211457600080fd5b60008054610ff0600484901b16840160ff908116600160e81b90810260ff60e81b19841617909355919004167f973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b1336010826040805160ff9390920683168252600f600486901c16602083015286831682820152918516606082015290519081900360800190a150506000805460ff60f01b1916600160f01b17905550565b600080548190600160f01b900460ff166121f8576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905560408051638da5cb5b60e01b815290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638da5cb5b916004808301926020929190829003018186803b15801561226557600080fd5b505afa158015612279573d6000803e3d6000fd5b505050506040513d602081101561228f57600080fd5b50516001600160a01b031633146122a557600080fd5b6003546001600160801b03908116908516116122c157836122ce565b6003546001600160801b03165b6003549092506001600160801b03600160801b9091048116908416116122f45782612308565b600354600160801b90046001600160801b03165b90506001600160801b03821615612389576003546001600160801b038381169116141561233757600019909101905b600380546001600160801b031981166001600160801b03918216859003821617909155612389907f00000000000000000000000000000000000000000000000000000000000000009087908516613a97565b6001600160801b0381161561240f576003546001600160801b03828116600160801b9092041614156123ba57600019015b600380546001600160801b03600160801b80830482168590038216029181169190911790915561240f907f00000000000000000000000000000000000000000000000000000000000000009087908416613a97565b604080516001600160801b0380851682528316602082015281516001600160a01b0388169233927f596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151929081900390910190a36000805460ff60f01b1916600160f01b1790559094909350915050565b606080612489612b47565b612500612494612b7e565b858580806020026020016040519081016040528093929190818152602001838360200280828437600092018290525054600454600896959450600160a01b820460020b935061ffff600160b81b8304811693506001600160801b0390911691600160c81b900416614158565b915091509250929050565b600080548190600160f01b900460ff16612552576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916815560408051608081018252338152600288810b602083015287900b91810191909152819081906125ab906060810161259e6001600160801b038a16613e69565b600003600f0b9052613e7a565b92509250925081600003945080600003935060008511806125cc5750600084115b1561260b576003830180546001600160801b038082168089018216600160801b93849004831689019092169092029091176001600160801b0319161790555b604080516001600160801b0388168152602081018790528082018690529051600289810b92908b900b9133917f0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c919081900360600190a450506000805460ff60f01b1916600160f01b179055509094909350915050565b600080600061268f612b47565b61269985856142b2565b600285810b810b60009081526005602052604080822087840b90930b825281206003830154600681900b93600160381b82046001600160a01b0316928492600160d81b810463ffffffff169284929091600160f81b900460ff16806126fd57600080fd5b6003820154600681900b9850600160381b81046001600160a01b03169650600160d81b810463ffffffff169450600160f81b900460ff168061273e57600080fd5b50506040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b810b6020840181905261ffff600160b81b8404811695850195909552600160c81b830485166060850152600160d81b8304909416608084015260ff600160e81b8304811660a0850152600160f01b909204909116151560c08301529093508e810b91900b121590506127e75750939094039650900393509003905061286a565b8a60020b816020015160020b121561285b576000612803612b7e565b6020830151604084015160045460608601519394506000938493612839936008938893879392916001600160801b0316906132df565b9a9003989098039b50509490960392909203965090910303925061286a915050565b50949093039650039350900390505b9250925092565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b60056020526000908152604090208054600182015460028301546003909301546001600160801b03831693600160801b909304600f0b9290600681900b90600160381b81046001600160a01b031690600160d81b810463ffffffff1690600160f81b900460ff1688565b6000546001600160a01b0316156129b4576040805162461bcd60e51b8152602060048201526002602482015261414960f01b604482015290519081900360640190fd5b60006129bf826135e1565b90506000806129d76129cf612b7e565b60089061437b565b6040805160e0810182526001600160a01b038816808252600288810b6020808501829052600085870181905261ffff898116606088018190529089166080880181905260a08801839052600160c0909801979097528154600160f01b6001600160a01b0319909116871762ffffff60a01b1916600160a01b62ffffff9787900b97909716969096029590951763ffffffff60b81b1916600160c81b9091021761ffff60d81b1916600160d81b9096029590951761ffff60e81b191692909217909355835191825281019190915281519395509193507f98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c9592918290030190a150505050565b60008082600281900b620d89e71981612af057fe5b05029050600083600281900b620d89e881612b0757fe5b0502905060008460020b83830360020b81612b1e57fe5b0560010190508062ffffff166001600160801b03801681612b3b57fe5b0493505050505b919050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612b7c57600080fd5b565b4290565b60008060008460020b8660020b81612b9657fe5b05905060008660020b128015612bbd57508460020b8660020b81612bb657fe5b0760020b15155b15612bc757600019015b8315612c3c57600080612bd9836143c7565b600182810b810b600090815260208d9052604090205460ff83169190911b80016000190190811680151597509294509092509085612c1e57888360ff16860302612c31565b88612c28826143d9565b840360ff168603025b965050505050612cba565b600080612c4b836001016143c7565b91509150600060018260ff166001901b031990506000818b60008660010b60010b8152602001908152602001600020541690508060001415955085612c9d57888360ff0360ff16866001010102612cb3565b8883612ca883614478565b0360ff168660010101025b9650505050505b5094509492505050565b60008060008360020b12612cdb578260020b612ce3565b8260020b6000035b9050620d89e8811115612d21576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b600060018216612d3557600160801b612d47565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612d7b576ffff97272373d413259a46990580e213a0260801c5b6004821615612d9a576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615612db9576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612dd8576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612df7576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615612e16576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615612e35576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615612e55576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615612e75576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615612e95576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615612eb5576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615612ed5576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612ef5576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612f15576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615612f35576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615612f56576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615612f76576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615612f95576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615612fb2576b048a170391f7dc42444e8fa20260801c5b60008460020b1315612fcd578060001981612fc957fe5b0490505b600160201b810615612fe0576001612fe3565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a16101581871280159061307a57600061302e8989620f42400362ffffff16620f424061322f565b905082613047576130428c8c8c6001614562565b613054565b6130548b8d8c60016145dd565b9550858110613065578a9650613074565b6130718c8b8386614688565b96505b506130c4565b816130915761308c8b8b8b60006145dd565b61309e565b61309e8a8c8b6000614562565b93508388600003106130b2578995506130c4565b6130c18b8a8a600003856146d4565b95505b6001600160a01b038a8116908716148215613127578080156130e35750815b6130f9576130f4878d8c60016145dd565b6130fb565b855b9550808015613108575081155b61311e57613119878d8c6000614562565b613120565b845b9450613171565b8080156131315750815b613147576131428c888c6001614562565b613149565b855b9550808015613156575081155b61316c576131678c888c60006145dd565b61316e565b845b94505b8115801561318157508860000385115b1561318d578860000394505b8180156131ac57508a6001600160a01b0316876001600160a01b031614155b156131bb5785890393506131d8565b6131d5868962ffffff168a620f42400362ffffff166140ba565b93505b50505095509550955095915050565b6000600160ff1b82106131f957600080fd5b5090565b8082038281131560008312151461321357600080fd5b92915050565b8181018281121560008312151461321357600080fd5b6000808060001985870986860292508281109083900303905080613265576000841161325a57600080fd5b5082900490506132d8565b80841161327157600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60008063ffffffff8716613385576000898661ffff1661ffff811061330057fe5b60408051608081018252919092015463ffffffff808216808452600160201b8304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff16151560608301529092508a16146133715761336e818a8988614720565b90505b806020015181604001519250925050613465565b86880360008061339a8c8c858c8c8c8c6147c3565b91509150816000015163ffffffff168363ffffffff1614156133cc578160200151826040015194509450505050613465565b805163ffffffff848116911614156133f4578060200151816040015194509450505050613465565b8151815160208085015190840151918390039286039163ffffffff80841692908516910360060b8161342257fe5b05028460200151018263ffffffff168263ffffffff1686604001518660400151036001600160a01b0316028161345457fe5b048560400151019650965050505050505b97509795505050505050565b600295860b860b60009081526020979097526040909620600181018054909503909455938301805490920390915560038201805463ffffffff600160d81b6001600160a01b03600160381b808504821690960316909402600160381b600160d81b031990921691909117600681810b90960390950b66ffffffffffffff1666ffffffffffffff199095169490941782810485169095039093160263ffffffff60d81b1990931692909217905554600160801b9004600f0b90565b60008082600f0b121561359057826001600160801b03168260000384039150816001600160801b03161061358b576040805162461bcd60e51b81526020600482015260026024820152614c5360f01b604482015290519081900360640190fd5b613213565b826001600160801b03168284019150816001600160801b03161015613213576040805162461bcd60e51b81526020600482015260026024820152614c4160f01b604482015290519081900360640190fd5b60006401000276a36001600160a01b0383161080159061361d575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b613652576040805162461bcd60e51b81526020600482015260016024820152602960f91b604482015290519081900360640190fd5b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c979088119617909417909217179091171717608081106136e657607f810383901c91506136f0565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c600160381b161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b146138ed57886001600160a01b03166138d182612cc4565b6001600160a01b031611156138e657816138e8565b805b6138ef565b815b9998505050505050505050565b6000806000898961ffff1661ffff811061391257fe5b60408051608081018252919092015463ffffffff808216808452600160201b8304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff1615156060830152909250891614156139815788859250925050613465565b8461ffff168461ffff161180156139a257506001850361ffff168961ffff16145b156139af578391506139b3565b8491505b8161ffff168960010161ffff16816139c757fe5b0692506139d681898989614720565b8a8461ffff1661ffff81106139e757fe5b825191018054602084015160408501516060909501511515600160f81b026001600160f81b036001600160a01b03909616600160581b027fff0000000000000000000000000000000000000000ffffffffffffffffffffff60069390930b66ffffffffffffff16600160201b026affffffffffffff000000001963ffffffff90971663ffffffff199095169490941795909516929092171692909217929092161790555097509795505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b60208310613b135780518252601f199092019160209182019101613af4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114613b75576040519150601f19603f3d011682016040523d82523d6000602084013e613b7a565b606091505b5091509150818015613ba8575080511580613ba85750808060200190516020811015613ba557600080fd5b50515b613bde576040805162461bcd60e51b81526020600482015260026024820152612a2360f11b604482015290519081900360640190fd5b5050505050565b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693919290918291908083835b60208310613c7e5780518252601f199092019160209182019101613c5f565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114613cde576040519150601f19603f3d011682016040523d82523d6000602084013e613ce3565b606091505b5091509150818015613cf757506020815110155b613d0057600080fd5b808060200190516020811015613d1557600080fd5b50519250505090565b8082018281101561321357600080fd5b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016939192909182919080838360208310613c7e5780518252601f199092019160209182019101613c5f565b6000808361ffff1611613e04576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b8261ffff168261ffff1611613e1a5750816132d8565b825b8261ffff168161ffff161015613e60576001858261ffff1661ffff8110613e3f57fe5b01805463ffffffff191663ffffffff92909216919091179055600101613e1c565b50909392505050565b80600f81900b8114612b4257600080fd5b6000806000613e87612b47565b613e99846020015185604001516142b2565b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602080840182905261ffff600160b81b8404811685870152600160c81b84048116606080870191909152600160d81b8504909116608086015260ff600160e81b8504811660a0870152600160f01b909404909316151560c085015288519089015194890151928901519394613f3d94919390929091906149bd565b93508460600151600f0b6000146140b257846020015160020b816020015160020b1215613f9257613f8b613f748660200151612cc4565b613f818760400151612cc4565b8760600151614b72565b92506140b2565b846040015160020b816020015160020b12156140885760045460408201516001600160801b0390911690613fe490613fc8612b7e565b60208501516060860151608087015160089493929187916138fc565b6000805461ffff60c81b1916600160c81b61ffff938416021761ffff60b81b1916600160b81b939092169290920217905581516040870151614034919061402a90612cc4565b8860600151614b72565b93506140526140468760200151612cc4565b83516060890151614bb6565b925061406281876060015161352b565b600480546001600160801b0319166001600160801b0392909216919091179055506140b2565b6140af6140988660200151612cc4565b6140a58760400151612cc4565b8760600151614bb6565b91505b509193909250565b60006140c784848461322f565b9050600082806140d357fe5b84860911156132d85760001981106140ea57600080fd5b6001019392505050565b6040805160609490941b6bffffffffffffffffffffffff1916602080860191909152600293840b60e890811b60348701529290930b90911b60378401528051808403601a018152603a90930181528251928201929092206000908152929052902090565b60608060008361ffff1611614198576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b865167ffffffffffffffff811180156141b057600080fd5b506040519080825280602002602001820160405280156141da578160200160208202803683370190505b509150865167ffffffffffffffff811180156141f557600080fd5b5060405190808252806020026020018201604052801561421f578160200160208202803683370190505b50905060005b87518110156142a5576142508a8a8a848151811061423f57fe5b60200260200101518a8a8a8a6132df565b84838151811061425c57fe5b6020026020010184848151811061426f57fe5b60200260200101826001600160a01b03166001600160a01b03168152508260060b60060b81525050508080600101915050614225565b5097509795505050505050565b8060020b8260020b126142f2576040805162461bcd60e51b8152602060048201526003602482015262544c5560e81b604482015290519081900360640190fd5b620d89e719600283900b1215614335576040805162461bcd60e51b8152602060048201526003602482015262544c4d60e81b604482015290519081900360640190fd5b620d89e8600282900b1315614377576040805162461bcd60e51b815260206004820152600360248201526254554d60e81b604482015290519081900360640190fd5b5050565b6040805160808101825263ffffffff9283168082526000602083018190529282019290925260016060909101819052835463ffffffff1916909117909116600160f81b17909155908190565b60020b600881901d9161010090910790565b60008082116143e757600080fd5b600160801b82106143fa57608091821c91015b68010000000000000000821061441257604091821c91015b600160201b821061442557602091821c91015b62010000821061443757601091821c91015b610100821061444857600891821c91015b6010821061445857600491821c91015b6004821061446857600291821c91015b60028210612b4257600101919050565b600080821161448657600080fd5b5060ff6001600160801b038216156144a157607f19016144a9565b608082901c91505b67ffffffffffffffff8216156144c257603f19016144ca565b604082901c91505b63ffffffff8216156144df57601f19016144e7565b602082901c91505b61ffff8216156144fa57600f1901614502565b601082901c91505b60ff821615614514576007190161451c565b600882901c91505b600f82161561452e5760031901614536565b600482901c91505b60038216156145485760011901614550565b600282901c91505b6001821615612b425760001901919050565b6000836001600160a01b0316856001600160a01b03161115614582579293925b816145af576145aa836001600160801b03168686036001600160a01b0316600160601b61322f565b6145d2565b6145d2836001600160801b03168686036001600160a01b0316600160601b6140ba565b90505b949350505050565b6000836001600160a01b0316856001600160a01b031611156145fd579293925b600160601b600160e01b03606084901b166001600160a01b03868603811690871661462757600080fd5b8361465757866001600160a01b031661464a8383896001600160a01b031661322f565b8161465157fe5b0461467d565b61467d61466e8383896001600160a01b03166140ba565b886001600160a01b0316614be5565b979650505050505050565b600080856001600160a01b03161161469f57600080fd5b6000846001600160801b0316116146b557600080fd5b816146c7576145aa8585856001614bf0565b6145d28585856001614cd1565b600080856001600160a01b0316116146eb57600080fd5b6000846001600160801b03161161470157600080fd5b81614713576145aa8585856000614cd1565b6145d28585856000614bf0565b6147286154f1565b600085600001518503905060405180608001604052808663ffffffff1681526020018263ffffffff168660020b0288602001510160060b81526020016000856001600160801b03161161477c57600161477e565b845b6001600160801b031663ffffffff60801b608085901b168161479c57fe5b048860400151016001600160a01b0316815260200160011515815250915050949350505050565b6147cb6154f1565b6147d36154f1565b888561ffff1661ffff81106147e457fe5b60408051608081018252919092015463ffffffff8116808352600160201b8204600690810b810b900b6020840152600160581b82046001600160a01b031693830193909352600160f81b900460ff1615156060820152925061484890899089614db4565b15614880578663ffffffff16826000015163ffffffff16141561486a57613465565b8161487783898988614720565b91509150613465565b888361ffff168660010161ffff168161489557fe5b0661ffff1661ffff81106148a557fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b9091041615156060820181905290925061495a57604080516080810182528a5463ffffffff81168252600160201b8104600690810b810b900b6020830152600160581b81046001600160a01b031692820192909252600160f81b90910460ff161515606082015291505b61496988836000015189614db4565b6149a0576040805162461bcd60e51b815260206004820152600360248201526213d31160ea1b604482015290519081900360640190fd5b6149ad8989898887614e75565b9150915097509795505050505050565b60006149cc60078787876140f4565b60015460025491925090600080600f87900b15614b125760006149ed612b7e565b6000805460045492935090918291614a379160089186918591600160a01b810460020b9161ffff600160b81b83048116926001600160801b0390921691600160c81b9004166132df565b9092509050614a7160058d8b8d8b8b87898b60007f0000000000000000000000000000000000000000000000000000000000000000615013565b9450614aa860058c8b8d8b8b87898b60017f0000000000000000000000000000000000000000000000000000000000000000615013565b93508415614adc57614adc60068d7f00000000000000000000000000000000000000000000000000000000000000006151cc565b8315614b0e57614b0e60068c7f00000000000000000000000000000000000000000000000000000000000000006151cc565b5050505b600080614b2460058c8c8b8a8a615232565b9092509050614b35878a84846152de565b600089600f0b1215614b63578315614b5257614b5260058c615473565b8215614b6357614b6360058b615473565b50505050505095945050505050565b60008082600f0b12614b9857614b93614b8e85858560016145dd565b6131e7565b6145d5565b614bab614b8e85858560000360006145dd565b600003949350505050565b60008082600f0b12614bd257614b93614b8e8585856001614562565b614bab614b8e8585856000036000614562565b808204910615150190565b60008115614c635760006001600160a01b03841115614c2657614c2184600160601b876001600160801b031661322f565b614c3e565b6001600160801b038516606085901b81614c3c57fe5b045b9050614c5b614c566001600160a01b03881683613d1e565b61549f565b9150506145d5565b60006001600160a01b03841115614c9157614c8c84600160601b876001600160801b03166140ba565b614ca8565b614ca8606085901b6001600160801b038716614be5565b905080866001600160a01b031611614cbf57600080fd5b6001600160a01b0386160390506145d5565b600082614cdf5750836145d5565b600160601b600160e01b03606085901b168215614d6d576001600160a01b03861684810290858281614d0d57fe5b041415614d3e57818101828110614d3c57614d3283896001600160a01b0316836140ba565b93505050506145d5565b505b614d6482614d5f878a6001600160a01b03168681614d5857fe5b0490613d1e565b614be5565b925050506145d5565b6001600160a01b03861684810290858281614d8457fe5b04148015614d9157508082115b614d9a57600080fd5b808203614d32614c56846001600160a01b038b16846140ba565b60008363ffffffff168363ffffffff1611158015614dde57508363ffffffff168263ffffffff1611155b15614dfa578163ffffffff168363ffffffff16111590506132d8565b60008463ffffffff168463ffffffff1611614e21578363ffffffff16600160201b01614e29565b8363ffffffff165b64ffffffffff16905060008563ffffffff168463ffffffff1611614e59578363ffffffff16600160201b01614e61565b8363ffffffff165b64ffffffffff169091111595945050505050565b614e7d6154f1565b614e856154f1565b60008361ffff168560010161ffff1681614e9b57fe5b0661ffff169050600060018561ffff16830103905060005b506002818301048961ffff87168281614ec857fe5b0661ffff8110614ed457fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b90910416151560608201819052909550614f3e57806001019250614eb3565b898661ffff168260010181614f4f57fe5b0661ffff8110614f5b57fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b90910416151560608201528551909450600090614fc5908b908b614db4565b9050808015614fde5750614fde8a8a8760000151614db4565b15614fe95750615006565b80614ff957600182039250615000565b8160010193505b50614eb3565b5050509550959350505050565b60028a810b900b600090815260208c90526040812080546001600160801b03168261503e828d61352b565b9050846001600160801b0316816001600160801b0316111561508c576040805162461bcd60e51b81526020600482015260026024820152614c4f60f01b604482015290519081900360640190fd5b6001600160801b038281161590821615811415945015615131578c60020b8e60020b1361511957600183018b9055600283018a9055600383018054600160381b600160d81b031916600160381b6001600160a01b038c16021766ffffffffffffff191666ffffffffffffff60068b900b161763ffffffff60d81b1916600160d81b63ffffffff8a16021790555b6003830180546001600160f81b0316600160f81b1790555b82546001600160801b0319166001600160801b0382161783558561517a5782546151759061517090600160801b9004600f90810b810b908f900b613219565b613e69565b61519b565b825461519b9061517090600160801b9004600f90810b810b908f900b6131fd565b8354600f9190910b6001600160801b03908116600160801b0291161790925550909c9b505050505050505050505050565b8060020b8260020b816151db57fe5b0760020b156151e957600080fd5b6000806152048360020b8560020b816151fe57fe5b056143c7565b600191820b820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b600285810b80820b60009081526020899052604080822088850b850b83529082209193849391929184918291908a900b126152785750506001820154600283015461528b565b8360010154880391508360020154870390505b6000808b60020b8b60020b12156152ad575050600183015460028401546152c0565b84600101548a0391508460020154890390505b92909803979097039b96909503949094039850939650505050505050565b6040805160a08101825285546001600160801b0390811682526001870154602083015260028701549282019290925260038601548083166060830152600160801b900490911660808201526000600f85900b61537d5781516001600160801b0316615375576040805162461bcd60e51b815260206004820152600260248201526104e560f41b604482015290519081900360640190fd5b50805161538c565b8151615389908661352b565b90505b60006153b08360200151860384600001516001600160801b0316600160801b61322f565b905060006153d68460400151860385600001516001600160801b0316600160801b61322f565b905086600f0b6000146153fd5787546001600160801b0319166001600160801b0384161788555b60018801869055600288018590556001600160801b03821615158061542b57506000816001600160801b0316115b15615469576003880180546001600160801b031981166001600160801b039182168501821617808216600160801b9182900483168501909216021790555b5050505050505050565b600290810b810b6000908152602092909252604082208281556001810183905590810182905560030155565b806001600160a01b0381168114612b4257600080fd5b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b6040805160808101825260008082526020820181905291810182905260608101919091529056fea26469706673582212208c1ae1b580f08a89f42513d97528a61143398260de7f3536712027bea2938a6d64736f6c63430007060033a26469706673582212205bbd8bd0f0f5654b96454acee504a82440c288aa7c332f95347c9db55ef26a0864736f6c63430007060033c66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc","bin-runtime":"608060405234801561001057600080fd5b506004361061007d5760003560e01c8063890357301161005b578063890357301461013b5780638a7c195f146101855780638da5cb5b146101b0578063a1671295146101b85761007d565b806313af4035146100825780631698ee82146100aa57806322afcccb14610102575b600080fd5b6100a86004803603602081101561009857600080fd5b50356001600160a01b03166101f4565b005b6100e6600480360360608110156100c057600080fd5b5080356001600160a01b03908116916020810135909116906040013562ffffff16610267565b604080516001600160a01b039092168252519081900360200190f35b6101246004803603602081101561011857600080fd5b503562ffffff16610293565b6040805160029290920b8252519081900360200190f35b6101436102a8565b604080516001600160a01b0396871681529486166020860152929094168383015262ffffff16606083015260029290920b608082015290519081900360a00190f35b6100a86004803603604081101561019b57600080fd5b5062ffffff813516906020013560020b6102de565b6100e66103a1565b6100e6600480360360608110156101ce57600080fd5b5080356001600160a01b03908116916020810135909116906040013562ffffff166103b0565b6003546001600160a01b0316331461020b57600080fd5b6003546040516001600160a01b038084169216907fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c90600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b60056020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b60046020526000908152604090205460020b81565b600054600154600280546001600160a01b03938416939283169281169162ffffff600160a01b83041691600160b81b9004900b85565b6003546001600160a01b031633146102f557600080fd5b620f42408262ffffff161061030957600080fd5b60008160020b13801561032057506140008160020b125b61032957600080fd5b62ffffff8216600090815260046020526040902054600290810b900b1561034f57600080fd5b62ffffff828116600081815260046020526040808220805462ffffff1916600287900b958616179055517fc66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc9190a35050565b6003546001600160a01b031681565b60006103ba610546565b826001600160a01b0316846001600160a01b031614156103d957600080fd5b600080846001600160a01b0316866001600160a01b0316106103fc5784866103ff565b85855b90925090506001600160a01b03821661041757600080fd5b62ffffff8416600090815260046020526040902054600290810b9081900b61043e57600080fd5b6001600160a01b0383811660009081526005602090815260408083208685168452825280832062ffffff8a168452909152902054161561047d57600080fd5b61048a308484888561057d565b6001600160a01b03808516600081815260056020818152604080842089871680865290835281852062ffffff8e168087529084528286208054988a166001600160a01b0319998a1681179091558287529484528286208787528452828620818752845294829020805490971684179096558051600289900b815291820192909252815195995091947f783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b71189281900390910190a45050509392505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461057b57600080fd5b565b6040805160a0810182526001600160a01b03878116808352878216602080850182905292881684860181905262ffffff888116606080880182905260028a810b6080998a01819052600080546001600160a01b03199081169099178155600180548a16891790558254909816861762ffffff60a01b1916600160a01b85021762ffffff60b81b1916600160b81b91830b9095160293909317909255875180870194909452838801929092528281019190915285518083039091018152930193849052825192909101919091209091610654906106ab565b8190604051809103906000f5905080158015610674573d6000803e3d6000fd5b50600080546001600160a01b0319908116909155600180549091169055600280546001600160d01b03191690559695505050505050565b615798806106b98339019056fe6101606040523480156200001257600080fd5b503060601b60805260408051630890357360e41b81529051600091339163890357309160048082019260a092909190829003018186803b1580156200005657600080fd5b505afa1580156200006b573d6000803e3d6000fd5b505050506040513d60a08110156200008257600080fd5b508051602080830151604084015160608086015160809096015160e896871b6001600160e81b0319166101005291811b6001600160601b031990811660e05292811b831660c0529390931b1660a052600282810b900b90921b610120529150620000f79082906200010f811b62002adb17901c565b60801b6001600160801b03191661014052506200017d565b60008082600281900b620d89e719816200012557fe5b05029050600083600281900b620d89e8816200013d57fe5b0502905060008460020b83830360020b816200015557fe5b0560010190508062ffffff166001600160801b038016816200017357fe5b0495945050505050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160e81c6101205160e81c6101405160801c61554e6200024a60003980611fab5280614a4d5280614a84525080610bd852806128975280614ab85280614aea525080610cc7528061198852806119bf52806128df5250806111855280611a425280611eb152806123e652806128bb5280613d7c5250806108aa52806112b35280611a115280611e4b52806123605280613c33525080612038528061221f5280612873525080612b52525061554e6000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806370cf754a116100de578063c45a015511610097578063ddca3f4311610071578063ddca3f43146107d8578063f3058399146107f8578063f30dba9314610800578063f637731d146108825761018e565b8063c45a0155146107a9578063d0c93a7c146107b1578063d21220a7146107d05761018e565b806370cf754a146105a05780638206a4d1146105a857806385b66729146105d0578063883bdbfd1461060d578063a34123a714610714578063a38807f21461074e5761018e565b80633850c7bd1161014b578063490e6cbc11610125578063490e6cbc1461044c5780634f1eb3d8146104d6578063514ea4bf146105275780635339c296146105805761018e565b80633850c7bd146103395780633c8a7d8d1461039257806346141319146104325761018e565b80630dfe168114610193578063128acb08146101b75780631a686502146102645780631ad8b03b14610288578063252c09d7146102bf57806332148f6714610316575b600080fd5b61019b6108a8565b604080516001600160a01b039092168252519081900360200190f35b61024b600480360360a08110156101cd57600080fd5b6001600160a01b0382358116926020810135151592604082013592606083013516919081019060a081016080820135600160201b81111561020d57600080fd5b82018360208201111561021f57600080fd5b803590602001918460018302840111600160201b8311171561024057600080fd5b5090925090506108cc565b6040805192835260208301919091528051918290030190f35b61026c61146b565b604080516001600160801b039092168252519081900360200190f35b61029061147a565b60405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390f35b6102dc600480360360208110156102d557600080fd5b5035611494565b6040805163ffffffff909516855260069390930b60208501526001600160a01b039091168383015215156060830152519081900360800190f35b6103376004803603602081101561032c57600080fd5b503561ffff166114d9565b005b6103416115d3565b604080516001600160a01b03909816885260029690960b602088015261ffff9485168787015292841660608701529216608085015260ff90911660a0840152151560c0830152519081900360e00190f35b61024b600480360360a08110156103a857600080fd5b6001600160a01b03823516916020810135600290810b92604083013590910b916001600160801b036060820135169181019060a081016080820135600160201b8111156103f457600080fd5b82018360208201111561040657600080fd5b803590602001918460018302840111600160201b8311171561042757600080fd5b509092509050611623565b61043a6118df565b60408051918252519081900360200190f35b6103376004803603608081101561046257600080fd5b6001600160a01b038235169160208101359160408201359190810190608081016060820135600160201b81111561049857600080fd5b8201836020820111156104aa57600080fd5b803590602001918460018302840111600160201b831117156104cb57600080fd5b5090925090506118e5565b610290600480360360a08110156104ec57600080fd5b506001600160a01b03813516906020810135600290810b91604081013590910b906001600160801b0360608201358116916080013516611d40565b6105446004803603602081101561053d57600080fd5b5035611f5a565b604080516001600160801b0396871681526020810195909552848101939093529084166060840152909216608082015290519081900360a00190f35b61043a6004803603602081101561059657600080fd5b503560010b611f97565b61026c611fa9565b610337600480360360408110156105be57600080fd5b5060ff81358116916020013516611fcd565b610290600480360360608110156105e657600080fd5b506001600160a01b03813516906001600160801b03602082013581169160400135166121b1565b61067b6004803603602081101561062357600080fd5b810190602081018135600160201b81111561063d57600080fd5b82018360208201111561064f57600080fd5b803590602001918460208302840111600160201b8311171561067057600080fd5b50909250905061247e565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156106bf5781810151838201526020016106a7565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156106fe5781810151838201526020016106e6565b5050505090500194505050505060405180910390f35b61024b6004803603606081101561072a57600080fd5b508035600290810b91602081013590910b90604001356001600160801b031661250b565b6107786004803603604081101561076457600080fd5b508035600290810b9160200135900b612682565b6040805160069490940b84526001600160a01b03909216602084015263ffffffff1682820152519081900360600190f35b61019b612871565b6107b9612895565b6040805160029290920b8252519081900360200190f35b61019b6128b9565b6107e06128dd565b6040805162ffffff9092168252519081900360200190f35b61043a612901565b6108206004803603602081101561081657600080fd5b503560020b612907565b604080516001600160801b039099168952600f9790970b602089015287870195909552606087019390935260069190910b60808601526001600160a01b031660a085015263ffffffff1660c0840152151560e083015251908190036101000190f35b6103376004803603602081101561089857600080fd5b50356001600160a01b0316612971565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108d7612b47565b8561090e576040805162461bcd60e51b8152602060048201526002602482015261415360f01b604482015290519081900360640190fd5b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602083015261ffff600160b81b8204811693830193909352600160c81b810483166060830152600160d81b8104909216608082015260ff600160e81b8304811660a0830152600160f01b909204909116151560c082018190526109c7576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b87610a125780600001516001600160a01b0316866001600160a01b0316118015610a0d575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716105b610a44565b80600001516001600160a01b0316866001600160a01b0316108015610a4457506401000276a36001600160a01b038716115b610a7b576040805162461bcd60e51b815260206004820152600360248201526214d41360ea1b604482015290519081900360640190fd5b6000805460ff60f01b191681556040805160c08101909152808a610aaa5760048460a0015160ff16901c610abd565b60108460a0015160ff1681610abb57fe5b065b60ff1681526004546001600160801b03166020820152604001610ade612b7e565b63ffffffff168152602001600060060b815260200160006001600160a01b031681526020016000151581525090506000808913905060006040518060e001604052808b81526020016000815260200185600001516001600160a01b03168152602001856020015160020b81526020018c610b5a57600254610b5e565b6001545b815260200160006001600160801b0316815260200184602001516001600160801b031681525090505b805115801590610bad5750886001600160a01b031681604001516001600160a01b031614155b15610f7757610bba6154b5565b60408201516001600160a01b031681526060820151610bfd906006907f00000000000000000000000000000000000000000000000000000000000000008f612b82565b15156040830152600290810b810b60208301819052620d89e719910b1215610c2e57620d89e7196020820152610c4d565b6020810151620d89e860029190910b1315610c4d57620d89e860208201525b610c5a8160200151612cc4565b6001600160a01b031660608201526040820151610ceb908d610c94578b6001600160a01b031683606001516001600160a01b031611610cae565b8b6001600160a01b031683606001516001600160a01b0316105b610cbc578260600151610cbe565b8b5b60c085015185517f0000000000000000000000000000000000000000000000000000000000000000612ff5565b60c085015260a084015260808301526001600160a01b031660408301528215610d4d57610d218160c001518260800151016131e7565b825103825260a0810151610d4390610d38906131e7565b6020840151906131fd565b6020830152610d88565b610d5a8160a001516131e7565b825101825260c08101516080820151610d8291610d7791016131e7565b602084015190613219565b60208301525b835160ff1615610dce576000846000015160ff168260c0015181610da857fe5b60c0840180519290910491829003905260a0840180519091016001600160801b03169052505b60c08201516001600160801b031615610e0d57610e018160c00151600160801b8460c001516001600160801b031661322f565b60808301805190910190525b80606001516001600160a01b031682604001516001600160a01b03161415610f3657806040015115610f0d578360a00151610e9757610e75846040015160008760200151886040015188602001518a6060015160086132df909695949392919063ffffffff16565b6001600160a01b03166080860152600690810b900b6060850152600160a08501525b6000610ee382602001518e610eae57600154610eb4565b84608001515b8f610ec3578560800151610ec7565b6002545b608089015160608a015160408b01516005959493929190613471565b90508c15610eef576000035b610efd8360c001518261352b565b6001600160801b031660c0840152505b8b610f1c578060200151610f25565b60018160200151035b600290810b900b6060830152610f71565b80600001516001600160a01b031682604001516001600160a01b031614610f7157610f6482604001516135e1565b600290810b900b60608301525b50610b87565b836020015160020b816060015160020b1461104557600080610fc586604001518660400151886020015188602001518a606001518b6080015160086138fc909695949392919063ffffffff16565b604085015160608601516000805461ffff60c81b1916600160c81b61ffff958616021761ffff60b81b1916600160b81b95909416949094029290921762ffffff60a01b1916600160a01b62ffffff60029490940b9390931692909202919091176001600160a01b0319166001600160a01b039091161790555061106a9050565b6040810151600080546001600160a01b0319166001600160a01b039092169190911790555b8060c001516001600160801b031683602001516001600160801b0316146110b05760c0810151600480546001600160801b0319166001600160801b039092169190911790555b8a1561110057608081015160015560a08101516001600160801b0316156110fb5760a0810151600380546001600160801b031981166001600160801b03918216909301169190911790555b611146565b608081015160025560a08101516001600160801b0316156111465760a0810151600380546001600160801b03808216600160801b92839004821690940116029190911790555b8115158b15151461115f57602081015181518b0361116c565b80600001518a0381602001515b90965094508a156112a55760008512156111ae576111ae7f00000000000000000000000000000000000000000000000000000000000000008d87600003613a97565b60006111b8613be5565b9050336001600160a01b031663fa461e3388888c8c6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561123c57600080fd5b505af1158015611250573d6000803e3d6000fd5b5050505061125c613be5565b6112668289613d1e565b111561129f576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b506113cf565b60008612156112dc576112dc7f00000000000000000000000000000000000000000000000000000000000000008d88600003613a97565b60006112e6613d2e565b9050336001600160a01b031663fa461e3388888c8c6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561136a57600080fd5b505af115801561137e573d6000803e3d6000fd5b5050505061138a613d2e565b6113948288613d1e565b11156113cd576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b505b60408082015160c083015160608085015184518b8152602081018b90526001600160a01b03948516818701526001600160801b039093169183019190915260020b60808201529151908e169133917fc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca679181900360a00190a350506000805460ff60f01b1916600160f01b17905550919890975095505050505050565b6004546001600160801b031681565b6003546001600160801b0380821691600160801b90041682565b60088161ffff81106114a557600080fd5b015463ffffffff81169150600160201b810460060b90600160581b81046001600160a01b031690600160f81b900460ff1684565b600054600160f01b900460ff1661151d576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b19169055611532612b47565b60008054600160d81b900461ffff169061154e60088385613dc6565b6000805461ffff808416600160d81b810261ffff60d81b19909316929092179092559192508316146115bb576040805161ffff80851682528316602082015281517fac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a929181900390910190a15b50506000805460ff60f01b1916600160f01b17905550565b6000546001600160a01b03811690600160a01b810460020b9061ffff600160b81b8204811691600160c81b8104821691600160d81b8204169060ff600160e81b8204811691600160f01b90041687565b600080548190600160f01b900460ff1661166a576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b191690556001600160801b03851661168a57600080fd5b6000806116d860405180608001604052808c6001600160a01b031681526020018b60020b81526020018a60020b81526020016116ce8a6001600160801b0316613e69565b600f0b9052613e7a565b925092505081935080925060008060008611156116fa576116f7613be5565b91505b841561170b57611708613d2e565b90505b336001600160a01b031663d348799787878b8b6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561178d57600080fd5b505af11580156117a1573d6000803e3d6000fd5b5050505060008611156117f8576117b6613be5565b6117c08388613d1e565b11156117f8576040805162461bcd60e51b815260206004820152600260248201526104d360f41b604482015290519081900360640190fd5b841561184857611806613d2e565b6118108287613d1e565b1115611848576040805162461bcd60e51b81526020600482015260026024820152614d3160f01b604482015290519081900360640190fd5b8960020b8b60020b8d6001600160a01b03167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338d8b8b60405180856001600160a01b03168152602001846001600160801b0316815260200183815260200182815260200194505050505060405180910390a450506000805460ff60f01b1916600160f01b17905550919890975095505050505050565b60025481565b600054600160f01b900460ff16611929576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905561193e612b47565b6004546001600160801b031680611980576040805162461bcd60e51b81526020600482015260016024820152601360fa1b604482015290519081900360640190fd5b60006119b5867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f42406140ba565b905060006119ec867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f42406140ba565b905060006119f8613be5565b90506000611a04613d2e565b90508815611a3757611a377f00000000000000000000000000000000000000000000000000000000000000008b8b613a97565b8715611a6857611a687f00000000000000000000000000000000000000000000000000000000000000008b8a613a97565b336001600160a01b031663e9cbafb085858a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b158015611aea57600080fd5b505af1158015611afe573d6000803e3d6000fd5b505050506000611b0c613be5565b90506000611b18613d2e565b905081611b258588613d1e565b1115611b5d576040805162461bcd60e51b8152602060048201526002602482015261046360f41b604482015290519081900360640190fd5b80611b688487613d1e565b1115611ba0576040805162461bcd60e51b8152602060048201526002602482015261463160f01b604482015290519081900360640190fd5b8382038382038115611c2f5760008054600160e81b9004600f16908115611bd3578160ff168481611bcd57fe5b04611bd6565b60005b90506001600160801b03811615611c0957600380546001600160801b038082168401166001600160801b03199091161790555b611c23818503600160801b8d6001600160801b031661322f565b60018054909101905550505b8015611cba5760008054600160e81b900460041c600f16908115611c5f578160ff168381611c5957fe5b04611c62565b60005b90506001600160801b03811615611c9457600380546001600160801b03600160801b8083048216850182160291161790555b611cae818403600160801b8d6001600160801b031661322f565b60028054909101905550505b8d6001600160a01b0316336001600160a01b03167fbdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca6338f8f86866040518085815260200184815260200183815260200182815260200194505050505060405180910390a350506000805460ff60f01b1916600160f01b179055505050505050505050505050565b600080548190600160f01b900460ff16611d87576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b19168155611da160073389896140f4565b60038101549091506001600160801b0390811690861611611dc25784611dd1565b60038101546001600160801b03165b60038201549093506001600160801b03600160801b909104811690851611611df95783611e0f565b6003810154600160801b90046001600160801b03165b91506001600160801b03831615611e74576003810180546001600160801b031981166001600160801b03918216869003821617909155611e74907f0000000000000000000000000000000000000000000000000000000000000000908a908616613a97565b6001600160801b03821615611eda576003810180546001600160801b03600160801b808304821686900382160291811691909117909155611eda907f0000000000000000000000000000000000000000000000000000000000000000908a908516613a97565b604080516001600160a01b038a1681526001600160801b0380861660208301528416818301529051600288810b92908a900b9133917f70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0919081900360600190a4506000805460ff60f01b1916600160f01b17905590969095509350505050565b60076020526000908152604090208054600182015460028301546003909301546001600160801b0392831693919281811691600160801b90041685565b60066020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600054600160f01b900460ff16612011576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905560408051638da5cb5b60e01b815290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638da5cb5b916004808301926020929190829003018186803b15801561207e57600080fd5b505afa158015612092573d6000803e3d6000fd5b505050506040513d60208110156120a857600080fd5b50516001600160a01b031633146120be57600080fd5b60ff821615806120e1575060048260ff16101580156120e15750600a8260ff1611155b801561210b575060ff8116158061210b575060048160ff161015801561210b5750600a8160ff1611155b61211457600080fd5b60008054610ff0600484901b16840160ff908116600160e81b90810260ff60e81b19841617909355919004167f973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b1336010826040805160ff9390920683168252600f600486901c16602083015286831682820152918516606082015290519081900360800190a150506000805460ff60f01b1916600160f01b17905550565b600080548190600160f01b900460ff166121f8576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905560408051638da5cb5b60e01b815290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638da5cb5b916004808301926020929190829003018186803b15801561226557600080fd5b505afa158015612279573d6000803e3d6000fd5b505050506040513d602081101561228f57600080fd5b50516001600160a01b031633146122a557600080fd5b6003546001600160801b03908116908516116122c157836122ce565b6003546001600160801b03165b6003549092506001600160801b03600160801b9091048116908416116122f45782612308565b600354600160801b90046001600160801b03165b90506001600160801b03821615612389576003546001600160801b038381169116141561233757600019909101905b600380546001600160801b031981166001600160801b03918216859003821617909155612389907f00000000000000000000000000000000000000000000000000000000000000009087908516613a97565b6001600160801b0381161561240f576003546001600160801b03828116600160801b9092041614156123ba57600019015b600380546001600160801b03600160801b80830482168590038216029181169190911790915561240f907f00000000000000000000000000000000000000000000000000000000000000009087908416613a97565b604080516001600160801b0380851682528316602082015281516001600160a01b0388169233927f596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151929081900390910190a36000805460ff60f01b1916600160f01b1790559094909350915050565b606080612489612b47565b612500612494612b7e565b858580806020026020016040519081016040528093929190818152602001838360200280828437600092018290525054600454600896959450600160a01b820460020b935061ffff600160b81b8304811693506001600160801b0390911691600160c81b900416614158565b915091509250929050565b600080548190600160f01b900460ff16612552576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916815560408051608081018252338152600288810b602083015287900b91810191909152819081906125ab906060810161259e6001600160801b038a16613e69565b600003600f0b9052613e7a565b92509250925081600003945080600003935060008511806125cc5750600084115b1561260b576003830180546001600160801b038082168089018216600160801b93849004831689019092169092029091176001600160801b0319161790555b604080516001600160801b0388168152602081018790528082018690529051600289810b92908b900b9133917f0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c919081900360600190a450506000805460ff60f01b1916600160f01b179055509094909350915050565b600080600061268f612b47565b61269985856142b2565b600285810b810b60009081526005602052604080822087840b90930b825281206003830154600681900b93600160381b82046001600160a01b0316928492600160d81b810463ffffffff169284929091600160f81b900460ff16806126fd57600080fd5b6003820154600681900b9850600160381b81046001600160a01b03169650600160d81b810463ffffffff169450600160f81b900460ff168061273e57600080fd5b50506040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b810b6020840181905261ffff600160b81b8404811695850195909552600160c81b830485166060850152600160d81b8304909416608084015260ff600160e81b8304811660a0850152600160f01b909204909116151560c08301529093508e810b91900b121590506127e75750939094039650900393509003905061286a565b8a60020b816020015160020b121561285b576000612803612b7e565b6020830151604084015160045460608601519394506000938493612839936008938893879392916001600160801b0316906132df565b9a9003989098039b50509490960392909203965090910303925061286a915050565b50949093039650039350900390505b9250925092565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b60056020526000908152604090208054600182015460028301546003909301546001600160801b03831693600160801b909304600f0b9290600681900b90600160381b81046001600160a01b031690600160d81b810463ffffffff1690600160f81b900460ff1688565b6000546001600160a01b0316156129b4576040805162461bcd60e51b8152602060048201526002602482015261414960f01b604482015290519081900360640190fd5b60006129bf826135e1565b90506000806129d76129cf612b7e565b60089061437b565b6040805160e0810182526001600160a01b038816808252600288810b6020808501829052600085870181905261ffff898116606088018190529089166080880181905260a08801839052600160c0909801979097528154600160f01b6001600160a01b0319909116871762ffffff60a01b1916600160a01b62ffffff9787900b97909716969096029590951763ffffffff60b81b1916600160c81b9091021761ffff60d81b1916600160d81b9096029590951761ffff60e81b191692909217909355835191825281019190915281519395509193507f98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c9592918290030190a150505050565b60008082600281900b620d89e71981612af057fe5b05029050600083600281900b620d89e881612b0757fe5b0502905060008460020b83830360020b81612b1e57fe5b0560010190508062ffffff166001600160801b03801681612b3b57fe5b0493505050505b919050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612b7c57600080fd5b565b4290565b60008060008460020b8660020b81612b9657fe5b05905060008660020b128015612bbd57508460020b8660020b81612bb657fe5b0760020b15155b15612bc757600019015b8315612c3c57600080612bd9836143c7565b600182810b810b600090815260208d9052604090205460ff83169190911b80016000190190811680151597509294509092509085612c1e57888360ff16860302612c31565b88612c28826143d9565b840360ff168603025b965050505050612cba565b600080612c4b836001016143c7565b91509150600060018260ff166001901b031990506000818b60008660010b60010b8152602001908152602001600020541690508060001415955085612c9d57888360ff0360ff16866001010102612cb3565b8883612ca883614478565b0360ff168660010101025b9650505050505b5094509492505050565b60008060008360020b12612cdb578260020b612ce3565b8260020b6000035b9050620d89e8811115612d21576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b600060018216612d3557600160801b612d47565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612d7b576ffff97272373d413259a46990580e213a0260801c5b6004821615612d9a576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615612db9576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612dd8576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612df7576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615612e16576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615612e35576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615612e55576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615612e75576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615612e95576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615612eb5576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615612ed5576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612ef5576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612f15576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615612f35576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615612f56576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615612f76576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615612f95576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615612fb2576b048a170391f7dc42444e8fa20260801c5b60008460020b1315612fcd578060001981612fc957fe5b0490505b600160201b810615612fe0576001612fe3565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a16101581871280159061307a57600061302e8989620f42400362ffffff16620f424061322f565b905082613047576130428c8c8c6001614562565b613054565b6130548b8d8c60016145dd565b9550858110613065578a9650613074565b6130718c8b8386614688565b96505b506130c4565b816130915761308c8b8b8b60006145dd565b61309e565b61309e8a8c8b6000614562565b93508388600003106130b2578995506130c4565b6130c18b8a8a600003856146d4565b95505b6001600160a01b038a8116908716148215613127578080156130e35750815b6130f9576130f4878d8c60016145dd565b6130fb565b855b9550808015613108575081155b61311e57613119878d8c6000614562565b613120565b845b9450613171565b8080156131315750815b613147576131428c888c6001614562565b613149565b855b9550808015613156575081155b61316c576131678c888c60006145dd565b61316e565b845b94505b8115801561318157508860000385115b1561318d578860000394505b8180156131ac57508a6001600160a01b0316876001600160a01b031614155b156131bb5785890393506131d8565b6131d5868962ffffff168a620f42400362ffffff166140ba565b93505b50505095509550955095915050565b6000600160ff1b82106131f957600080fd5b5090565b8082038281131560008312151461321357600080fd5b92915050565b8181018281121560008312151461321357600080fd5b6000808060001985870986860292508281109083900303905080613265576000841161325a57600080fd5b5082900490506132d8565b80841161327157600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60008063ffffffff8716613385576000898661ffff1661ffff811061330057fe5b60408051608081018252919092015463ffffffff808216808452600160201b8304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff16151560608301529092508a16146133715761336e818a8988614720565b90505b806020015181604001519250925050613465565b86880360008061339a8c8c858c8c8c8c6147c3565b91509150816000015163ffffffff168363ffffffff1614156133cc578160200151826040015194509450505050613465565b805163ffffffff848116911614156133f4578060200151816040015194509450505050613465565b8151815160208085015190840151918390039286039163ffffffff80841692908516910360060b8161342257fe5b05028460200151018263ffffffff168263ffffffff1686604001518660400151036001600160a01b0316028161345457fe5b048560400151019650965050505050505b97509795505050505050565b600295860b860b60009081526020979097526040909620600181018054909503909455938301805490920390915560038201805463ffffffff600160d81b6001600160a01b03600160381b808504821690960316909402600160381b600160d81b031990921691909117600681810b90960390950b66ffffffffffffff1666ffffffffffffff199095169490941782810485169095039093160263ffffffff60d81b1990931692909217905554600160801b9004600f0b90565b60008082600f0b121561359057826001600160801b03168260000384039150816001600160801b03161061358b576040805162461bcd60e51b81526020600482015260026024820152614c5360f01b604482015290519081900360640190fd5b613213565b826001600160801b03168284019150816001600160801b03161015613213576040805162461bcd60e51b81526020600482015260026024820152614c4160f01b604482015290519081900360640190fd5b60006401000276a36001600160a01b0383161080159061361d575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b613652576040805162461bcd60e51b81526020600482015260016024820152602960f91b604482015290519081900360640190fd5b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c979088119617909417909217179091171717608081106136e657607f810383901c91506136f0565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c600160381b161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b146138ed57886001600160a01b03166138d182612cc4565b6001600160a01b031611156138e657816138e8565b805b6138ef565b815b9998505050505050505050565b6000806000898961ffff1661ffff811061391257fe5b60408051608081018252919092015463ffffffff808216808452600160201b8304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff1615156060830152909250891614156139815788859250925050613465565b8461ffff168461ffff161180156139a257506001850361ffff168961ffff16145b156139af578391506139b3565b8491505b8161ffff168960010161ffff16816139c757fe5b0692506139d681898989614720565b8a8461ffff1661ffff81106139e757fe5b825191018054602084015160408501516060909501511515600160f81b026001600160f81b036001600160a01b03909616600160581b027fff0000000000000000000000000000000000000000ffffffffffffffffffffff60069390930b66ffffffffffffff16600160201b026affffffffffffff000000001963ffffffff90971663ffffffff199095169490941795909516929092171692909217929092161790555097509795505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b60208310613b135780518252601f199092019160209182019101613af4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114613b75576040519150601f19603f3d011682016040523d82523d6000602084013e613b7a565b606091505b5091509150818015613ba8575080511580613ba85750808060200190516020811015613ba557600080fd5b50515b613bde576040805162461bcd60e51b81526020600482015260026024820152612a2360f11b604482015290519081900360640190fd5b5050505050565b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693919290918291908083835b60208310613c7e5780518252601f199092019160209182019101613c5f565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114613cde576040519150601f19603f3d011682016040523d82523d6000602084013e613ce3565b606091505b5091509150818015613cf757506020815110155b613d0057600080fd5b808060200190516020811015613d1557600080fd5b50519250505090565b8082018281101561321357600080fd5b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016939192909182919080838360208310613c7e5780518252601f199092019160209182019101613c5f565b6000808361ffff1611613e04576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b8261ffff168261ffff1611613e1a5750816132d8565b825b8261ffff168161ffff161015613e60576001858261ffff1661ffff8110613e3f57fe5b01805463ffffffff191663ffffffff92909216919091179055600101613e1c565b50909392505050565b80600f81900b8114612b4257600080fd5b6000806000613e87612b47565b613e99846020015185604001516142b2565b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602080840182905261ffff600160b81b8404811685870152600160c81b84048116606080870191909152600160d81b8504909116608086015260ff600160e81b8504811660a0870152600160f01b909404909316151560c085015288519089015194890151928901519394613f3d94919390929091906149bd565b93508460600151600f0b6000146140b257846020015160020b816020015160020b1215613f9257613f8b613f748660200151612cc4565b613f818760400151612cc4565b8760600151614b72565b92506140b2565b846040015160020b816020015160020b12156140885760045460408201516001600160801b0390911690613fe490613fc8612b7e565b60208501516060860151608087015160089493929187916138fc565b6000805461ffff60c81b1916600160c81b61ffff938416021761ffff60b81b1916600160b81b939092169290920217905581516040870151614034919061402a90612cc4565b8860600151614b72565b93506140526140468760200151612cc4565b83516060890151614bb6565b925061406281876060015161352b565b600480546001600160801b0319166001600160801b0392909216919091179055506140b2565b6140af6140988660200151612cc4565b6140a58760400151612cc4565b8760600151614bb6565b91505b509193909250565b60006140c784848461322f565b9050600082806140d357fe5b84860911156132d85760001981106140ea57600080fd5b6001019392505050565b6040805160609490941b6bffffffffffffffffffffffff1916602080860191909152600293840b60e890811b60348701529290930b90911b60378401528051808403601a018152603a90930181528251928201929092206000908152929052902090565b60608060008361ffff1611614198576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b865167ffffffffffffffff811180156141b057600080fd5b506040519080825280602002602001820160405280156141da578160200160208202803683370190505b509150865167ffffffffffffffff811180156141f557600080fd5b5060405190808252806020026020018201604052801561421f578160200160208202803683370190505b50905060005b87518110156142a5576142508a8a8a848151811061423f57fe5b60200260200101518a8a8a8a6132df565b84838151811061425c57fe5b6020026020010184848151811061426f57fe5b60200260200101826001600160a01b03166001600160a01b03168152508260060b60060b81525050508080600101915050614225565b5097509795505050505050565b8060020b8260020b126142f2576040805162461bcd60e51b8152602060048201526003602482015262544c5560e81b604482015290519081900360640190fd5b620d89e719600283900b1215614335576040805162461bcd60e51b8152602060048201526003602482015262544c4d60e81b604482015290519081900360640190fd5b620d89e8600282900b1315614377576040805162461bcd60e51b815260206004820152600360248201526254554d60e81b604482015290519081900360640190fd5b5050565b6040805160808101825263ffffffff9283168082526000602083018190529282019290925260016060909101819052835463ffffffff1916909117909116600160f81b17909155908190565b60020b600881901d9161010090910790565b60008082116143e757600080fd5b600160801b82106143fa57608091821c91015b68010000000000000000821061441257604091821c91015b600160201b821061442557602091821c91015b62010000821061443757601091821c91015b610100821061444857600891821c91015b6010821061445857600491821c91015b6004821061446857600291821c91015b60028210612b4257600101919050565b600080821161448657600080fd5b5060ff6001600160801b038216156144a157607f19016144a9565b608082901c91505b67ffffffffffffffff8216156144c257603f19016144ca565b604082901c91505b63ffffffff8216156144df57601f19016144e7565b602082901c91505b61ffff8216156144fa57600f1901614502565b601082901c91505b60ff821615614514576007190161451c565b600882901c91505b600f82161561452e5760031901614536565b600482901c91505b60038216156145485760011901614550565b600282901c91505b6001821615612b425760001901919050565b6000836001600160a01b0316856001600160a01b03161115614582579293925b816145af576145aa836001600160801b03168686036001600160a01b0316600160601b61322f565b6145d2565b6145d2836001600160801b03168686036001600160a01b0316600160601b6140ba565b90505b949350505050565b6000836001600160a01b0316856001600160a01b031611156145fd579293925b600160601b600160e01b03606084901b166001600160a01b03868603811690871661462757600080fd5b8361465757866001600160a01b031661464a8383896001600160a01b031661322f565b8161465157fe5b0461467d565b61467d61466e8383896001600160a01b03166140ba565b886001600160a01b0316614be5565b979650505050505050565b600080856001600160a01b03161161469f57600080fd5b6000846001600160801b0316116146b557600080fd5b816146c7576145aa8585856001614bf0565b6145d28585856001614cd1565b600080856001600160a01b0316116146eb57600080fd5b6000846001600160801b03161161470157600080fd5b81614713576145aa8585856000614cd1565b6145d28585856000614bf0565b6147286154f1565b600085600001518503905060405180608001604052808663ffffffff1681526020018263ffffffff168660020b0288602001510160060b81526020016000856001600160801b03161161477c57600161477e565b845b6001600160801b031663ffffffff60801b608085901b168161479c57fe5b048860400151016001600160a01b0316815260200160011515815250915050949350505050565b6147cb6154f1565b6147d36154f1565b888561ffff1661ffff81106147e457fe5b60408051608081018252919092015463ffffffff8116808352600160201b8204600690810b810b900b6020840152600160581b82046001600160a01b031693830193909352600160f81b900460ff1615156060820152925061484890899089614db4565b15614880578663ffffffff16826000015163ffffffff16141561486a57613465565b8161487783898988614720565b91509150613465565b888361ffff168660010161ffff168161489557fe5b0661ffff1661ffff81106148a557fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b9091041615156060820181905290925061495a57604080516080810182528a5463ffffffff81168252600160201b8104600690810b810b900b6020830152600160581b81046001600160a01b031692820192909252600160f81b90910460ff161515606082015291505b61496988836000015189614db4565b6149a0576040805162461bcd60e51b815260206004820152600360248201526213d31160ea1b604482015290519081900360640190fd5b6149ad8989898887614e75565b9150915097509795505050505050565b60006149cc60078787876140f4565b60015460025491925090600080600f87900b15614b125760006149ed612b7e565b6000805460045492935090918291614a379160089186918591600160a01b810460020b9161ffff600160b81b83048116926001600160801b0390921691600160c81b9004166132df565b9092509050614a7160058d8b8d8b8b87898b60007f0000000000000000000000000000000000000000000000000000000000000000615013565b9450614aa860058c8b8d8b8b87898b60017f0000000000000000000000000000000000000000000000000000000000000000615013565b93508415614adc57614adc60068d7f00000000000000000000000000000000000000000000000000000000000000006151cc565b8315614b0e57614b0e60068c7f00000000000000000000000000000000000000000000000000000000000000006151cc565b5050505b600080614b2460058c8c8b8a8a615232565b9092509050614b35878a84846152de565b600089600f0b1215614b63578315614b5257614b5260058c615473565b8215614b6357614b6360058b615473565b50505050505095945050505050565b60008082600f0b12614b9857614b93614b8e85858560016145dd565b6131e7565b6145d5565b614bab614b8e85858560000360006145dd565b600003949350505050565b60008082600f0b12614bd257614b93614b8e8585856001614562565b614bab614b8e8585856000036000614562565b808204910615150190565b60008115614c635760006001600160a01b03841115614c2657614c2184600160601b876001600160801b031661322f565b614c3e565b6001600160801b038516606085901b81614c3c57fe5b045b9050614c5b614c566001600160a01b03881683613d1e565b61549f565b9150506145d5565b60006001600160a01b03841115614c9157614c8c84600160601b876001600160801b03166140ba565b614ca8565b614ca8606085901b6001600160801b038716614be5565b905080866001600160a01b031611614cbf57600080fd5b6001600160a01b0386160390506145d5565b600082614cdf5750836145d5565b600160601b600160e01b03606085901b168215614d6d576001600160a01b03861684810290858281614d0d57fe5b041415614d3e57818101828110614d3c57614d3283896001600160a01b0316836140ba565b93505050506145d5565b505b614d6482614d5f878a6001600160a01b03168681614d5857fe5b0490613d1e565b614be5565b925050506145d5565b6001600160a01b03861684810290858281614d8457fe5b04148015614d9157508082115b614d9a57600080fd5b808203614d32614c56846001600160a01b038b16846140ba565b60008363ffffffff168363ffffffff1611158015614dde57508363ffffffff168263ffffffff1611155b15614dfa578163ffffffff168363ffffffff16111590506132d8565b60008463ffffffff168463ffffffff1611614e21578363ffffffff16600160201b01614e29565b8363ffffffff165b64ffffffffff16905060008563ffffffff168463ffffffff1611614e59578363ffffffff16600160201b01614e61565b8363ffffffff165b64ffffffffff169091111595945050505050565b614e7d6154f1565b614e856154f1565b60008361ffff168560010161ffff1681614e9b57fe5b0661ffff169050600060018561ffff16830103905060005b506002818301048961ffff87168281614ec857fe5b0661ffff8110614ed457fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b90910416151560608201819052909550614f3e57806001019250614eb3565b898661ffff168260010181614f4f57fe5b0661ffff8110614f5b57fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b90910416151560608201528551909450600090614fc5908b908b614db4565b9050808015614fde5750614fde8a8a8760000151614db4565b15614fe95750615006565b80614ff957600182039250615000565b8160010193505b50614eb3565b5050509550959350505050565b60028a810b900b600090815260208c90526040812080546001600160801b03168261503e828d61352b565b9050846001600160801b0316816001600160801b0316111561508c576040805162461bcd60e51b81526020600482015260026024820152614c4f60f01b604482015290519081900360640190fd5b6001600160801b038281161590821615811415945015615131578c60020b8e60020b1361511957600183018b9055600283018a9055600383018054600160381b600160d81b031916600160381b6001600160a01b038c16021766ffffffffffffff191666ffffffffffffff60068b900b161763ffffffff60d81b1916600160d81b63ffffffff8a16021790555b6003830180546001600160f81b0316600160f81b1790555b82546001600160801b0319166001600160801b0382161783558561517a5782546151759061517090600160801b9004600f90810b810b908f900b613219565b613e69565b61519b565b825461519b9061517090600160801b9004600f90810b810b908f900b6131fd565b8354600f9190910b6001600160801b03908116600160801b0291161790925550909c9b505050505050505050505050565b8060020b8260020b816151db57fe5b0760020b156151e957600080fd5b6000806152048360020b8560020b816151fe57fe5b056143c7565b600191820b820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b600285810b80820b60009081526020899052604080822088850b850b83529082209193849391929184918291908a900b126152785750506001820154600283015461528b565b8360010154880391508360020154870390505b6000808b60020b8b60020b12156152ad575050600183015460028401546152c0565b84600101548a0391508460020154890390505b92909803979097039b96909503949094039850939650505050505050565b6040805160a08101825285546001600160801b0390811682526001870154602083015260028701549282019290925260038601548083166060830152600160801b900490911660808201526000600f85900b61537d5781516001600160801b0316615375576040805162461bcd60e51b815260206004820152600260248201526104e560f41b604482015290519081900360640190fd5b50805161538c565b8151615389908661352b565b90505b60006153b08360200151860384600001516001600160801b0316600160801b61322f565b905060006153d68460400151860385600001516001600160801b0316600160801b61322f565b905086600f0b6000146153fd5787546001600160801b0319166001600160801b0384161788555b60018801869055600288018590556001600160801b03821615158061542b57506000816001600160801b0316115b15615469576003880180546001600160801b031981166001600160801b039182168501821617808216600160801b9182900483168501909216021790555b5050505050505050565b600290810b810b6000908152602092909252604082208281556001810183905590810182905560030155565b806001600160a01b0381168114612b4257600080fd5b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b6040805160808101825260008082526020820181905291810182905260608101919091529056fea26469706673582212208c1ae1b580f08a89f42513d97528a61143398260de7f3536712027bea2938a6d64736f6c63430007060033a26469706673582212205bbd8bd0f0f5654b96454acee504a82440c288aa7c332f95347c9db55ef26a0864736f6c63430007060033","devdoc":"{\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"stateVariables\":{\"feeAmountTickSpacing\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"return\":\"The tick spacing\"},\"getPool\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"return\":\"pool The pool address\"},\"owner\":{\"details\":\"Can be changed by the current owner via setOwner\",\"return\":\"The address of the factory owner\"}},\"title\":\"Canonical Uniswap V3 factory\",\"version\":1}","hashes":{"createPool(address,address,uint24)":"a1671295","enableFeeAmount(uint24,int24)":"8a7c195f","feeAmountTickSpacing(uint24)":"22afcccb","getPool(address,address,uint24)":"1698ee82","owner()":"8da5cb5b","parameters()":"89035730","setOwner(address)":"13af4035"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"stateVariables\":{\"feeAmountTickSpacing\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"return\":\"The tick spacing\"},\"getPool\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"return\":\"pool The pool address\"},\"owner\":{\"details\":\"Can be changed by the current owner via setOwner\",\"return\":\"The address of the factory owner\"}},\"title\":\"Canonical Uniswap V3 factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"parameters()\":{\"notice\":\"Get the parameters to be used in constructing the pool, set transiently during pool creation.\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"Deploys Uniswap V3 pools and manages ownership and control over pool protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"UniswapV3Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"145243:2503:0:-:0;;;145649:349;;;;;;;;;-1:-1:-1;31110:4:0;31091:24;;;;145673:5;:18;;-1:-1:-1;;;;;;145673:18:0;145681:10;145673:18;;;;;;145706:36;;145673:5;;145706:36;;145673:5;;145706:36;145774:3;145753:25;;;;:20;:25;;;:30;;-1:-1:-1;;145753:30:0;145781:2;145753:30;;;;;;:25;145798;145781:2;;145774:3;-1:-1:-1;;;;;;;;;;;145798:25:0;;145854:4;145833:26;;;;:20;:26;;;:31;;-1:-1:-1;;145833:31:0;145862:2;145833:31;;;;;;:26;145879;145862:2;;145854:4;-1:-1:-1;;;;;;;;;;;145879:26:0;;145936:5;145915:27;;;;:20;:27;;;:33;;-1:-1:-1;;145915:33:0;145945:3;145915:33;;;;;;:27;145963:28;145945:3;;145936:5;-1:-1:-1;;;;;;;;;;;145963:28:0;;145243:2503;;;;;;;;;;;","srcmap-runtime":"145243:2503:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;146907:163;;;;;;;;;;;;;;;;-1:-1:-1;146907:163:0;-1:-1:-1;;;;;146907:163:0;;:::i;:::-;;145552:90;;;;;;;;;;;;;;;;-1:-1:-1;145552:90:0;;-1:-1:-1;;;;;145552:90:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;145552:90:0;;;;;;;;;;;;;;145447:61;;;;;;;;;;;;;;;;-1:-1:-1;145447:61:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;144033:37;;;:::i;:::-;;;;-1:-1:-1;;;;;144033:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;147114:630;;;;;;;;;;;;;;;;-1:-1:-1;147114:630:0;;;;;;;;;;;:::i;145373:29::-;;;:::i;146042:821::-;;;;;;;;;;;;;;;;-1:-1:-1;146042:821:0;;-1:-1:-1;;;;;146042:821:0;;;;;;;;;;;;;;;;;;:::i;146907:163::-;146991:5;;-1:-1:-1;;;;;146991:5:0;146977:10;:19;146969:28;;;;;;147025:5;;147012:27;;-1:-1:-1;;;;;147012:27:0;;;;147025:5;;147012:27;;147025:5;;147012:27;147049:5;:14;;-1:-1:-1;;;;;;147049:14:0;-1:-1:-1;;;;;147049:14:0;;;;;;;;;;146907:163::o;145552:90::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;145552:90:0;;:::o;145447:61::-;;;;;;;;;;;;;;;:::o;144033:37::-;;;;;;;;-1:-1:-1;;;;;144033:37:0;;;;;;;;;;;;-1:-1:-1;;;144033:37:0;;;;-1:-1:-1;;;144033:37:0;;;;;:::o;147114:630::-;147218:5;;-1:-1:-1;;;;;147218:5:0;147204:10;:19;147196:28;;;;;;147248:7;147242:3;:13;;;147234:22;;;;;;147564:1;147550:11;:15;;;:38;;;;;147583:5;147569:11;:19;;;147550:38;147542:47;;;;;;147607:25;;;;;;;:20;:25;;;;;;;;;;:30;;;147599:39;;;;;;147649:25;;;;;;;;:20;:25;;;;;;:39;;-1:-1:-1;;147649:39:0;;;;;;;;;;;147703:34;;;147649:25;147703:34;147114:630;;:::o;145373:29::-;;;-1:-1:-1;;;;;145373:29:0;;:::o;146042:821::-;146178:12;31555:22;:20;:22::i;:::-;146220:6:::1;-1:-1:-1::0;;;;;146210:16:0::1;:6;-1:-1:-1::0;;;;;146210:16:0::1;;;146202:25;;;::::0;::::1;;146238:14;146254::::0;146281:6:::1;-1:-1:-1::0;;;;;146272:15:0::1;:6;-1:-1:-1::0;;;;;146272:15:0::1;;:53;;146310:6;146318;146272:53;;;146291:6;146299;146272:53;146237:88:::0;;-1:-1:-1;146237:88:0;-1:-1:-1;;;;;;146343:20:0;::::1;146335:29;;;::::0;::::1;;146394:25;::::0;::::1;146374:17;146394:25:::0;;;:20:::1;:25;::::0;;;;;::::1;::::0;;::::1;::::0;146437:16;;::::1;146429:25;;;::::0;::::1;;-1:-1:-1::0;;;;;146472:15:0;;::::1;146512:1;146472:15:::0;;;:7:::1;:15;::::0;;;;;;;:23;;::::1;::::0;;;;;;;:28:::1;::::0;::::1;::::0;;;;;;;;::::1;:42:::0;146464:51:::1;;;::::0;::::1;;146532:55;146547:4;146554:6;146562;146570:3;146575:11;146532:6;:55::i;:::-;-1:-1:-1::0;;;;;146597:15:0;;::::1;;::::0;;;:7:::1;:15;::::0;;;;;;;:23;;::::1;::::0;;;;;;;;;:28:::1;::::0;::::1;::::0;;;;;;;;;:35;;;;::::1;-1:-1:-1::0;;;;;;146597:35:0;;::::1;::::0;::::1;::::0;;;146755:15;;;;;;;;;:23;;;;;;;;:28;;;;;;;;;:35;;;;::::1;::::0;::::1;::::0;;;146805:51;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;;;;;146525:62;;-1:-1:-1;146597:28:0;;146805:51:::1;::::0;;;;;;;;::::1;31587:1;;;146042:821:::0;;;;;:::o;31354:96::-;31425:4;-1:-1:-1;;;;;31434:8:0;31417:25;;31409:34;;;;;;31354:96::o;144613:424::-;144810:98;;;;;;;;-1:-1:-1;;;;;144810:98:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;144797:111:0;;-1:-1:-1;;;;;;144797:111:0;;;;;;;;-1:-1:-1;144797:111:0;;;;;;;;;;;;;;;-1:-1:-1;;;;144797:111:0;-1:-1:-1;;;144797:111:0;;;-1:-1:-1;;;;144797:111:0;-1:-1:-1;;;144797:111:0;;;;;;;;;;;;;;144967:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;144957:42;;;;;;;;;;-1:-1:-1;;144933:69:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;145020:10:0;145013:17;;-1:-1:-1;;;;;;145013:17:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;145013:17:0;;;144918:85;144613:424;-1:-1:-1;;;;;;144613:424:0:o;-1:-1:-1:-;;;;;;;;:::o","userdoc":"{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"parameters()\":{\"notice\":\"Get the parameters to be used in constructing the pool, set transiently during pool creation.\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"Deploys Uniswap V3 pools and manages ownership and control over pool protocol fees\",\"version\":1}"},"flattened/UniswapV3Factory.sol:UniswapV3Pool":{"abi":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","bin":"","bin-runtime":"608060405234801561001057600080fd5b506004361061018e5760003560e01c806370cf754a116100de578063c45a015511610097578063ddca3f4311610071578063ddca3f43146107d8578063f3058399146107f8578063f30dba9314610800578063f637731d146108825761018e565b8063c45a0155146107a9578063d0c93a7c146107b1578063d21220a7146107d05761018e565b806370cf754a146105a05780638206a4d1146105a857806385b66729146105d0578063883bdbfd1461060d578063a34123a714610714578063a38807f21461074e5761018e565b80633850c7bd1161014b578063490e6cbc11610125578063490e6cbc1461044c5780634f1eb3d8146104d6578063514ea4bf146105275780635339c296146105805761018e565b80633850c7bd146103395780633c8a7d8d1461039257806346141319146104325761018e565b80630dfe168114610193578063128acb08146101b75780631a686502146102645780631ad8b03b14610288578063252c09d7146102bf57806332148f6714610316575b600080fd5b61019b6108a8565b604080516001600160a01b039092168252519081900360200190f35b61024b600480360360a08110156101cd57600080fd5b6001600160a01b0382358116926020810135151592604082013592606083013516919081019060a081016080820135600160201b81111561020d57600080fd5b82018360208201111561021f57600080fd5b803590602001918460018302840111600160201b8311171561024057600080fd5b5090925090506108cc565b6040805192835260208301919091528051918290030190f35b61026c61146b565b604080516001600160801b039092168252519081900360200190f35b61029061147a565b60405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390f35b6102dc600480360360208110156102d557600080fd5b5035611494565b6040805163ffffffff909516855260069390930b60208501526001600160a01b039091168383015215156060830152519081900360800190f35b6103376004803603602081101561032c57600080fd5b503561ffff166114d9565b005b6103416115d3565b604080516001600160a01b03909816885260029690960b602088015261ffff9485168787015292841660608701529216608085015260ff90911660a0840152151560c0830152519081900360e00190f35b61024b600480360360a08110156103a857600080fd5b6001600160a01b03823516916020810135600290810b92604083013590910b916001600160801b036060820135169181019060a081016080820135600160201b8111156103f457600080fd5b82018360208201111561040657600080fd5b803590602001918460018302840111600160201b8311171561042757600080fd5b509092509050611623565b61043a6118df565b60408051918252519081900360200190f35b6103376004803603608081101561046257600080fd5b6001600160a01b038235169160208101359160408201359190810190608081016060820135600160201b81111561049857600080fd5b8201836020820111156104aa57600080fd5b803590602001918460018302840111600160201b831117156104cb57600080fd5b5090925090506118e5565b610290600480360360a08110156104ec57600080fd5b506001600160a01b03813516906020810135600290810b91604081013590910b906001600160801b0360608201358116916080013516611d40565b6105446004803603602081101561053d57600080fd5b5035611f5a565b604080516001600160801b0396871681526020810195909552848101939093529084166060840152909216608082015290519081900360a00190f35b61043a6004803603602081101561059657600080fd5b503560010b611f97565b61026c611fa9565b610337600480360360408110156105be57600080fd5b5060ff81358116916020013516611fcd565b610290600480360360608110156105e657600080fd5b506001600160a01b03813516906001600160801b03602082013581169160400135166121b1565b61067b6004803603602081101561062357600080fd5b810190602081018135600160201b81111561063d57600080fd5b82018360208201111561064f57600080fd5b803590602001918460208302840111600160201b8311171561067057600080fd5b50909250905061247e565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156106bf5781810151838201526020016106a7565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156106fe5781810151838201526020016106e6565b5050505090500194505050505060405180910390f35b61024b6004803603606081101561072a57600080fd5b508035600290810b91602081013590910b90604001356001600160801b031661250b565b6107786004803603604081101561076457600080fd5b508035600290810b9160200135900b612682565b6040805160069490940b84526001600160a01b03909216602084015263ffffffff1682820152519081900360600190f35b61019b612871565b6107b9612895565b6040805160029290920b8252519081900360200190f35b61019b6128b9565b6107e06128dd565b6040805162ffffff9092168252519081900360200190f35b61043a612901565b6108206004803603602081101561081657600080fd5b503560020b612907565b604080516001600160801b039099168952600f9790970b602089015287870195909552606087019390935260069190910b60808601526001600160a01b031660a085015263ffffffff1660c0840152151560e083015251908190036101000190f35b6103376004803603602081101561089857600080fd5b50356001600160a01b0316612971565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108d7612b47565b8561090e576040805162461bcd60e51b8152602060048201526002602482015261415360f01b604482015290519081900360640190fd5b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602083015261ffff600160b81b8204811693830193909352600160c81b810483166060830152600160d81b8104909216608082015260ff600160e81b8304811660a0830152600160f01b909204909116151560c082018190526109c7576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b87610a125780600001516001600160a01b0316866001600160a01b0316118015610a0d575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716105b610a44565b80600001516001600160a01b0316866001600160a01b0316108015610a4457506401000276a36001600160a01b038716115b610a7b576040805162461bcd60e51b815260206004820152600360248201526214d41360ea1b604482015290519081900360640190fd5b6000805460ff60f01b191681556040805160c08101909152808a610aaa5760048460a0015160ff16901c610abd565b60108460a0015160ff1681610abb57fe5b065b60ff1681526004546001600160801b03166020820152604001610ade612b7e565b63ffffffff168152602001600060060b815260200160006001600160a01b031681526020016000151581525090506000808913905060006040518060e001604052808b81526020016000815260200185600001516001600160a01b03168152602001856020015160020b81526020018c610b5a57600254610b5e565b6001545b815260200160006001600160801b0316815260200184602001516001600160801b031681525090505b805115801590610bad5750886001600160a01b031681604001516001600160a01b031614155b15610f7757610bba6154b5565b60408201516001600160a01b031681526060820151610bfd906006907f00000000000000000000000000000000000000000000000000000000000000008f612b82565b15156040830152600290810b810b60208301819052620d89e719910b1215610c2e57620d89e7196020820152610c4d565b6020810151620d89e860029190910b1315610c4d57620d89e860208201525b610c5a8160200151612cc4565b6001600160a01b031660608201526040820151610ceb908d610c94578b6001600160a01b031683606001516001600160a01b031611610cae565b8b6001600160a01b031683606001516001600160a01b0316105b610cbc578260600151610cbe565b8b5b60c085015185517f0000000000000000000000000000000000000000000000000000000000000000612ff5565b60c085015260a084015260808301526001600160a01b031660408301528215610d4d57610d218160c001518260800151016131e7565b825103825260a0810151610d4390610d38906131e7565b6020840151906131fd565b6020830152610d88565b610d5a8160a001516131e7565b825101825260c08101516080820151610d8291610d7791016131e7565b602084015190613219565b60208301525b835160ff1615610dce576000846000015160ff168260c0015181610da857fe5b60c0840180519290910491829003905260a0840180519091016001600160801b03169052505b60c08201516001600160801b031615610e0d57610e018160c00151600160801b8460c001516001600160801b031661322f565b60808301805190910190525b80606001516001600160a01b031682604001516001600160a01b03161415610f3657806040015115610f0d578360a00151610e9757610e75846040015160008760200151886040015188602001518a6060015160086132df909695949392919063ffffffff16565b6001600160a01b03166080860152600690810b900b6060850152600160a08501525b6000610ee382602001518e610eae57600154610eb4565b84608001515b8f610ec3578560800151610ec7565b6002545b608089015160608a015160408b01516005959493929190613471565b90508c15610eef576000035b610efd8360c001518261352b565b6001600160801b031660c0840152505b8b610f1c578060200151610f25565b60018160200151035b600290810b900b6060830152610f71565b80600001516001600160a01b031682604001516001600160a01b031614610f7157610f6482604001516135e1565b600290810b900b60608301525b50610b87565b836020015160020b816060015160020b1461104557600080610fc586604001518660400151886020015188602001518a606001518b6080015160086138fc909695949392919063ffffffff16565b604085015160608601516000805461ffff60c81b1916600160c81b61ffff958616021761ffff60b81b1916600160b81b95909416949094029290921762ffffff60a01b1916600160a01b62ffffff60029490940b9390931692909202919091176001600160a01b0319166001600160a01b039091161790555061106a9050565b6040810151600080546001600160a01b0319166001600160a01b039092169190911790555b8060c001516001600160801b031683602001516001600160801b0316146110b05760c0810151600480546001600160801b0319166001600160801b039092169190911790555b8a1561110057608081015160015560a08101516001600160801b0316156110fb5760a0810151600380546001600160801b031981166001600160801b03918216909301169190911790555b611146565b608081015160025560a08101516001600160801b0316156111465760a0810151600380546001600160801b03808216600160801b92839004821690940116029190911790555b8115158b15151461115f57602081015181518b0361116c565b80600001518a0381602001515b90965094508a156112a55760008512156111ae576111ae7f00000000000000000000000000000000000000000000000000000000000000008d87600003613a97565b60006111b8613be5565b9050336001600160a01b031663fa461e3388888c8c6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561123c57600080fd5b505af1158015611250573d6000803e3d6000fd5b5050505061125c613be5565b6112668289613d1e565b111561129f576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b506113cf565b60008612156112dc576112dc7f00000000000000000000000000000000000000000000000000000000000000008d88600003613a97565b60006112e6613d2e565b9050336001600160a01b031663fa461e3388888c8c6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561136a57600080fd5b505af115801561137e573d6000803e3d6000fd5b5050505061138a613d2e565b6113948288613d1e565b11156113cd576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b505b60408082015160c083015160608085015184518b8152602081018b90526001600160a01b03948516818701526001600160801b039093169183019190915260020b60808201529151908e169133917fc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca679181900360a00190a350506000805460ff60f01b1916600160f01b17905550919890975095505050505050565b6004546001600160801b031681565b6003546001600160801b0380821691600160801b90041682565b60088161ffff81106114a557600080fd5b015463ffffffff81169150600160201b810460060b90600160581b81046001600160a01b031690600160f81b900460ff1684565b600054600160f01b900460ff1661151d576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b19169055611532612b47565b60008054600160d81b900461ffff169061154e60088385613dc6565b6000805461ffff808416600160d81b810261ffff60d81b19909316929092179092559192508316146115bb576040805161ffff80851682528316602082015281517fac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a929181900390910190a15b50506000805460ff60f01b1916600160f01b17905550565b6000546001600160a01b03811690600160a01b810460020b9061ffff600160b81b8204811691600160c81b8104821691600160d81b8204169060ff600160e81b8204811691600160f01b90041687565b600080548190600160f01b900460ff1661166a576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b191690556001600160801b03851661168a57600080fd5b6000806116d860405180608001604052808c6001600160a01b031681526020018b60020b81526020018a60020b81526020016116ce8a6001600160801b0316613e69565b600f0b9052613e7a565b925092505081935080925060008060008611156116fa576116f7613be5565b91505b841561170b57611708613d2e565b90505b336001600160a01b031663d348799787878b8b6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561178d57600080fd5b505af11580156117a1573d6000803e3d6000fd5b5050505060008611156117f8576117b6613be5565b6117c08388613d1e565b11156117f8576040805162461bcd60e51b815260206004820152600260248201526104d360f41b604482015290519081900360640190fd5b841561184857611806613d2e565b6118108287613d1e565b1115611848576040805162461bcd60e51b81526020600482015260026024820152614d3160f01b604482015290519081900360640190fd5b8960020b8b60020b8d6001600160a01b03167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338d8b8b60405180856001600160a01b03168152602001846001600160801b0316815260200183815260200182815260200194505050505060405180910390a450506000805460ff60f01b1916600160f01b17905550919890975095505050505050565b60025481565b600054600160f01b900460ff16611929576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905561193e612b47565b6004546001600160801b031680611980576040805162461bcd60e51b81526020600482015260016024820152601360fa1b604482015290519081900360640190fd5b60006119b5867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f42406140ba565b905060006119ec867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f42406140ba565b905060006119f8613be5565b90506000611a04613d2e565b90508815611a3757611a377f00000000000000000000000000000000000000000000000000000000000000008b8b613a97565b8715611a6857611a687f00000000000000000000000000000000000000000000000000000000000000008b8a613a97565b336001600160a01b031663e9cbafb085858a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b158015611aea57600080fd5b505af1158015611afe573d6000803e3d6000fd5b505050506000611b0c613be5565b90506000611b18613d2e565b905081611b258588613d1e565b1115611b5d576040805162461bcd60e51b8152602060048201526002602482015261046360f41b604482015290519081900360640190fd5b80611b688487613d1e565b1115611ba0576040805162461bcd60e51b8152602060048201526002602482015261463160f01b604482015290519081900360640190fd5b8382038382038115611c2f5760008054600160e81b9004600f16908115611bd3578160ff168481611bcd57fe5b04611bd6565b60005b90506001600160801b03811615611c0957600380546001600160801b038082168401166001600160801b03199091161790555b611c23818503600160801b8d6001600160801b031661322f565b60018054909101905550505b8015611cba5760008054600160e81b900460041c600f16908115611c5f578160ff168381611c5957fe5b04611c62565b60005b90506001600160801b03811615611c9457600380546001600160801b03600160801b8083048216850182160291161790555b611cae818403600160801b8d6001600160801b031661322f565b60028054909101905550505b8d6001600160a01b0316336001600160a01b03167fbdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca6338f8f86866040518085815260200184815260200183815260200182815260200194505050505060405180910390a350506000805460ff60f01b1916600160f01b179055505050505050505050505050565b600080548190600160f01b900460ff16611d87576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b19168155611da160073389896140f4565b60038101549091506001600160801b0390811690861611611dc25784611dd1565b60038101546001600160801b03165b60038201549093506001600160801b03600160801b909104811690851611611df95783611e0f565b6003810154600160801b90046001600160801b03165b91506001600160801b03831615611e74576003810180546001600160801b031981166001600160801b03918216869003821617909155611e74907f0000000000000000000000000000000000000000000000000000000000000000908a908616613a97565b6001600160801b03821615611eda576003810180546001600160801b03600160801b808304821686900382160291811691909117909155611eda907f0000000000000000000000000000000000000000000000000000000000000000908a908516613a97565b604080516001600160a01b038a1681526001600160801b0380861660208301528416818301529051600288810b92908a900b9133917f70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0919081900360600190a4506000805460ff60f01b1916600160f01b17905590969095509350505050565b60076020526000908152604090208054600182015460028301546003909301546001600160801b0392831693919281811691600160801b90041685565b60066020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600054600160f01b900460ff16612011576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905560408051638da5cb5b60e01b815290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638da5cb5b916004808301926020929190829003018186803b15801561207e57600080fd5b505afa158015612092573d6000803e3d6000fd5b505050506040513d60208110156120a857600080fd5b50516001600160a01b031633146120be57600080fd5b60ff821615806120e1575060048260ff16101580156120e15750600a8260ff1611155b801561210b575060ff8116158061210b575060048160ff161015801561210b5750600a8160ff1611155b61211457600080fd5b60008054610ff0600484901b16840160ff908116600160e81b90810260ff60e81b19841617909355919004167f973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b1336010826040805160ff9390920683168252600f600486901c16602083015286831682820152918516606082015290519081900360800190a150506000805460ff60f01b1916600160f01b17905550565b600080548190600160f01b900460ff166121f8576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905560408051638da5cb5b60e01b815290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638da5cb5b916004808301926020929190829003018186803b15801561226557600080fd5b505afa158015612279573d6000803e3d6000fd5b505050506040513d602081101561228f57600080fd5b50516001600160a01b031633146122a557600080fd5b6003546001600160801b03908116908516116122c157836122ce565b6003546001600160801b03165b6003549092506001600160801b03600160801b9091048116908416116122f45782612308565b600354600160801b90046001600160801b03165b90506001600160801b03821615612389576003546001600160801b038381169116141561233757600019909101905b600380546001600160801b031981166001600160801b03918216859003821617909155612389907f00000000000000000000000000000000000000000000000000000000000000009087908516613a97565b6001600160801b0381161561240f576003546001600160801b03828116600160801b9092041614156123ba57600019015b600380546001600160801b03600160801b80830482168590038216029181169190911790915561240f907f00000000000000000000000000000000000000000000000000000000000000009087908416613a97565b604080516001600160801b0380851682528316602082015281516001600160a01b0388169233927f596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151929081900390910190a36000805460ff60f01b1916600160f01b1790559094909350915050565b606080612489612b47565b612500612494612b7e565b858580806020026020016040519081016040528093929190818152602001838360200280828437600092018290525054600454600896959450600160a01b820460020b935061ffff600160b81b8304811693506001600160801b0390911691600160c81b900416614158565b915091509250929050565b600080548190600160f01b900460ff16612552576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916815560408051608081018252338152600288810b602083015287900b91810191909152819081906125ab906060810161259e6001600160801b038a16613e69565b600003600f0b9052613e7a565b92509250925081600003945080600003935060008511806125cc5750600084115b1561260b576003830180546001600160801b038082168089018216600160801b93849004831689019092169092029091176001600160801b0319161790555b604080516001600160801b0388168152602081018790528082018690529051600289810b92908b900b9133917f0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c919081900360600190a450506000805460ff60f01b1916600160f01b179055509094909350915050565b600080600061268f612b47565b61269985856142b2565b600285810b810b60009081526005602052604080822087840b90930b825281206003830154600681900b93600160381b82046001600160a01b0316928492600160d81b810463ffffffff169284929091600160f81b900460ff16806126fd57600080fd5b6003820154600681900b9850600160381b81046001600160a01b03169650600160d81b810463ffffffff169450600160f81b900460ff168061273e57600080fd5b50506040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b810b6020840181905261ffff600160b81b8404811695850195909552600160c81b830485166060850152600160d81b8304909416608084015260ff600160e81b8304811660a0850152600160f01b909204909116151560c08301529093508e810b91900b121590506127e75750939094039650900393509003905061286a565b8a60020b816020015160020b121561285b576000612803612b7e565b6020830151604084015160045460608601519394506000938493612839936008938893879392916001600160801b0316906132df565b9a9003989098039b50509490960392909203965090910303925061286a915050565b50949093039650039350900390505b9250925092565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b60056020526000908152604090208054600182015460028301546003909301546001600160801b03831693600160801b909304600f0b9290600681900b90600160381b81046001600160a01b031690600160d81b810463ffffffff1690600160f81b900460ff1688565b6000546001600160a01b0316156129b4576040805162461bcd60e51b8152602060048201526002602482015261414960f01b604482015290519081900360640190fd5b60006129bf826135e1565b90506000806129d76129cf612b7e565b60089061437b565b6040805160e0810182526001600160a01b038816808252600288810b6020808501829052600085870181905261ffff898116606088018190529089166080880181905260a08801839052600160c0909801979097528154600160f01b6001600160a01b0319909116871762ffffff60a01b1916600160a01b62ffffff9787900b97909716969096029590951763ffffffff60b81b1916600160c81b9091021761ffff60d81b1916600160d81b9096029590951761ffff60e81b191692909217909355835191825281019190915281519395509193507f98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c9592918290030190a150505050565b60008082600281900b620d89e71981612af057fe5b05029050600083600281900b620d89e881612b0757fe5b0502905060008460020b83830360020b81612b1e57fe5b0560010190508062ffffff166001600160801b03801681612b3b57fe5b0493505050505b919050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612b7c57600080fd5b565b4290565b60008060008460020b8660020b81612b9657fe5b05905060008660020b128015612bbd57508460020b8660020b81612bb657fe5b0760020b15155b15612bc757600019015b8315612c3c57600080612bd9836143c7565b600182810b810b600090815260208d9052604090205460ff83169190911b80016000190190811680151597509294509092509085612c1e57888360ff16860302612c31565b88612c28826143d9565b840360ff168603025b965050505050612cba565b600080612c4b836001016143c7565b91509150600060018260ff166001901b031990506000818b60008660010b60010b8152602001908152602001600020541690508060001415955085612c9d57888360ff0360ff16866001010102612cb3565b8883612ca883614478565b0360ff168660010101025b9650505050505b5094509492505050565b60008060008360020b12612cdb578260020b612ce3565b8260020b6000035b9050620d89e8811115612d21576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b600060018216612d3557600160801b612d47565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612d7b576ffff97272373d413259a46990580e213a0260801c5b6004821615612d9a576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615612db9576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612dd8576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612df7576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615612e16576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615612e35576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615612e55576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615612e75576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615612e95576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615612eb5576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615612ed5576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612ef5576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612f15576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615612f35576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615612f56576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615612f76576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615612f95576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615612fb2576b048a170391f7dc42444e8fa20260801c5b60008460020b1315612fcd578060001981612fc957fe5b0490505b600160201b810615612fe0576001612fe3565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a16101581871280159061307a57600061302e8989620f42400362ffffff16620f424061322f565b905082613047576130428c8c8c6001614562565b613054565b6130548b8d8c60016145dd565b9550858110613065578a9650613074565b6130718c8b8386614688565b96505b506130c4565b816130915761308c8b8b8b60006145dd565b61309e565b61309e8a8c8b6000614562565b93508388600003106130b2578995506130c4565b6130c18b8a8a600003856146d4565b95505b6001600160a01b038a8116908716148215613127578080156130e35750815b6130f9576130f4878d8c60016145dd565b6130fb565b855b9550808015613108575081155b61311e57613119878d8c6000614562565b613120565b845b9450613171565b8080156131315750815b613147576131428c888c6001614562565b613149565b855b9550808015613156575081155b61316c576131678c888c60006145dd565b61316e565b845b94505b8115801561318157508860000385115b1561318d578860000394505b8180156131ac57508a6001600160a01b0316876001600160a01b031614155b156131bb5785890393506131d8565b6131d5868962ffffff168a620f42400362ffffff166140ba565b93505b50505095509550955095915050565b6000600160ff1b82106131f957600080fd5b5090565b8082038281131560008312151461321357600080fd5b92915050565b8181018281121560008312151461321357600080fd5b6000808060001985870986860292508281109083900303905080613265576000841161325a57600080fd5b5082900490506132d8565b80841161327157600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60008063ffffffff8716613385576000898661ffff1661ffff811061330057fe5b60408051608081018252919092015463ffffffff808216808452600160201b8304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff16151560608301529092508a16146133715761336e818a8988614720565b90505b806020015181604001519250925050613465565b86880360008061339a8c8c858c8c8c8c6147c3565b91509150816000015163ffffffff168363ffffffff1614156133cc578160200151826040015194509450505050613465565b805163ffffffff848116911614156133f4578060200151816040015194509450505050613465565b8151815160208085015190840151918390039286039163ffffffff80841692908516910360060b8161342257fe5b05028460200151018263ffffffff168263ffffffff1686604001518660400151036001600160a01b0316028161345457fe5b048560400151019650965050505050505b97509795505050505050565b600295860b860b60009081526020979097526040909620600181018054909503909455938301805490920390915560038201805463ffffffff600160d81b6001600160a01b03600160381b808504821690960316909402600160381b600160d81b031990921691909117600681810b90960390950b66ffffffffffffff1666ffffffffffffff199095169490941782810485169095039093160263ffffffff60d81b1990931692909217905554600160801b9004600f0b90565b60008082600f0b121561359057826001600160801b03168260000384039150816001600160801b03161061358b576040805162461bcd60e51b81526020600482015260026024820152614c5360f01b604482015290519081900360640190fd5b613213565b826001600160801b03168284019150816001600160801b03161015613213576040805162461bcd60e51b81526020600482015260026024820152614c4160f01b604482015290519081900360640190fd5b60006401000276a36001600160a01b0383161080159061361d575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b613652576040805162461bcd60e51b81526020600482015260016024820152602960f91b604482015290519081900360640190fd5b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c979088119617909417909217179091171717608081106136e657607f810383901c91506136f0565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c600160381b161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b146138ed57886001600160a01b03166138d182612cc4565b6001600160a01b031611156138e657816138e8565b805b6138ef565b815b9998505050505050505050565b6000806000898961ffff1661ffff811061391257fe5b60408051608081018252919092015463ffffffff808216808452600160201b8304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff1615156060830152909250891614156139815788859250925050613465565b8461ffff168461ffff161180156139a257506001850361ffff168961ffff16145b156139af578391506139b3565b8491505b8161ffff168960010161ffff16816139c757fe5b0692506139d681898989614720565b8a8461ffff1661ffff81106139e757fe5b825191018054602084015160408501516060909501511515600160f81b026001600160f81b036001600160a01b03909616600160581b027fff0000000000000000000000000000000000000000ffffffffffffffffffffff60069390930b66ffffffffffffff16600160201b026affffffffffffff000000001963ffffffff90971663ffffffff199095169490941795909516929092171692909217929092161790555097509795505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b60208310613b135780518252601f199092019160209182019101613af4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114613b75576040519150601f19603f3d011682016040523d82523d6000602084013e613b7a565b606091505b5091509150818015613ba8575080511580613ba85750808060200190516020811015613ba557600080fd5b50515b613bde576040805162461bcd60e51b81526020600482015260026024820152612a2360f11b604482015290519081900360640190fd5b5050505050565b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693919290918291908083835b60208310613c7e5780518252601f199092019160209182019101613c5f565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114613cde576040519150601f19603f3d011682016040523d82523d6000602084013e613ce3565b606091505b5091509150818015613cf757506020815110155b613d0057600080fd5b808060200190516020811015613d1557600080fd5b50519250505090565b8082018281101561321357600080fd5b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016939192909182919080838360208310613c7e5780518252601f199092019160209182019101613c5f565b6000808361ffff1611613e04576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b8261ffff168261ffff1611613e1a5750816132d8565b825b8261ffff168161ffff161015613e60576001858261ffff1661ffff8110613e3f57fe5b01805463ffffffff191663ffffffff92909216919091179055600101613e1c565b50909392505050565b80600f81900b8114612b4257600080fd5b6000806000613e87612b47565b613e99846020015185604001516142b2565b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602080840182905261ffff600160b81b8404811685870152600160c81b84048116606080870191909152600160d81b8504909116608086015260ff600160e81b8504811660a0870152600160f01b909404909316151560c085015288519089015194890151928901519394613f3d94919390929091906149bd565b93508460600151600f0b6000146140b257846020015160020b816020015160020b1215613f9257613f8b613f748660200151612cc4565b613f818760400151612cc4565b8760600151614b72565b92506140b2565b846040015160020b816020015160020b12156140885760045460408201516001600160801b0390911690613fe490613fc8612b7e565b60208501516060860151608087015160089493929187916138fc565b6000805461ffff60c81b1916600160c81b61ffff938416021761ffff60b81b1916600160b81b939092169290920217905581516040870151614034919061402a90612cc4565b8860600151614b72565b93506140526140468760200151612cc4565b83516060890151614bb6565b925061406281876060015161352b565b600480546001600160801b0319166001600160801b0392909216919091179055506140b2565b6140af6140988660200151612cc4565b6140a58760400151612cc4565b8760600151614bb6565b91505b509193909250565b60006140c784848461322f565b9050600082806140d357fe5b84860911156132d85760001981106140ea57600080fd5b6001019392505050565b6040805160609490941b6bffffffffffffffffffffffff1916602080860191909152600293840b60e890811b60348701529290930b90911b60378401528051808403601a018152603a90930181528251928201929092206000908152929052902090565b60608060008361ffff1611614198576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b865167ffffffffffffffff811180156141b057600080fd5b506040519080825280602002602001820160405280156141da578160200160208202803683370190505b509150865167ffffffffffffffff811180156141f557600080fd5b5060405190808252806020026020018201604052801561421f578160200160208202803683370190505b50905060005b87518110156142a5576142508a8a8a848151811061423f57fe5b60200260200101518a8a8a8a6132df565b84838151811061425c57fe5b6020026020010184848151811061426f57fe5b60200260200101826001600160a01b03166001600160a01b03168152508260060b60060b81525050508080600101915050614225565b5097509795505050505050565b8060020b8260020b126142f2576040805162461bcd60e51b8152602060048201526003602482015262544c5560e81b604482015290519081900360640190fd5b620d89e719600283900b1215614335576040805162461bcd60e51b8152602060048201526003602482015262544c4d60e81b604482015290519081900360640190fd5b620d89e8600282900b1315614377576040805162461bcd60e51b815260206004820152600360248201526254554d60e81b604482015290519081900360640190fd5b5050565b6040805160808101825263ffffffff9283168082526000602083018190529282019290925260016060909101819052835463ffffffff1916909117909116600160f81b17909155908190565b60020b600881901d9161010090910790565b60008082116143e757600080fd5b600160801b82106143fa57608091821c91015b68010000000000000000821061441257604091821c91015b600160201b821061442557602091821c91015b62010000821061443757601091821c91015b610100821061444857600891821c91015b6010821061445857600491821c91015b6004821061446857600291821c91015b60028210612b4257600101919050565b600080821161448657600080fd5b5060ff6001600160801b038216156144a157607f19016144a9565b608082901c91505b67ffffffffffffffff8216156144c257603f19016144ca565b604082901c91505b63ffffffff8216156144df57601f19016144e7565b602082901c91505b61ffff8216156144fa57600f1901614502565b601082901c91505b60ff821615614514576007190161451c565b600882901c91505b600f82161561452e5760031901614536565b600482901c91505b60038216156145485760011901614550565b600282901c91505b6001821615612b425760001901919050565b6000836001600160a01b0316856001600160a01b03161115614582579293925b816145af576145aa836001600160801b03168686036001600160a01b0316600160601b61322f565b6145d2565b6145d2836001600160801b03168686036001600160a01b0316600160601b6140ba565b90505b949350505050565b6000836001600160a01b0316856001600160a01b031611156145fd579293925b600160601b600160e01b03606084901b166001600160a01b03868603811690871661462757600080fd5b8361465757866001600160a01b031661464a8383896001600160a01b031661322f565b8161465157fe5b0461467d565b61467d61466e8383896001600160a01b03166140ba565b886001600160a01b0316614be5565b979650505050505050565b600080856001600160a01b03161161469f57600080fd5b6000846001600160801b0316116146b557600080fd5b816146c7576145aa8585856001614bf0565b6145d28585856001614cd1565b600080856001600160a01b0316116146eb57600080fd5b6000846001600160801b03161161470157600080fd5b81614713576145aa8585856000614cd1565b6145d28585856000614bf0565b6147286154f1565b600085600001518503905060405180608001604052808663ffffffff1681526020018263ffffffff168660020b0288602001510160060b81526020016000856001600160801b03161161477c57600161477e565b845b6001600160801b031663ffffffff60801b608085901b168161479c57fe5b048860400151016001600160a01b0316815260200160011515815250915050949350505050565b6147cb6154f1565b6147d36154f1565b888561ffff1661ffff81106147e457fe5b60408051608081018252919092015463ffffffff8116808352600160201b8204600690810b810b900b6020840152600160581b82046001600160a01b031693830193909352600160f81b900460ff1615156060820152925061484890899089614db4565b15614880578663ffffffff16826000015163ffffffff16141561486a57613465565b8161487783898988614720565b91509150613465565b888361ffff168660010161ffff168161489557fe5b0661ffff1661ffff81106148a557fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b9091041615156060820181905290925061495a57604080516080810182528a5463ffffffff81168252600160201b8104600690810b810b900b6020830152600160581b81046001600160a01b031692820192909252600160f81b90910460ff161515606082015291505b61496988836000015189614db4565b6149a0576040805162461bcd60e51b815260206004820152600360248201526213d31160ea1b604482015290519081900360640190fd5b6149ad8989898887614e75565b9150915097509795505050505050565b60006149cc60078787876140f4565b60015460025491925090600080600f87900b15614b125760006149ed612b7e565b6000805460045492935090918291614a379160089186918591600160a01b810460020b9161ffff600160b81b83048116926001600160801b0390921691600160c81b9004166132df565b9092509050614a7160058d8b8d8b8b87898b60007f0000000000000000000000000000000000000000000000000000000000000000615013565b9450614aa860058c8b8d8b8b87898b60017f0000000000000000000000000000000000000000000000000000000000000000615013565b93508415614adc57614adc60068d7f00000000000000000000000000000000000000000000000000000000000000006151cc565b8315614b0e57614b0e60068c7f00000000000000000000000000000000000000000000000000000000000000006151cc565b5050505b600080614b2460058c8c8b8a8a615232565b9092509050614b35878a84846152de565b600089600f0b1215614b63578315614b5257614b5260058c615473565b8215614b6357614b6360058b615473565b50505050505095945050505050565b60008082600f0b12614b9857614b93614b8e85858560016145dd565b6131e7565b6145d5565b614bab614b8e85858560000360006145dd565b600003949350505050565b60008082600f0b12614bd257614b93614b8e8585856001614562565b614bab614b8e8585856000036000614562565b808204910615150190565b60008115614c635760006001600160a01b03841115614c2657614c2184600160601b876001600160801b031661322f565b614c3e565b6001600160801b038516606085901b81614c3c57fe5b045b9050614c5b614c566001600160a01b03881683613d1e565b61549f565b9150506145d5565b60006001600160a01b03841115614c9157614c8c84600160601b876001600160801b03166140ba565b614ca8565b614ca8606085901b6001600160801b038716614be5565b905080866001600160a01b031611614cbf57600080fd5b6001600160a01b0386160390506145d5565b600082614cdf5750836145d5565b600160601b600160e01b03606085901b168215614d6d576001600160a01b03861684810290858281614d0d57fe5b041415614d3e57818101828110614d3c57614d3283896001600160a01b0316836140ba565b93505050506145d5565b505b614d6482614d5f878a6001600160a01b03168681614d5857fe5b0490613d1e565b614be5565b925050506145d5565b6001600160a01b03861684810290858281614d8457fe5b04148015614d9157508082115b614d9a57600080fd5b808203614d32614c56846001600160a01b038b16846140ba565b60008363ffffffff168363ffffffff1611158015614dde57508363ffffffff168263ffffffff1611155b15614dfa578163ffffffff168363ffffffff16111590506132d8565b60008463ffffffff168463ffffffff1611614e21578363ffffffff16600160201b01614e29565b8363ffffffff165b64ffffffffff16905060008563ffffffff168463ffffffff1611614e59578363ffffffff16600160201b01614e61565b8363ffffffff165b64ffffffffff169091111595945050505050565b614e7d6154f1565b614e856154f1565b60008361ffff168560010161ffff1681614e9b57fe5b0661ffff169050600060018561ffff16830103905060005b506002818301048961ffff87168281614ec857fe5b0661ffff8110614ed457fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b90910416151560608201819052909550614f3e57806001019250614eb3565b898661ffff168260010181614f4f57fe5b0661ffff8110614f5b57fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b90910416151560608201528551909450600090614fc5908b908b614db4565b9050808015614fde5750614fde8a8a8760000151614db4565b15614fe95750615006565b80614ff957600182039250615000565b8160010193505b50614eb3565b5050509550959350505050565b60028a810b900b600090815260208c90526040812080546001600160801b03168261503e828d61352b565b9050846001600160801b0316816001600160801b0316111561508c576040805162461bcd60e51b81526020600482015260026024820152614c4f60f01b604482015290519081900360640190fd5b6001600160801b038281161590821615811415945015615131578c60020b8e60020b1361511957600183018b9055600283018a9055600383018054600160381b600160d81b031916600160381b6001600160a01b038c16021766ffffffffffffff191666ffffffffffffff60068b900b161763ffffffff60d81b1916600160d81b63ffffffff8a16021790555b6003830180546001600160f81b0316600160f81b1790555b82546001600160801b0319166001600160801b0382161783558561517a5782546151759061517090600160801b9004600f90810b810b908f900b613219565b613e69565b61519b565b825461519b9061517090600160801b9004600f90810b810b908f900b6131fd565b8354600f9190910b6001600160801b03908116600160801b0291161790925550909c9b505050505050505050505050565b8060020b8260020b816151db57fe5b0760020b156151e957600080fd5b6000806152048360020b8560020b816151fe57fe5b056143c7565b600191820b820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b600285810b80820b60009081526020899052604080822088850b850b83529082209193849391929184918291908a900b126152785750506001820154600283015461528b565b8360010154880391508360020154870390505b6000808b60020b8b60020b12156152ad575050600183015460028401546152c0565b84600101548a0391508460020154890390505b92909803979097039b96909503949094039850939650505050505050565b6040805160a08101825285546001600160801b0390811682526001870154602083015260028701549282019290925260038601548083166060830152600160801b900490911660808201526000600f85900b61537d5781516001600160801b0316615375576040805162461bcd60e51b815260206004820152600260248201526104e560f41b604482015290519081900360640190fd5b50805161538c565b8151615389908661352b565b90505b60006153b08360200151860384600001516001600160801b0316600160801b61322f565b905060006153d68460400151860385600001516001600160801b0316600160801b61322f565b905086600f0b6000146153fd5787546001600160801b0319166001600160801b0384161788555b60018801869055600288018590556001600160801b03821615158061542b57506000816001600160801b0316115b15615469576003880180546001600160801b031981166001600160801b039182168501821617808216600160801b9182900483168501909216021790555b5050505050505050565b600290810b810b6000908152602092909252604082208281556001810183905590810182905560030155565b806001600160a01b0381168114612b4257600080fd5b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b6040805160808101825260008082526020820181905291810182905260608101919091529056fea26469706673582212208c1ae1b580f08a89f42513d97528a61143398260de7f3536712027bea2938a6d64736f6c63430007060033","devdoc":"{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"noDelegateCall is applied indirectly via _modifyPosition\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"not locked because it initializes unlocked\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"noDelegateCall is applied indirectly via _modifyPosition\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"stateVariables\":{\"factory\":{\"return\":\"The contract address\"},\"fee\":{\"return\":\"The fee\"},\"feeGrowthGlobal0X128\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128\":{\"details\":\"This value can overflow the uint256\"},\"liquidity\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"return\":\"The max amount of liquidity per tick\"},\"observations\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"return\":\"blockTimestamp The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"},\"positions\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"return\":\"_liquidity The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"},\"protocolFees\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0\":{\"return\":\"sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"},\"tickSpacing\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"return\":\"The tick spacing\"},\"ticks\":{\"params\":{\"tick\":\"The tick to look up\"},\"return\":\"liquidityGross the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"},\"token0\":{\"return\":\"The token contract address\"},\"token1\":{\"return\":\"The token contract address\"}},\"version\":1}","hashes":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","collectProtocol(address,uint128,uint128)":"85b66729","factory()":"c45a0155","fee()":"ddca3f43","feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","liquidity()":"1a686502","maxLiquidityPerTick()":"70cf754a","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","observations(uint256)":"252c09d7","observe(uint32[])":"883bdbfd","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","setFeeProtocol(uint8,uint8)":"8206a4d1","slot0()":"3850c7bd","snapshotCumulativesInside(int24,int24)":"a38807f2","swap(address,bool,int256,uint160,bytes)":"128acb08","tickBitmap(int16)":"5339c296","tickSpacing()":"d0c93a7c","ticks(int24)":"f30dba93","token0()":"0dfe1681","token1()":"d21220a7"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"noDelegateCall is applied indirectly via _modifyPosition\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"not locked because it initializes unlocked\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"noDelegateCall is applied indirectly via _modifyPosition\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"stateVariables\":{\"factory\":{\"return\":\"The contract address\"},\"fee\":{\"return\":\"The fee\"},\"feeGrowthGlobal0X128\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128\":{\"details\":\"This value can overflow the uint256\"},\"liquidity\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"return\":\"The max amount of liquidity per tick\"},\"observations\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"return\":\"blockTimestamp The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"},\"positions\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"return\":\"_liquidity The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"},\"protocolFees\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0\":{\"return\":\"sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"},\"tickSpacing\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"return\":\"The tick spacing\"},\"ticks\":{\"params\":{\"tick\":\"The tick to look up\"},\"return\":\"liquidityGross the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"},\"token0\":{\"return\":\"The token contract address\"},\"token1\":{\"return\":\"The token contract address\"}},\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"UniswapV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"109135:34568:0:-:0;;;112538:273;;;;;;;;;-1:-1:-1;31110:4:0;31091:24;;;;112637:47;;;-1:-1:-1;;;112637:47:0;;;;112562:18;;112660:10;;112637:45;;:47;;;;;;;;;;;;;;;112660:10;112637:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;112637:47:0;;;;;;;;;;;;;;;;;;;;;112590:94;;;;-1:-1:-1;;;;;;112590:94:0;;;;;;-1:-1:-1;;112590:94:0;;;;;;;;;;;;;;;;;112637:47;112590:94;112694:26;;;;;;;;;;;112637:47;-1:-1:-1;112753:51:0;;112637:47;;112753:37;;;;;:51;;:::i;:::-;112731:73;;-1:-1:-1;;112731:73:0;;;-1:-1:-1;109135:34568:0;;45710:364;45794:7;;45865:11;45830:31;;;;-1:-1:-1;;45830:31:0;;;;;;45829:47;;-1:-1:-1;45886:13:0;45938:11;45903:31;;;;34989:9;45903:31;;;;;;45902:47;45886:63;;45959:15;46006:11;45984:33;;45995:7;45985;:17;45984:33;;;;;;;;46021:1;45977:45;;-1:-1:-1;46039:28:0;;;-1:-1:-1;46039:28:0;;;;;;;45710:364;-1:-1:-1;;;;;45710:364:0:o;109135:34568::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"109135:34568:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;109718:40;;;:::i;:::-;;;;-1:-1:-1;;;;;109718:40:0;;;;;;;;;;;;;;131102:9002;;;;;;;;;;;;;;;;-1:-1:-1;;;;;131102:9002:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;131102:9002:0;;;;;;-1:-1:-1;;;131102:9002:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;131102:9002:0;;;;;;;;;;-1:-1:-1;131102:9002:0;;-1:-1:-1;131102:9002:0;-1:-1:-1;131102:9002:0;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;111379:33;;;:::i;:::-;;;;-1:-1:-1;;;;;111379:33:0;;;;;;;;;;;;;;111291:41;;;:::i;:::-;;;;-1:-1:-1;;;;;111291:41:0;;;;;;;;;;;;;;;;;;;;;;;;111757:54;;;;;;;;;;;;;;;;-1:-1:-1;111757:54:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;111757:54:0;;;;;;;;;;;;;;;;;;;;;;117826:660;;;;;;;;;;;;;;;;-1:-1:-1;117826:660:0;;;;:::i;:::-;;110900:27;;;:::i;:::-;;;;-1:-1:-1;;;;;110900:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;125732:1188;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;125732:1188:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;125732:1188:0;;;;;-1:-1:-1;125732:1188:0;;-1:-1:-1;125732:1188:0;;;-1:-1:-1;;;125732:1188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;125732:1188:0;;;;;;;;;;-1:-1:-1;125732:1188:0;;-1:-1:-1;125732:1188:0;-1:-1:-1;125732:1188:0;:::i;111064:44::-;;;:::i;:::-;;;;;;;;;;;;;;;;140152:1913;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;140152:1913:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;140152:1913:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;140152:1913:0;;;;;;;;;;-1:-1:-1;140152:1913:0;;-1:-1:-1;140152:1913:0;-1:-1:-1;140152:1913:0;:::i;126968:1035::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;126968:1035:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;126968:1035:0;;;;;;;-1:-1:-1;126968:1035:0;;;;:::i;111652:59::-;;;;;;;;;;;;;;;;-1:-1:-1;111652:59:0;;:::i;:::-;;;;-1:-1:-1;;;;;111652:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;111652:59:0;;;;;;;;;;;;;111554:52;;;;;;;;;;;;;;;;-1:-1:-1;111554:52:0;;;;:::i;110083:53::-;;;:::i;142118:513::-;;;;;;;;;;;;;;;;-1:-1:-1;142118:513:0;;;;;;;;;;;:::i;142684:1017::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;142684:1017:0;;;;-1:-1:-1;;;;;142684:1017:0;;;;;;;;;;;;:::i;117279:499::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;117279:499:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;117279:499:0;;;;;;;;;;-1:-1:-1;117279:499:0;;-1:-1:-1;117279:499:0;-1:-1:-1;117279:499:0;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;128121:939;;;;;;;;;;;;;;;;-1:-1:-1;128121:939:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;128121:939:0;;:::i;114372:2854::-;;;;;;;;;;;;;;;;-1:-1:-1;114372:2854:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;114372:2854:0;;;;;;;;;;;;;;;;;;;;;;109626:41;;;:::i;109988:43::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;109809:40;;;:::i;109900:36::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;110974:44;;;:::i;111459:49::-;;;;;;;;;;;;;;;;-1:-1:-1;111459:49:0;;;;:::i;:::-;;;;-1:-1:-1;;;;;111459:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;111459:49:0;;;-1:-1:-1;;;;;111459:49:0;-1:-1:-1;111459:49:0;;;;;;;;;;;;;;;;;;;;;;;;118590:621;;;;;;;;;;;;;;;;-1:-1:-1;118590:621:0;-1:-1:-1;;;;;118590:621:0;;:::i;109718:40::-;;;:::o;131102:9002::-;131312:14;131328;31555:22;:20;:22::i;:::-;131362:20;131354:35:::1;;;::::0;;-1:-1:-1;;;131354:35:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;131354:35:0;;;;;;;;;;;;;::::1;;131400:31;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;131400:31:0;-1:-1:-1;;;;;131400:31:0;::::1;::::0;;-1:-1:-1;;;131400:31:0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;::::1;-1:-1:-1::0;;;131400:31:0;::::1;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;131400:31:0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;131400:31:0;::::1;::::0;;::::1;::::0;;;;::::1;-1:-1:-1::0;;;131400:31:0;::::1;::::0;::::1;-1:-1:-1::0;131400:31:0;;;-1:-1:-1;;;131400:31:0;;::::1;::::0;;::::1;;;::::0;;;;;;131442:35:::1;;;::::0;;-1:-1:-1;;;131442:35:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;131442:35:0;;;;;;;;;;;;;::::1;;131508:10;:228;;131666:23:::0;;-1:-1:-1;;;;;131646:43:0;;::::1;::::0;;::::1;;:90:::0;::::1;;;-1:-1:-1::0;35349:49:0::1;-1:-1:-1::0;;;;;131693:43:0;::::1;;131646:90;131508:228;;;131557:23:::0;;-1:-1:-1;;;;;131537:43:0;;::::1;::::0;;::::1;;:90:::0;::::1;;;-1:-1:-1::0;35169:10:0::1;-1:-1:-1::0;;;;;131584:43:0;::::1;;131537:90;131487:278;;;::::0;;-1:-1:-1;;;131487:278:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;131487:278:0;;;;;;;;;;;;;::::1;;131793:5;131776:22:::0;;-1:-1:-1;;;;131776:22:0::1;::::0;;131846:363:::1;::::0;;::::1;::::0;::::1;::::0;;;;131981:10;:74:::1;;132053:1;132027:10;:22;;;:27;;;;131981:74;;;132020:2;131995:10;:22;;;:27;;;;;;;;131981:74;131846:363;;::::0;;131890:9:::1;::::0;-1:-1:-1;;;;;131890:9:0::1;131846:363;::::0;::::1;::::0;;;131933:17:::1;:15;:17::i;:::-;131846:363;;::::0;;132143:1:::1;131846:363;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;132305:391;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;132443:23;;-1:-1:-1;;;;;132305:391:0::1;::::0;;;;;;;132490:15;;::::1;::::0;132305:391:::1;;::::0;;;;;;;131809:400;;-1:-1:-1;132238:19:0;;::::1;::::0;132143:1;132305:391;;;132544:10;:56:::1;;132580:20;;132544:56;;;132557:20;;132544:56;132305:391:::0;;132631:1:::1;132305:391;::::0;;::::1;::::0;;;;132661:20;::::1;::::0;-1:-1:-1;;;;;132305:391:0::1;::::0;;;;;132268:428;-1:-1:-1;132823:4621:0::1;132830:30:::0;;:35;;::::1;::::0;:78:::1;;-1:-1:-1::0;132869:18:0::1;::::0;::::1;::::0;-1:-1:-1;;;;;132869:39:0;;::::1;::::0;::::1;;;132830:78;132823:4621;;;132924:28;;:::i;:::-;132992:18;::::0;::::1;::::0;-1:-1:-1;;;;;132967:43:0::1;::::0;;133122:10:::1;::::0;::::1;::::0;133061:142:::1;::::0;:10:::1;::::0;133150:11:::1;133179:10:::0;133061:43:::1;:142::i;:::-;133025:178;;133041:16;::::0;::::1;133025:178:::0;::::1;::::0;;::::1;::::0;::::1;133026:13;::::0;::::1;133025:178:::0;;;-1:-1:-1;;133335:33:0;::::1;;133331:216;;;-1:-1:-1::0;;133388:13:0::1;::::0;::::1;:33:::0;133331:216:::1;;;133446:13;::::0;::::1;::::0;34989:9;133446:33:::1;::::0;;;::::1;;133442:105;;;34989:9:::0;133499:13:::1;::::0;::::1;:33:::0;133442:105:::1;133632:42;133660:4;:13;;;133632:27;:42::i;:::-;-1:-1:-1::0;;;;;133608:66:0::1;:21;::::0;::::1;:66:::0;133920:18:::1;::::0;::::1;::::0;133878:378:::1;::::0;133957:10;:98:::1;;134014:21;::::0;::::1;::::0;-1:-1:-1;;;;;134014:41:0;;::::1;::::0;::::1;;133957:98;;;133970:21;::::0;::::1;::::0;-1:-1:-1;;;;;133970:41:0;;::::1;::::0;::::1;;133957:98;133956:184;;134119:4;:21;;;133956:184;;;134079:17;133956:184;134158:15;::::0;::::1;::::0;134191:30;;134239:3:::1;133878:24;:378::i;:::-;133860:14;::::0;::::1;133808:448:::0;133844:14:::1;::::0;::::1;133808:448:::0;133829:13:::1;::::0;::::1;133808:448:::0;-1:-1:-1;;;;;133808:448:0::1;-1:-1:-1::0;133809:18:0;::::1;133808:448:::0;134271:434;::::1;;;134339:43;134356:4;:14;;;134340:4;:13;;;:30;134339:41;:43::i;:::-;134305:77:::0;;::::1;::::0;;134452:14:::1;::::0;::::1;::::0;134425:53:::1;::::0;134452:25:::1;::::0;:23:::1;:25::i;:::-;134425:22;::::0;::::1;::::0;;:26:::1;:53::i;:::-;134400:22;::::0;::::1;:78:::0;134271:434:::1;;;134551:25;:4;:14;;;:23;:25::i;:::-;134517:59:::0;;::::1;::::0;;134663:14:::1;::::0;::::1;::::0;134647:13:::1;::::0;::::1;::::0;134619:71:::1;::::0;134646:43:::1;::::0;134647:30:::1;134646:41;:43::i;:::-;134619:22;::::0;::::1;::::0;;:26:::1;:71::i;:::-;134594:22;::::0;::::1;:96:::0;134271:434:::1;134840:17:::0;;:21:::1;;::::0;134836:204:::1;;134881:13;134914:5;:17;;;134897:34;;:4;:14;;;:34;;;;;134949:14;::::0;::::1;:23:::0;;134897:34;;;::::1;134949:23:::0;;;::::1;::::0;;134990:17:::1;::::0;::::1;:35:::0;;;;::::1;-1:-1:-1::0;;;;;134990:35:0::1;::::0;;-1:-1:-1;134836:204:0::1;135099:15;::::0;::::1;::::0;-1:-1:-1;;;;;135099:19:0::1;::::0;135095:138:::1;;135181:14;::::0;;::::1;::::0;135217:15;;::::1;::::0;135165:68:::1;::::0;135181:14;-1:-1:-1;;;;;;;;;135165:68:0::1;:15;:68::i;:::-;135136:25;::::0;::::1;:97:::0;;;;::::1;::::0;;135095:138:::1;135329:21;::::0;::::1;::::0;135307:18:::1;::::0;::::1;::::0;-1:-1:-1;;;;;135307:43:0;;::::1;::::0;::::1;;135303:2131;;;135445:4;:16;;;135441:1632;;;135660:5;:31;;;135655:565;;135785:348;135841:5;:20;;;135891:1;135922:10;:15;;;135967:10;:27;;;136024:5;:20;;;136074:10;:33;;;135785:12;:26;;:348;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;135719:414:0::1;135742:39;::::0;::::1;135719:414:::0;::::1;::::0;;::::1;::::0;::::1;135720:20;::::0;::::1;135719:414:::0;-1:-1:-1;;136159:31:0;::::1;:38:::0;135655:565:::1;136241:19;136287:435;136328:4;:13;;;136372:10;:61;;136413:20;;136372:61;;;136385:5;:25;;;136372:61;136465:10;:61;;136501:5;:25;;;136465:61;;;136478:20;;136465:61;136557:39;::::0;::::1;::::0;136626:20:::1;::::0;::::1;::::0;136676::::1;::::0;::::1;::::0;136287:5:::1;::::0;:435;;;136557:39;136626:20;136287:11:::1;:435::i;:::-;136241:481;;136920:10;136916:44;;;136947:13;;136916:44;137001:53;137024:5;:15;;;137041:12;137001:22;:53::i;:::-;-1:-1:-1::0;;;;;136983:71:0::1;:15;::::0;::::1;:71:::0;-1:-1:-1;135441:1632:0::1;137104:10;:46;;137137:4;:13;;;137104:46;;;137133:1;137117:4;:13;;;:17;137104:46;137091:59;::::0;;::::1;::::0;::::1;:10;::::0;::::1;:59:::0;135303:2131:::1;;;137197:22:::0;;137175:18:::1;::::0;::::1;::::0;-1:-1:-1;;;;;137175:44:0;;::::1;::::0;::::1;;137171:263;;137372:47;137400:5;:18;;;137372:27;:47::i;:::-;137359:60;::::0;;::::1;::::0;::::1;:10;::::0;::::1;:60:::0;137171:263:::1;132823:4621;;;;137540:10;:15;;;137526:29;;:5;:10;;;:29;;;137522:827;;137572:23;137597:29:::0;137646:320:::1;137686:10;:27;;;137735:5;:20;;;137777:10;:15;;;137814:5;:20;;;137856:10;:33;;;137911:10;:37;;;137646:12;:18;;:320;;;;;;;;;:::i;:::-;138087:18;::::0;::::1;::::0;138123:10:::1;::::0;::::1;::::0;137981:5:::1;137980:241:::0;;-1:-1:-1;;;;137980:241:0::1;-1:-1:-1::0;;;;137980:241:0;;::::1;;;-1:-1:-1::0;;;;137980:241:0::1;-1:-1:-1::0;;;137980:241:0;;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;137980:241:0::1;-1:-1:-1::0;;;;137980:241:0::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;;137980:241:0::1;-1:-1:-1::0;;;;;137980:241:0;;::::1;;::::0;;-1:-1:-1;137522:827:0::1;::::0;-1:-1:-1;137522:827:0::1;;138320:18;::::0;::::1;::::0;138299:5:::1;:39:::0;;-1:-1:-1;;;;;;138299:39:0::1;-1:-1:-1::0;;;;;138299:39:0;;::::1;::::0;;;::::1;::::0;;137522:827:::1;138429:15;::::0;::::1;::::0;138405:20:::1;::::0;::::1;::::0;-1:-1:-1;;;;;138405:39:0;;::::1;::::0;::::1;;138401:72;;138458:15;::::0;::::1;::::0;138446:9:::1;:27:::0;;-1:-1:-1;;;;;;138446:27:0::1;-1:-1:-1::0;;;;;138446:27:0;;::::1;::::0;;;::::1;::::0;;138401:72:::1;138655:10;138651:330;;;138704:25;::::0;::::1;::::0;138681:20:::1;:48:::0;138747:17:::1;::::0;::::1;::::0;-1:-1:-1;;;;;138747:21:0::1;::::0;138743:67:::1;;138793:17;::::0;::::1;::::0;138770:12:::1;:40:::0;;-1:-1:-1;;;;;;138770:40:0;::::1;-1:-1:-1::0;;;;;138770:40:0;;::::1;::::0;;::::1;;::::0;;;::::1;::::0;;138743:67:::1;138651:330;;;138864:25;::::0;::::1;::::0;138841:20:::1;:48:::0;138907:17:::1;::::0;::::1;::::0;-1:-1:-1;;;;;138907:21:0::1;::::0;138903:67:::1;;138953:17;::::0;::::1;::::0;138930:12:::1;:40:::0;;-1:-1:-1;;;138930:40:0;;::::1;-1:-1:-1::0;;;;;138930:40:0;;::::1;::::0;;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;;138903:67:::1;139026:10;139012:24;;:10;:24;;;:202;;139141:22;::::0;::::1;::::0;139183:30;;139165:48;::::1;139012:202;;;139070:5;:30;;;139052:15;:48;139102:5;:22;;;139012:202;138991:223:::0;;-1:-1:-1;138991:223:0;-1:-1:-1;139273:684:0;::::1;;;139317:1;139307:7;:11;139303:82;;;139320:65;139348:6;139356:9;139376:7;139375:8;;139320:27;:65::i;:::-;139400:22;139425:10;:8;:10::i;:::-;139449:80;::::0;-1:-1:-1;;;139449:80:0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;139400:35;;-1:-1:-1;139472:10:0::1;::::0;139449:56:::1;::::0;139506:7;;139515;;139524:4;;;;139449:80;;;;139524:4;;;;139449:80;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;139591:10;:8;:10::i;:::-;139551:36;:14:::0;139578:7;139551:18:::1;:36::i;:::-;:50;;139543:66;;;::::0;;-1:-1:-1;;;139543:66:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;139543:66:0;;;;;;;;;;;;;::::1;;139273:684;;;;139654:1;139644:7;:11;139640:82;;;139657:65;139685:6;139693:9;139713:7;139712:8;;139657:27;:65::i;:::-;139737:22;139762:10;:8;:10::i;:::-;139786:80;::::0;-1:-1:-1;;;139786:80:0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;139737:35;;-1:-1:-1;139809:10:0::1;::::0;139786:56:::1;::::0;139843:7;;139852;;139861:4;;;;139786:80;;;;139861:4;;;;139786:80;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;139928:10;:8;:10::i;:::-;139888:36;:14:::0;139915:7;139888:18:::1;:36::i;:::-;:50;;139880:66;;;::::0;;-1:-1:-1;;;139880:66:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;139880:66:0;;;;;;;;;;;;;::::1;;139273:684;;140018:18;::::0;;::::1;::::0;140038:15:::1;::::0;::::1;::::0;140055:10:::1;::::0;;::::1;::::0;139972:94;;;;;::::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;139972:94:0;;::::1;::::0;;;;-1:-1:-1;;;;;139972:94:0;;::::1;::::0;;;;;;;::::1;;-1:-1:-1::0;139972:94:0;;;;;;;::::1;::::0;139977:10:::1;::::0;139972:94:::1;::::0;;;;-1:-1:-1;139972:94:0;;::::1;-1:-1:-1::0;;140076:5:0::1;:21:::0;;-1:-1:-1;;;;140076:21:0::1;-1:-1:-1::0;;;140076:21:0::1;::::0;;-1:-1:-1;131102:9002:0;;;;-1:-1:-1;131102:9002:0;-1:-1:-1;;;;;;131102:9002:0:o;111379:33::-;;;-1:-1:-1;;;;;111379:33:0;;:::o;111291:41::-;;;-1:-1:-1;;;;;111291:41:0;;;;-1:-1:-1;;;111291:41:0;;;;:::o;111757:54::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;111757:54:0;;;;;-1:-1:-1;;;111757:54:0;;-1:-1:-1;;;;;111757:54:0;;-1:-1:-1;;;111757:54:0;;;;;:::o;117826:660::-;112200:5;:14;-1:-1:-1;;;112200:14:0;;;;112192:30;;;;;-1:-1:-1;;;112192:30:0;;;;;;;;;;;;-1:-1:-1;;;112192:30:0;;;;;;;;;;;;;;;112249:5;112232:22;;-1:-1:-1;;;;112232:22:0;;;31555::::1;:20;:22::i;:::-;117989:36:::2;118028:32:::0;;-1:-1:-1;;;118028:32:0;::::2;;;::::0;118138:76:::2;:12;118028:32:::0;118187:26;118138:17:::2;:76::i;:::-;118224:5;:64:::0;;-1:-1:-1;;;;118224:64:0::2;-1:-1:-1::0;;;118224:64:0::2;::::0;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;;;;-1:-1:-1;118302:62:0;;::::2;;118298:181;;118383:96;::::0;;::::2;::::0;;::::2;::::0;;;::::2;;::::0;::::2;::::0;;;::::2;::::0;;;;;;;;;::::2;118298:181;-1:-1:-1::0;;112275:5:0;:21;;-1:-1:-1;;;;112275:21:0;-1:-1:-1;;;112275:21:0;;;-1:-1:-1;117826:660:0:o;110900:27::-;;;-1:-1:-1;;;;;110900:27:0;;;-1:-1:-1;;;110900:27:0;;;;;;-1:-1:-1;;;110900:27:0;;;;;-1:-1:-1;;;110900:27:0;;;;;-1:-1:-1;;;110900:27:0;;;;;-1:-1:-1;;;110900:27:0;;;;;-1:-1:-1;;;110900:27:0;;;;:::o;125732:1188::-;125914:15;112200:14;;125914:15;;-1:-1:-1;;;112200:14:0;;;;112192:30;;;;;-1:-1:-1;;;112192:30:0;;;;;;;;;;;;-1:-1:-1;;;112192:30:0;;;;;;;;;;;;;;;112249:5;112232:22;;-1:-1:-1;;;;112232:22:0;;;-1:-1:-1;;;;;125966:10:0;::::1;125958:19;;;::::0;::::1;;125990:17;126009::::0;126042:272:::1;126075:225;;;;;;;;126125:9;-1:-1:-1::0;;;;;126075:225:0::1;;;;;126167:9;126075:225;;;;;;126209:9;126075:225;;;;;;126256:25;126263:6;-1:-1:-1::0;;;;;126256:14:0::1;:23;:25::i;:::-;126075:225;;::::0;;126042:15:::1;:272::i;:::-;125987:327;;;;;126343:10;126325:29;;126382:10;126364:29;;126404:22;126436::::0;126482:1:::1;126472:7;:11;126468:44;;;126502:10;:8;:10::i;:::-;126485:27;;126468:44;126526:11:::0;;126522:44:::1;;126556:10;:8;:10::i;:::-;126539:27;;126522:44;126576:80;::::0;-1:-1:-1;;;126576:80:0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;126599:10:::1;::::0;126576:56:::1;::::0;126633:7;;126642;;126651:4;;;;126576:80;;;;126651:4;;;;126576:80;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;126680:1;126670:7;:11;126666:73;;;126722:10;:8;:10::i;:::-;126691:27;:14:::0;126710:7;126691:18:::1;:27::i;:::-;:41;;126683:56;;;::::0;;-1:-1:-1;;;126683:56:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;126683:56:0;;;;;;;;;;;;;::::1;;126753:11:::0;;126749:73:::1;;126805:10;:8;:10::i;:::-;126774:27;:14:::0;126793:7;126774:18:::1;:27::i;:::-;:41;;126766:56;;;::::0;;-1:-1:-1;;;126766:56:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;126766:56:0;;;;;;;;;;;;;::::1;;126877:9;126838:75;;126866:9;126838:75;;126855:9;-1:-1:-1::0;;;;;126838:75:0::1;;126843:10;126888:6;126896:7;126905;126838:75;;;;-1:-1:-1::0;;;;;126838:75:0::1;;;;;;-1:-1:-1::0;;;;;126838:75:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;112275:5:0;:21;;-1:-1:-1;;;;112275:21:0;-1:-1:-1;;;112275:21:0;;;-1:-1:-1;125732:1188:0;;;;-1:-1:-1;125732:1188:0;-1:-1:-1;;;;;;125732:1188:0:o;111064:44::-;;;;:::o;140152:1913::-;112200:5;:14;-1:-1:-1;;;112200:14:0;;;;112192:30;;;;;-1:-1:-1;;;112192:30:0;;;;;;;;;;;;-1:-1:-1;;;112192:30:0;;;;;;;;;;;;;;;112249:5;112232:22;;-1:-1:-1;;;;112232:22:0;;;31555::::1;:20;:22::i;:::-;140348:9:::2;::::0;-1:-1:-1;;;;;140348:9:0::2;::::0;140367:28:::2;;;::::0;;-1:-1:-1;;;140367:28:0;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;140367:28:0;;;;;;;;;;;;;::::2;;140406:12;140421:44;140447:7;140456:3;140421:44;;140461:3;140421:25;:44::i;:::-;140406:59;;140475:12;140490:44;140516:7;140525:3;140490:44;;140530:3;140490:25;:44::i;:::-;140475:59;;140544:22;140569:10;:8;:10::i;:::-;140544:35;;140589:22;140614:10;:8;:10::i;:::-;140589:35:::0;-1:-1:-1;140639:11:0;;140635:72:::2;;140652:55;140680:6;140688:9;140699:7;140652:27;:55::i;:::-;140721:11:::0;;140717:72:::2;;140734:55;140762:6;140770:9;140781:7;140734:27;:55::i;:::-;140800:76;::::0;-1:-1:-1;;;140800:76:0;;::::2;::::0;::::2;::::0;;;;;;;;;;;;;;;;;;;;;;140824:10:::2;::::0;140800:58:::2;::::0;140859:4;;140865;;140871;;;;140800:76;;;;140871:4;;;;140800:76;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;140887:21;140911:10;:8;:10::i;:::-;140887:34;;140931:21;140955:10;:8;:10::i;:::-;140931:34:::0;-1:-1:-1;141012:13:0;140984:24:::2;:14:::0;141003:4;140984:18:::2;:24::i;:::-;:41;;140976:56;;;::::0;;-1:-1:-1;;;140976:56:0;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;140976:56:0;;;;;;;;;;;;;::::2;;141078:13:::0;141050:24:::2;:14:::0;141069:4;141050:18:::2;:24::i;:::-;:41;;141042:56;;;::::0;;-1:-1:-1;;;141042:56:0;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;141042:56:0;;;;;;;;;;;;;::::2;;141213:30:::0;;::::2;141269::::0;;::::2;141314:9:::0;;141310:332:::2;;141339:18;141360:17:::0;;-1:-1:-1;;;141360:17:0;::::2;:22:::0;;;141412:17;;:44:::2;;141444:12;141436:20;;:5;:20;;;;;;141412:44;;;141432:1;141412:44;141396:60:::0;-1:-1:-1;;;;;;141474:18:0;::::2;::::0;141470:61:::2;;141494:12;:37:::0;;-1:-1:-1;;;;;141494:37:0;;::::2;::::0;::::2;;-1:-1:-1::0;;;;;;141494:37:0;;::::2;;::::0;;141470:61:::2;141569:62;141585:13:::0;;::::2;-1:-1:-1::0;;;;;;;;141569:62:0;::::2;:15;:62::i;:::-;141545:20;:86:::0;;;;::::2;::::0;;-1:-1:-1;;141310:332:0::2;141655:9:::0;;141651:332:::2;;141680:18;141701:17:::0;;-1:-1:-1;;;141701:17:0;::::2;141722:1;141701:22:::0;;;;141753:17;;:44:::2;;141785:12;141777:20;;:5;:20;;;;;;141753:44;;;141773:1;141753:44;141737:60:::0;-1:-1:-1;;;;;;141815:18:0;::::2;::::0;141811:61:::2;;141835:12;:37:::0;;-1:-1:-1;;;141835:37:0;;::::2;-1:-1:-1::0;;;;;141835:37:0;;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;;::::0;;141811:61:::2;141910:62;141926:13:::0;;::::2;-1:-1:-1::0;;;;;;;;141910:62:0;::::2;:15;:62::i;:::-;141886:20;:86:::0;;;;::::2;::::0;;-1:-1:-1;;141651:332:0::2;142016:9;-1:-1:-1::0;;;;;141998:60:0::2;142004:10;-1:-1:-1::0;;;;;141998:60:0::2;;142027:7;142036;142045:5;142052;141998:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;112275:5:0;:21;;-1:-1:-1;;;;112275:21:0;-1:-1:-1;;;112275:21:0;;;-1:-1:-1;;;;;;;;;;;;140152:1913:0:o;126968:1035::-;127168:15;112200:14;;127168:15;;-1:-1:-1;;;112200:14:0;;;;112192:30;;;;;-1:-1:-1;;;112192:30:0;;;;;;;;;;;;-1:-1:-1;;;112192:30:0;;;;;;;;;;;;;;;112249:5;112232:22;;-1:-1:-1;;;;112232:22:0;;;127357:47:::1;:9;127371:10;127383:9:::0;127394;127357:13:::1;:47::i;:::-;127444:20;::::0;::::1;::::0;;;-1:-1:-1;;;;;;127444:20:0;;::::1;127425:39:::0;;::::1;;:81;;127490:16;127425:81;;;127467:20;::::0;::::1;::::0;-1:-1:-1;;;;;127467:20:0::1;127425:81;127545:20;::::0;::::1;::::0;127415:91;;-1:-1:-1;;;;127545:20:0;::::1;-1:-1:-1::0;;;;;127545:20:0;;::::1;127526:39:::0;;::::1;;:81;;127591:16;127526:81;;;127568:20;::::0;::::1;::::0;-1:-1:-1;;;127568:20:0;::::1;-1:-1:-1::0;;;;;127568:20:0::1;127526:81;127516:91:::0;-1:-1:-1;;;;;;127622:11:0;::::1;::::0;127618:142:::1;;127649:20;::::0;::::1;:31:::0;;-1:-1:-1;;;;;;127649:31:0;::::1;-1:-1:-1::0;;;;;127649:31:0;;::::1;::::0;;::::1;::::0;::::1;;::::0;;;127694:55:::1;::::0;127722:6:::1;::::0;127730:9;;127694:55;::::1;:27;:55::i;:::-;-1:-1:-1::0;;;;;127773:11:0;::::1;::::0;127769:142:::1;;127800:20;::::0;::::1;:31:::0;;-1:-1:-1;;;;;127800:31:0;;::::1;-1:-1:-1::0;;;127800:31:0;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;127845:55:::1;::::0;127873:6:::1;::::0;127881:9;;127845:55;::::1;:27;:55::i;:::-;127926:70;::::0;;-1:-1:-1;;;;;127926:70:0;::::1;::::0;;-1:-1:-1;;;;;127926:70:0;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;127934:10:::1;::::0;127926:70:::1;::::0;;;;;;;;::::1;-1:-1:-1::0;112275:5:0;:21;;-1:-1:-1;;;;112275:21:0;-1:-1:-1;;;112275:21:0;;;126968:1035;;;;-1:-1:-1;126968:1035:0;-1:-1:-1;;;;126968:1035:0:o;111652:59::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;111652:59:0;;;;;;;;;;-1:-1:-1;;;111652:59:0;;;;:::o;111554:52::-;;;;;;;;;;;;;:::o;110083:53::-;;;:::o;142118:513::-;112200:5;:14;-1:-1:-1;;;112200:14:0;;;;112192:30;;;;;-1:-1:-1;;;112192:30:0;;;;;;;;;;;;-1:-1:-1;;;112192:30:0;;;;;;;;;;;;;;;112249:5;112232:22;;-1:-1:-1;;;;112232:22:0;;;112479:34:::1;::::0;;-1:-1:-1;;;112479:34:0;;;;112497:7:::1;-1:-1:-1::0;;;;;112479:32:0::1;::::0;-1:-1:-1;;112479:34:0::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:32;:34;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;112479:34:0;-1:-1:-1;;;;;112465:48:0::1;:10;:48;112457:57;;;::::0;::::1;;142254:17:::2;::::0;::::2;::::0;;:62:::2;;;142292:1;142276:12;:17;;;;:39;;;;;142313:2;142297:12;:18;;;;142276:39;142253:148;;;;-1:-1:-1::0;142338:17:0::2;::::0;::::2;::::0;;:62:::2;;;142376:1;142360:12;:17;;;;:39;;;;;142397:2;142381:12;:18;;;;142360:39;142232:179;;;::::0;::::2;;142421:20;142444:17:::0;;-1:-1:-1;;;;142471:54:0;::::2;-1:-1:-1::0;;;142444:17:0::2;142523:1;142507:17:::0;;;;;142491:34;::::2;142471:54:::0;::::2;::::0;::::2;::::0;;;::::2;::::0;;;142540:84:::2;::::0;;142555:19;142444:17;;;::::2;142555:19:::0;;;142540:84;;142576:19;;;;;;;142540:84:::2;::::0;::::2;::::0;;;::::2;::::0;;;;;;::::2;::::0;;;;;142444:17;::::2;::::0;142540:84:::2;::::0;;;;;;;;::::2;-1:-1:-1::0;;112275:5:0;:21;;-1:-1:-1;;;;112275:21:0;-1:-1:-1;;;112275:21:0;;;-1:-1:-1;142118:513:0:o;142684:1017::-;142859:15;112200:14;;142859:15;;-1:-1:-1;;;112200:14:0;;;;112192:30;;;;;-1:-1:-1;;;112192:30:0;;;;;;;;;;;;-1:-1:-1;;;112192:30:0;;;;;;;;;;;;;;;112249:5;112232:22;;-1:-1:-1;;;;112232:22:0;;;112479:34:::1;::::0;;-1:-1:-1;;;112479:34:0;;;;112497:7:::1;-1:-1:-1::0;;;;;112479:32:0::1;::::0;-1:-1:-1;;112479:34:0::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:32;:34;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;112479:34:0;-1:-1:-1;;;;;112465:48:0::1;:10;:48;112457:57;;;::::0;::::1;;142932:12:::2;:19:::0;-1:-1:-1;;;;;142932:19:0;;::::2;142913:38:::0;;::::2;;:79;;142976:16;142913:79;;;142954:12;:19:::0;-1:-1:-1;;;;;142954:19:0::2;142913:79;143031:12;:19:::0;142903:89;;-1:-1:-1;;;;143031:19:0;::::2;-1:-1:-1::0;;;;;143031:19:0;;::::2;143012:38:::0;;::::2;;:79;;143075:16;143012:79;;;143053:12;:19:::0;-1:-1:-1;;;143053:19:0;::::2;-1:-1:-1::0;;;;;143053:19:0::2;143012:79;143002:89:::0;-1:-1:-1;;;;;;143106:11:0;::::2;::::0;143102:256:::2;;143148:12;:19:::0;-1:-1:-1;;;;;143137:30:0;;::::2;143148:19:::0;::::2;143137:30;143133:45;;;-1:-1:-1::0;;143169:9:0;;;;143133:45:::2;143248:12;:30:::0;;-1:-1:-1;;;;;;143248:30:0;::::2;-1:-1:-1::0;;;;;143248:30:0;;::::2;::::0;;::::2;::::0;::::2;;::::0;;;143292:55:::2;::::0;143320:6:::2;::::0;143328:9;;143292:55;::::2;:27;:55::i;:::-;-1:-1:-1::0;;;;;143371:11:0;::::2;::::0;143367:256:::2;;143413:12;:19:::0;-1:-1:-1;;;;;143402:30:0;;::::2;-1:-1:-1::0;;;143413:19:0;;::::2;;143402:30;143398:45;;;-1:-1:-1::0;;143434:9:0;143398:45:::2;143513:12;:30:::0;;-1:-1:-1;;;;;143513:30:0;;::::2;-1:-1:-1::0;;;143513:30:0;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;;::::2;::::0;;;143557:55:::2;::::0;143585:6:::2;::::0;143593:9;;143557:55;::::2;:27;:55::i;:::-;143638:56;::::0;;-1:-1:-1;;;;;143638:56:0;;::::2;::::0;;;::::2;;::::0;::::2;::::0;;;-1:-1:-1;;;;;143638:56:0;::::2;::::0;143654:10:::2;::::0;143638:56:::2;::::0;;;;;;;;;::::2;112275:5:::0;:21;;-1:-1:-1;;;;112275:21:0;-1:-1:-1;;;112275:21:0;;;142684:1017;;;;-1:-1:-1;142684:1017:0;-1:-1:-1;;142684:1017:0:o;117279:499::-;117414:30;117446:51;31555:22;:20;:22::i;:::-;117532:239:::1;117570:17;:15;:17::i;:::-;117605:11;;117532:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;-1:-1:-1;117634:10:0;117702:9:::1;::::0;117532:12:::1;::::0;;;-1:-1:-1;;;;117634:10:0;::::1;;;::::0;-1:-1:-1;117662:22:0::1;-1:-1:-1::0;;;117662:22:0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;;117702:9:0;;::::1;::::0;-1:-1:-1;;;117729:28:0;::::1;;117532:20;:239::i;:::-;117513:258;;;;117279:499:::0;;;;;:::o;128121:939::-;128247:15;112200:14;;128247:15;;-1:-1:-1;;;112200:14:0;;;;112192:30;;;;;-1:-1:-1;;;112192:30:0;;;;;;;;;;;;-1:-1:-1;;;112192:30:0;;;;;;;;;;;;;;;112249:5;112232:22;;-1:-1:-1;;;;112232:22:0;;;128409:227:::1;::::0;;::::1;::::0;::::1;::::0;;128459:10:::1;128409:227:::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;;;;112249:5;;;;128376:274:::1;::::0;128409:227;;;128592:25:::1;-1:-1:-1::0;;;;;128592:14:0;::::1;:23;:25::i;:::-;128591:26;;128409:227;;::::0;;128376:15:::1;:274::i;:::-;128291:359;;;;;;128680:10;128679:11;;128661:30;;128720:10;128719:11;;128701:30;;128756:1;128746:7;:11;:26;;;;128771:1;128761:7;:11;128746:26;128742:232;;;128853:20;::::0;::::1;::::0;;-1:-1:-1;;;;;;;;;128910:20:0;;::::1;-1:-1:-1::0;;;;;128910:20:0;;::::1;:39:::0;::::1;128788:175:::0;::::1;::::0;;::::1;128853:20:::0;;::::1;128788:175:::0;;::::1;::::0;;;::::1;128853:39:::0;;::::1;128788:175;;::::0;;128742:232:::1;128989:64;::::0;;-1:-1:-1;;;;;128989:64:0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;128994:10:::1;::::0;128989:64:::1;::::0;;;;;;;;::::1;-1:-1:-1::0;;112275:5:0;:21;;-1:-1:-1;;;;112275:21:0;-1:-1:-1;;;112275:21:0;;;-1:-1:-1;128121:939:0;;;;-1:-1:-1;128121:939:0;-1:-1:-1;;128121:939:0:o;114372:2854::-;114541:26;114581:37;114632:20;31555:22;:20;:22::i;:::-;114677:32:::1;114688:9;114699;114677:10;:32::i;:::-;115009:16;::::0;;::::1;::::0;::::1;114720:25;115009:16:::0;;;:5:::1;:16;::::0;;;;;115065;;::::1;::::0;;::::1;::::0;;;;115248:27:::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;;;115293:36:0;::::1;-1:-1:-1::0;;;;;115293:36:0::1;::::0;114720:25;;-1:-1:-1;;;115347:20:0;::::1;;;::::0;114720:25;;115009:16;;-1:-1:-1;;;115385:17:0;::::1;;;::::0;115430:25:::1;;;::::0;::::1;;115623:27;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;115668:36:0;::::1;-1:-1:-1::0;;;;;115668:36:0::1;::::0;-1:-1:-1;;;;115722:20:0;::::1;;;::::0;-1:-1:-1;;;;115760:17:0;::::1;;;::::0;115805:25:::1;;;::::0;::::1;;-1:-1:-1::0;;115851:27:0::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;115851:27:0;-1:-1:-1;;;;;115851:27:0;::::1;::::0;;-1:-1:-1;;;115851:27:0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;-1:-1:-1::0;;;115851:27:0;::::1;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;115851:27:0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;115851:27:0;::::1;::::0;;::::1;::::0;;;;::::1;-1:-1:-1::0;;;115851:27:0;::::1;::::0;::::1;-1:-1:-1::0;115851:27:0;;;-1:-1:-1;;;115851:27:0;;::::1;::::0;;::::1;;;::::0;;;;;;-1:-1:-1;115893:23:0;;::::1;::::0;;::::1;;115889:1331;::::0;-1:-1:-1;115889:1331:0::1;;-1:-1:-1::0;115957:41:0;;;::::1;::::0;-1:-1:-1;116016:73:0;::::1;::::0;-1:-1:-1;116107:41:0;::::1;::::0;-1:-1:-1;115932:230:0::1;;115889:1331;116197:9;116183:23;;:6;:11;;;:23;;;116179:1041;;;116222:11;116236:17;:15;:17::i;:::-;116448:11;::::0;::::1;::::0;116481:23:::1;::::0;::::1;::::0;116526:9:::1;::::0;116557:29:::1;::::0;::::1;::::0;116222:31;;-1:-1:-1;116268:20:0::1;::::0;;;116351:253:::1;::::0;:12:::1;::::0;116222:31;;116268:20;;116448:11;116481:23;-1:-1:-1;;;;;116526:9:0::1;::::0;116351:26:::1;:253::i;:::-;116643:36:::0;;::::1;:58:::0;;;::::1;::::0;-1:-1:-1;;116719:91:0;;;::::1;:149:::0;;;::::1;::::0;-1:-1:-1;116886:26:0;;::::1;:48;::::0;-1:-1:-1;116618:330:0::1;::::0;-1:-1:-1;;116618:330:0::1;116179:1041;-1:-1:-1::0;117004:41:0;;;::::1;::::0;-1:-1:-1;117063:73:0::1;::::0;-1:-1:-1;117154:41:0;::::1;::::0;-1:-1:-1;31587:1:0::1;114372:2854:::0;;;;;:::o;109626:41::-;;;:::o;109988:43::-;;;:::o;109809:40::-;;;:::o;109900:36::-;;;:::o;110974:44::-;;;;:::o;111459:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;111459:49:0;;;-1:-1:-1;;;111459:49:0;;;;;;;;;;;;-1:-1:-1;;;111459:49:0;;-1:-1:-1;;;;;111459:49:0;;-1:-1:-1;;;111459:49:0;;;;;-1:-1:-1;;;111459:49:0;;;;;:::o;118590:621::-;118668:5;:18;-1:-1:-1;;;;;118668:18:0;:23;118660:38;;;;;-1:-1:-1;;;118660:38:0;;;;;;;;;;;;-1:-1:-1;;;118660:38:0;;;;;;;;;;;;;;;118709:10;118722:41;118750:12;118722:27;:41::i;:::-;118709:54;;118775:18;118795:22;118821:42;118845:17;:15;:17::i;:::-;118821:12;;:23;:42::i;:::-;118882:276;;;;;;;;-1:-1:-1;;;;;118882:276:0;;;;;;;;;;;;;;;;-1:-1:-1;118882:276:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;118882:276:0;;;;;-1:-1:-1;118882:276:0;;;;;;;;118874:284;;-1:-1:-1;;;;;;;;;118874:284:0;;;;;-1:-1:-1;;;;118874:284:0;-1:-1:-1;;;;118874:284:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;118874:284:0;-1:-1:-1;;;118874:284:0;;;;-1:-1:-1;;;;118874:284:0;-1:-1:-1;;;118874:284:0;;;;;;;-1:-1:-1;;;;118874:284:0;;;;;;;;119174:30;;;;;;;;;;;;;118882:276;;-1:-1:-1;118882:276:0;;-1:-1:-1;119174:30:0;;;;;;;;;118590:621;;;;:::o;45710:364::-;45794:7;;45865:11;45830:31;;;;-1:-1:-1;;45830:31:0;;;;;;45829:47;;-1:-1:-1;45886:13:0;45938:11;45903:31;;;;34989:9;45903:31;;;;;;45902:47;45886:63;;45959:15;46006:11;45984:33;;45995:7;45985;:17;45984:33;;;;;;;;46021:1;45977:45;;-1:-1:-1;46039:28:0;;;-1:-1:-1;;;;;46039:28:0;;;;;;46032:35;;;;;45710:364;;;;:::o;31354:96::-;31434:8;-1:-1:-1;;;;;31417:25:0;31425:4;31417:25;31409:34;;;;;;31354:96::o;113221:138::-;113311:15;113221:138;:::o;58176:1921::-;58360:10;58372:16;58400;58426:11;58419:18;;:4;:18;;;;;;;;58400:37;;58458:1;58451:4;:8;;;:35;;;;;58470:11;58463:18;;:4;:18;;;;;;;;:23;;;;58451:35;58447:53;;;-1:-1:-1;;58488:12:0;58447:53;58550:3;58546:1545;;;58570:13;58585:12;58601:20;58610:10;58601:8;:20::i;:::-;58738:1;58781:13;;;;;58702:12;58781:13;;;;;;;;;;;58738:11;;;;;;;58717:33;;-1:-1:-1;;58717:33:0;58781:20;;;58948:11;;;;-1:-1:-1;58569:52:0;;-1:-1:-1;58569:52:0;;-1:-1:-1;58717:33:0;58948:11;59090:170;;59249:11;59238:6;59232:13;;59219:10;:26;59218:42;59090:170;;;59188:11;59149:34;59176:6;59149:26;:34::i;:::-;59140:6;:43;59134:50;;59121:10;:63;59120:79;59090:170;59083:177;;58546:1545;;;;;;;59389:13;59404:12;59420:24;59429:10;59442:1;59429:14;59420:8;:24::i;:::-;59388:56;;;;59516:12;59549:1;59539:6;59534:11;;:1;:11;;59533:17;59531:20;59516:35;;59565:14;59598:4;59582;:13;59587:7;59582:13;;;;;;;;;;;;;;;;:20;59565:37;;59741:6;59751:1;59741:11;;59727:25;;59883:11;:197;;60069:11;60058:6;60040:15;:24;60034:31;;60017:10;60030:1;60017:14;:48;60016:64;59883:197;;;59986:11;59975:6;59937:35;59965:6;59937:27;:35::i;:::-;:44;59931:51;;59914:10;59927:1;59914:14;:68;59913:84;59883:197;59876:204;;58546:1545;;;;;58176:1921;;;;;;;;:::o;35707:2580::-;35770:20;35802:15;35827:1;35820:4;:8;;;:57;;35871:4;35864:12;;35820:57;;;35847:4;35840:12;;35839:13;;35820:57;35802:75;-1:-1:-1;34989:9:0;35895:28;;;35887:42;;;;;-1:-1:-1;;;35887:42:0;;;;;;;;;;;;-1:-1:-1;;;35887:42:0;;;;;;;;;;;;;;;35940:13;35966:3;35956:13;;:93;;-1:-1:-1;;;35956:93:0;;;35977:34;35956:93;35940:109;;;-1:-1:-1;36073:3:0;36063:13;;:18;36059:83;;36100:34;36092:42;36139:3;36091:51;36059:83;36166:3;36156:13;;:18;36152:83;;36193:34;36185:42;36232:3;36184:51;36152:83;36259:3;36249:13;;:18;36245:83;;36286:34;36278:42;36325:3;36277:51;36245:83;36352:4;36342:14;;:19;36338:84;;36380:34;36372:42;36419:3;36371:51;36338:84;36446:4;36436:14;;:19;36432:84;;36474:34;36466:42;36513:3;36465:51;36432:84;36540:4;36530:14;;:19;36526:84;;36568:34;36560:42;36607:3;36559:51;36526:84;36634:4;36624:14;;:19;36620:84;;36662:34;36654:42;36701:3;36653:51;36620:84;36728:5;36718:15;;:20;36714:85;;36757:34;36749:42;36796:3;36748:51;36714:85;36823:5;36813:15;;:20;36809:85;;36852:34;36844:42;36891:3;36843:51;36809:85;36918:5;36908:15;;:20;36904:85;;36947:34;36939:42;36986:3;36938:51;36904:85;37013:5;37003:15;;:20;36999:85;;37042:34;37034:42;37081:3;37033:51;36999:85;37108:6;37098:16;;:21;37094:86;;37138:34;37130:42;37177:3;37129:51;37094:86;37204:6;37194:16;;:21;37190:86;;37234:34;37226:42;37273:3;37225:51;37190:86;37300:6;37290:16;;:21;37286:86;;37330:34;37322:42;37369:3;37321:51;37286:86;37396:6;37386:16;;:21;37382:86;;37426:34;37418:42;37465:3;37417:51;37382:86;37492:7;37482:17;;:22;37478:86;;37523:33;37515:41;37561:3;37514:50;37478:86;37588:7;37578:17;;:22;37574:85;;37619:32;37611:40;37656:3;37610:49;37574:85;37683:7;37673:17;;:22;37669:83;;37714:30;37706:38;37749:3;37705:47;37669:83;37776:7;37766:17;;:22;37762:78;;37807:25;37799:33;37837:3;37798:42;37762:78;37862:1;37855:4;:8;;;37851:47;;;37893:5;-1:-1:-1;;37893:5:0;37873:25;;;;;37865:33;;37851:47;38248:17;;;:22;:30;;38277:1;38248:30;;;38273:1;38248:30;38231:48;;38241:2;38232:5;:11;;38231:48;38208:72;;35707:2580;;;;;:::o;102488:3239::-;102735:24;;;;-1:-1:-1;;;;;102894:41:0;;;;;;;;102960:20;;;;;;102991:1354;;103018:30;103051:61;103075:15;103099:7;103093:3;:13;103051:61;;103108:3;103051:15;:61::i;:::-;103018:94;;103137:10;:222;;103272:87;103302:19;103323:18;103343:9;103354:4;103272:29;:87::i;:::-;103137:222;;;103166:87;103196:18;103216:19;103237:9;103248:4;103166:29;:87::i;:::-;103126:233;;103403:8;103377:22;:34;103373:336;;103432:18;103413:37;;103373:336;;;103504:205;103565:19;103606:9;103637:22;103681:10;103504:39;:205::i;:::-;103485:224;;103373:336;102991:1354;;;;103752:10;:224;;103888:88;103918:19;103939:18;103959:9;103970:5;103888:29;:88::i;:::-;103752:224;;;103781:88;103811:18;103831:19;103852:9;103863:5;103781:29;:88::i;:::-;103740:236;;104023:9;104003:15;104002:16;;103994:38;103990:344;;104053:18;104034:37;;103990:344;;;104125:209;104187:19;104228:9;104268:15;104267:16;;104306:10;104125:40;:209::i;:::-;104106:228;;103990:344;-1:-1:-1;;;;;104366:38:0;;;;;;;104455:732;;;;104496:3;:14;;;;;104503:7;104496:14;:145;;104556:85;104586:16;104604:19;104625:9;104636:4;104556:29;:85::i;:::-;104496:145;;;104529:8;104496:145;104485:156;;104667:3;:15;;;;;104675:7;104674:8;104667:15;:148;;104729:86;104759:16;104777:19;104798:9;104809:5;104729:29;:86::i;:::-;104667:148;;;104701:9;104667:148;104655:160;;104455:732;;;104857:3;:14;;;;;104864:7;104857:14;:145;;104917:85;104947:19;104968:16;104986:9;104997:4;104917:29;:85::i;:::-;104857:145;;;104890:8;104857:145;104846:156;;105028:3;:15;;;;;105036:7;105035:8;105028:15;:148;;105090:86;105120:19;105141:16;105159:9;105170:5;105090:29;:86::i;:::-;105028:148;;;105062:9;105028:148;105016:160;;104455:732;105277:7;105276:8;:49;;;;;105309:15;105308:16;;105288:9;:37;105276:49;105272:117;;;105362:15;105361:16;;105341:37;;105272:117;105403:7;:49;;;;-1:-1:-1;;;;;;105414:38:0;;;;;;;;105403:49;105399:322;;;105600:8;105581:15;105573:35;105561:47;;105399:322;;;105651:59;105677:8;105687:7;105651:59;;105702:7;105696:3;:13;105651:59;;:25;:59::i;:::-;105639:71;;105399:322;102488:3239;;;;;;;;;;;;;:::o;34222:121::-;34274:8;-1:-1:-1;;;34302:10:0;;34294:19;;;;;;-1:-1:-1;34334:1:0;34222:121::o;33176:120::-;33265:5;;;33260:16;;;;33232:8;33281:6;;;33260:28;33252:37;;;;;;33176:120;;;;:::o;32879:::-;32968:5;;;32963:16;;;;32935:8;32984:6;;;32963:28;32955:37;;;;;60861:3776;60973:14;;;-1:-1:-1;;61480:1:0;61477;61470:20;61512:9;;;;-1:-1:-1;61563:13:0;;;61547:14;;;;61543:34;;-1:-1:-1;61659:10:0;61655:179;;61707:1;61693:11;:15;61685:24;;;;;;-1:-1:-1;61760:23:0;;;;-1:-1:-1;61810:13:0;;61655:179;61961:5;61947:11;:19;61939:28;;;;;;62244:17;62320:11;62317:1;62314;62307:25;62672:12;62687;;;:26;;62807:22;;;;;63610:1;63591;:15;;63590:21;;63837:17;;;63833:21;;63826:28;63895:17;;;63891:21;;63884:28;63954:17;;;63950:21;;63943:28;64013:17;;;64009:21;;64002:28;64072:17;;;64068:21;;64061:28;64132:17;;;64128:21;;;64121:28;63179:12;;;;63175:23;;;63200:1;63171:31;62449:20;;;62438:32;;;63230:12;;;;62492:21;;;;62935:16;;;;63221:21;;;;64596:11;;;;;-1:-1:-1;;60861:3776:0;;;;;;:::o;81715:1943::-;81953:20;;82032:15;;;82028:257;;82063:23;82089:4;82094:5;82089:11;;;;;;;;;82063:37;;;;;;;;82089:11;;;;82063:37;;;;;;;;-1:-1:-1;;;82063:37:0;;;;;;;;;;-1:-1:-1;82063:37:0;;;-1:-1:-1;;;82063:37:0;;-1:-1:-1;;;;;82063:37:0;;;;;;;;-1:-1:-1;;;82063:37:0;;;;;;;;;;;;;-1:-1:-1;82118:27:0;;;82114:78;;82154:38;82164:4;82170;82176;82182:9;82154;:38::i;:::-;82147:45;;82114:78;82214:4;:19;;;82235:4;:38;;;82206:68;;;;;;;82028:257;82311:17;;;82295:13;;82415:83;82442:4;82311;:17;82462:4;82468:5;82475:9;82486:11;82415:26;:83::i;:::-;82339:159;;;;82523:10;:25;;;82513:35;;:6;:35;;;82509:1143;;;82614:10;:25;;;82641:10;:44;;;82606:80;;;;;;;;;82509:1143;82717:24;;82707:34;;;;;;;82703:949;;;82808:9;:24;;;82834:9;:43;;;82800:78;;;;;;;;;82703:949;83001:25;;82974:24;;83211:25;;;;;83184:24;;;;82974:52;;;;;83061:34;;;83182:113;;;;;83183:77;;;;83184:52;83183:77;;;;;;;;83182:113;83134:10;:25;;;:161;83585:20;83413:192;;83570:11;83414:167;;83497:10;:44;;;83451:9;:43;;;:90;-1:-1:-1;;;;;83414:153:0;:167;83413:192;;;;;;83313:10;:44;;;:314;83109:532;;;;;;;;;81715:1943;;;;;;;;;;;:::o;52376:837::-;52719:10;;;;;;52663:19;52719:10;;;;;;;;;;;;52791:26;;;;;52768:49;;;52739:78;;;52879:26;;;;;52856:49;;;52827:78;;;52989:35;;;;;53145:19;-1:-1:-1;;;;;;;;;;;52989:35:0;;;;;52953:71;;;52915:109;;;;-1:-1:-1;;;;;;;;52915:109:0;;;;;;;53080:26;;;;53063:43;;;53034:72;;;;;-1:-1:-1;;53034:72:0;;;;;;;;53145:19;;;;;53138:26;;;53116:48;;;;-1:-1:-1;;;;53116:48:0;;;;;;;;;;53189:17;-1:-1:-1;;;53189:17:0;;;;;52376:837::o;43377:236::-;43439:9;43468:1;43464;:5;;;43460:147;;;-1:-1:-1;43510:2:0;;;;43498:15;;-1:-1:-1;;;;;43493:25:0;;;;;;;43485:40;;;;;-1:-1:-1;;;43485:40:0;;;;;;;;;;;;-1:-1:-1;;;43485:40:0;;;;;;;;;;;;;;;43460:147;;;-1:-1:-1;43569:14:0;;;-1:-1:-1;;;;;43564:25:0;;;;;;;;43556:40;;;;;-1:-1:-1;;;43556:40:0;;;;;;;;;;;;-1:-1:-1;;;43556:40:0;;;;;;;;;;;;;;38706:4281;38779:10;35169;-1:-1:-1;;;;;38908:30:0;;;;;;:63;;-1:-1:-1;35349:49:0;-1:-1:-1;;;;;38942:29:0;;;38908:63;38900:77;;;;;-1:-1:-1;;;38900:77:0;;;;;;;;;;;;-1:-1:-1;;;38900:77:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;39028:2:0;39003:27;;;;-1:-1:-1;;;;;39133:41:0;;39130:1;39126:49;39223:9;;;39296:18;39290:25;;39287:1;39283:33;39364:9;;;39437:10;39431:17;;39428:1;39424:25;39497:9;;;39570:6;39564:13;;39561:1;39557:21;39626:9;;;39699:4;39693:11;;39690:1;39686:19;;;39753:9;;;39826:3;39820:10;;39817:1;39813:18;39879:9;;;39946:10;;;-1:-1:-1;39939:18:0;;;40005:9;;;;40065:10;;;39336;;39469;;;39598;;;39725;39851;;;39977;40095;-1:-1:-1;40129:10:0;;40125:79;;40161:3;40155;:9;40145:5;:20;;40141:24;;40125:79;;;40200:3;40194;:9;40184:5;:20;;40180:24;;40125:79;40303:9;;;40298:3;40294:19;;;40335:11;;;;40407:9;;;;40472;;40463:19;;;40504:11;;;40576:9;40641;;40632:19;;;40673:11;;;40745:9;40810;;40801:19;;;40842:11;;;40914:9;40979;;40970:19;;;41011:11;;;41083:9;41148;;41139:19;;;41180:11;;;41252:9;41317;;41308:19;;;41349:11;;;41421:9;41486;;41477:19;;;41518:11;;;41590:9;41655;;41646:19;;;41687:11;;;41759:9;41824;;41815:19;;;41856:11;;;41928:9;41993;;41984:19;;;42025:11;;;42097:9;42162;;42153:19;;;42194:11;;;42266:9;42331;;42322:19;;;42363:11;;;;42435:9;;;;42500;;42491:19;;;;;40303:9;-1:-1:-1;;40231:17:0;;40253:2;40230:25;40378:10;;;;;;;40368:21;40547:10;;;;;;;40537:21;;;;40716:10;;;;;;;40706:21;;;;40885:10;;;;;;;40875:21;;;;41054:10;;;;;;;41044:21;;;;41223:10;;;;;;;41213:21;;;;41392:10;;;;;;;41382:21;41561:10;;;;;-1:-1:-1;;;41561:10:0;41551:21;41730:10;;;;;;;41720:21;41899:10;;;;;;;41889:21;42068:10;;;;;;;42058:21;42237:10;;;;;;;42227:21;42406:10;;;;;;;42396:21;42575:10;;;;;;;42565:21;42637:24;42629:32;;-1:-1:-1;;42713:53:0;;40245:3;42712:62;;;;42823:39;42807:55;;42806:64;;42889:17;;;;;;;;;:91;;-1:-1:-1;;;;;42919:42:0;;:26;42938:6;42919:18;:26::i;:::-;-1:-1:-1;;;;;42919:42:0;;;:61;;42973:7;42919:61;;;42964:6;42919:61;42889:91;;;42909:7;42889:91;42882:98;38706:4281;-1:-1:-1;;;;;;;;;38706:4281:0:o;73501:902::-;73741:19;73762:25;73799:23;73825:4;73830:5;73825:11;;;;;;;;;73799:37;;;;;;;;73825:11;;;;73799:37;;;;;;;;-1:-1:-1;;;73799:37:0;;;;;;;;;;-1:-1:-1;73799:37:0;;;-1:-1:-1;;;73799:37:0;;-1:-1:-1;;;;;73799:37:0;;;;;;;;-1:-1:-1;;;73799:37:0;;;;;;;;;;;;;-1:-1:-1;73926:37:0;;;73922:70;;;73973:5;73980:11;73965:27;;;;;;;73922:70;74093:11;74075:29;;:15;:29;;;:59;;;;;74132:1;74118:11;:15;74108:26;;:5;:26;;;74075:59;74071:189;;;74171:15;74150:36;;74071:189;;;74238:11;74217:32;;74071:189;74299:18;74285:32;;74286:5;74294:1;74286:9;74285:32;;;;;;;;74270:47;;74348:48;74358:4;74364:14;74380:4;74386:9;74348;:48::i;:::-;74327:4;74332:12;74327:18;;;;;;;;;:69;;:18;;:69;;;;;;;;;;;;;;;;;-1:-1:-1;;;74327:69:0;-1:-1:-1;;;;;;;;;;74327:69:0;;;-1:-1:-1;;;74327:69:0;;;;;;;;;-1:-1:-1;;;74327:69:0;-1:-1:-1;;74327:69:0;;;;-1:-1:-1;;74327:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;73501:902:0;;;;-1:-1:-1;73501:902:0;-1:-1:-1;;;;;;73501:902:0:o;89120:328::-;89292:66;;;-1:-1:-1;;;;;89292:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;89292:66:0;-1:-1:-1;;;89292:66:0;;;89281:78;;;;-1:-1:-1;;;;89281:10:0;;;;89292:66;89281:78;;;89292:66;89281:78;;89292:66;89281:78;;;;;;;;;;-1:-1:-1;;89281:78:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;89233:126;;;;89377:7;:57;;;;-1:-1:-1;89389:11:0;;:16;;:44;;;89420:4;89409:24;;;;;;;;;;;;;;;-1:-1:-1;89409:24:0;89389:44;89369:72;;;;;-1:-1:-1;;;89369:72:0;;;;;;;;;;;;-1:-1:-1;;;89369:72:0;;;;;;;;;;;;;;;89120:328;;;;;:::o;113542:297::-;113669:71;;;113734:4;113669:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;113669:71:0;-1:-1:-1;;;113669:71:0;;;113651:90;;;;-1:-1:-1;;;;;;;;;;;113651:6:0;:17;;113669:71;;113651:90;;;;113669:71;113651:90;;113669:71;113651:90;;;;;;;;;;-1:-1:-1;;113651:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;113603:138;;;;113759:7;:28;;;;;113785:2;113770:4;:11;:17;;113759:28;113751:37;;;;;;113816:4;113805:27;;;;;;;;;;;;;;;-1:-1:-1;113805:27:0;;-1:-1:-1;;;113542:297:0;:::o;32038:111::-;32130:5;;;32125:16;;;;32117:25;;;;;114022:297;114149:71;;;114214:4;114149:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;114149:71:0;-1:-1:-1;;;114149:71:0;;;114131:90;;;;-1:-1:-1;;;;;;;;;;;114131:6:0;:17;;114149:71;;114131:90;;;;114149:71;;114131:90;;;;114149:71;;114131:90;;;;;;;;-1:-1:-1;;114131:90:0;;;;;;;;;;;;74782:549;74906:6;74942:1;74932:7;:11;;;74924:25;;;;;-1:-1:-1;;;74924:25:0;;;;;;;;;;;;-1:-1:-1;;;74924:25:0;;;;;;;;;;;;;;;75055:7;75047:15;;:4;:15;;;75043:35;;-1:-1:-1;75071:7:0;75064:14;;75043:35;75253:7;75237:66;75266:4;75262:8;;:1;:8;;;75237:66;;;75302:1;75277:4;75282:1;75277:7;;;;;;;;;;:26;;-1:-1:-1;;75277:26:0;;;;;;;;;;;;-1:-1:-1;75272:3:0;75237:66;;;-1:-1:-1;75320:4:0;;74782:549;-1:-1:-1;;;74782:549:0:o;33950:107::-;34048:1;34029:20;;;;;;34021:29;;;;;119960:2813;120090:30;120134:14;120162;31555:22;:20;:22::i;:::-;120201:46:::1;120212:6;:16;;;120230:6;:16;;;120201:10;:46::i;:::-;120258:27;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;120258:27:0;-1:-1:-1;;;;;120258:27:0;::::1;::::0;;-1:-1:-1;;;120258:27:0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;120258:27:0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;120258:27:0;::::1;::::0;::::1;::::0;;;;;;;;-1:-1:-1;;;120258:27:0;::::1;::::0;;::::1;::::0;;;;::::1;-1:-1:-1::0;;;120258:27:0;::::1;::::0;::::1;-1:-1:-1::0;120258:27:0;;;-1:-1:-1;;;120258:27:0;;::::1;::::0;;::::1;;;::::0;;;;120366:12;;120392:16;;::::1;::::0;120422;;::::1;::::0;120452:21;;::::1;::::0;120258:27;;120337:171:::1;::::0;120366:12;;120392:16;;120422;;120452:21;120337:15:::1;:171::i;:::-;120326:182;;120523:6;:21;;;:26;;120548:1;120523:26;120519:2248;;120583:6;:16;;;120569:30;;:6;:11;;;:30;;;120565:2192;;;120858:224;120909:45;120937:6;:16;;;120909:27;:45::i;:::-;120976;121004:6;:16;;;120976:27;:45::i;:::-;121043:6;:21;;;120858:29;:224::i;:::-;120848:234;;120565:2192;;;121121:6;:16;;;121107:30;;:6;:11;;;:30;;;121103:1654;;;121242:9;::::0;121438:23:::1;::::0;::::1;::::0;-1:-1:-1;;;;;121242:9:0;;::::1;::::0;121398:296:::1;::::0;121483:17:::1;:15;:17::i;:::-;121522:11;::::0;::::1;::::0;121592:29:::1;::::0;::::1;::::0;121643:33:::1;::::0;::::1;::::0;121398:12:::1;::::0;:296;;121522:11;121555:15;;121398:18:::1;:296::i;:::-;121342:5;121341:353:::0;;-1:-1:-1;;;;121341:353:0::1;-1:-1:-1::0;;;;121341:353:0;;::::1;;;-1:-1:-1::0;;;;121341:353:0::1;-1:-1:-1::0;;;121341:353:0;;;::::1;::::0;;;::::1;;::::0;;121774:19;;121843:16:::1;::::0;::::1;::::0;121723:198:::1;::::0;121774:19;121815:45:::1;::::0;:27:::1;:45::i;:::-;121882:6;:21;;;121723:29;:198::i;:::-;121713:208;;121949:198;122000:45;122028:6;:16;;;122000:27;:45::i;:::-;122067:19:::0;;122108:21:::1;::::0;::::1;::::0;121949:29:::1;:198::i;:::-;121939:208;;122178:62;122201:15;122218:6;:21;;;122178:22;:62::i;:::-;122166:9;:74:::0;;-1:-1:-1;;;;;;122166:74:0::1;-1:-1:-1::0;;;;;122166:74:0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;121103:1654:0::1;;;122518:224;122569:45;122597:6;:16;;;122569:27;:45::i;:::-;122636;122664:6;:16;;;122636:27;:45::i;:::-;122703:6;:21;;;122518:29;:224::i;:::-;122508:234;;121103:1654;31587:1;119960:2813:::0;;;;;:::o;64919:315::-;65041:14;65076:25;65083:1;65086;65089:11;65076:6;:25::i;:::-;65067:34;;65143:1;65128:11;65115:25;;;;;65125:1;65122;65115:25;:29;65111:117;;;-1:-1:-1;;65168:26:0;;65160:35;;;;;;65209:8;;64919:315;;;;;:::o;66728:284::-;66958:45;;;;;;;;-1:-1:-1;;66958:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66948:56;;;;;;;;;-1:-1:-1;66943:62:0;;;;;;;;;66728:284::o;84612:862::-;84854:30;84886:51;84971:1;84957:11;:15;;;84949:29;;;;;-1:-1:-1;;;84949:29:0;;;;;;;;;;;;-1:-1:-1;;;84949:29:0;;;;;;;;;;;;;;;85019:11;:18;85007:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;85007:31:0;;84989:49;;85099:11;:18;85085:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;85085:33:0;;85048:70;;85133:9;85128:340;85152:11;:18;85148:1;:22;85128:340;;;85253:204;85284:4;85306;85328:11;85340:1;85328:14;;;;;;;;;;;;;;85360:4;85382:5;85405:9;85432:11;85253:13;:204::i;:::-;85192:15;85208:1;85192:18;;;;;;;;;;;;;85212:34;85247:1;85212:37;;;;;;;;-1:-1:-1;;;;;85191:266:0;;;85212:37;;;;;;;;;;;85191:266;;;;;;;;;;;;;-1:-1:-1;85172:3:0;85128:340;;;;84612:862;;;;;;;;;;:::o;112867:233::-;112964:9;112952:21;;:9;:21;;;112944:37;;;;;-1:-1:-1;;;112944:37:0;;;;;;;;;;;;-1:-1:-1;;;112944:37:0;;;;;;;;;;;;;;;-1:-1:-1;;112999:30:0;;;;;;112991:46;;;;;-1:-1:-1;;;112991:46:0;;;;;;;;;;;;-1:-1:-1;;;112991:46:0;;;;;;;;;;;;;;;34989:9;113055:30;;;;;;113047:46;;;;;-1:-1:-1;;;113047:46:0;;;;;;;;;;;;-1:-1:-1;;;113047:46:0;;;;;;;;;;;;;;;112867:233;;:::o;71957:367::-;72125:169;;;;;;;;;;;;;;;-1:-1:-1;72125:169:0;;;;;;;;;;;;;72279:4;72125:169;;;;;;;72115:179;;-1:-1:-1;;72115:179:0;;;;;;;-1:-1:-1;;;72115:179:0;;;;72279:4;;;71957:367::o;56674:160::-;56781:9;;56789:1;56781:9;;;;56823:3;56816:10;;;;56674:160::o;53885:731::-;53947:7;53978:1;53974;:5;53966:14;;;;;;-1:-1:-1;;;53995:40:0;;53991:102;;54057:3;54051:9;;;;54074:8;53991:102;54111:19;54106:1;:24;54102:84;;54152:2;54146:8;;;;54168:7;54102:84;-1:-1:-1;;;54199:16:0;;54195:76;;54237:2;54231:8;;;;54253:7;54195:76;54289:7;54284:1;:12;54280:72;;54318:2;54312:8;;;;54334:7;54280:72;54370:5;54365:1;:10;54361:68;;54397:1;54391:7;;;;54412:6;54361:68;54447:4;54442:1;:9;54438:67;;54473:1;54467:7;;;;54488:6;54438:67;54523:3;54518:1;:8;54514:66;;54548:1;54542:7;;;;54563:6;54514:66;54598:3;54593:1;:8;54589:20;;54608:1;54603:6;53885:731;;;:::o;55107:894::-;55170:7;55201:1;55197;:5;55189:14;;;;;;-1:-1:-1;55218:3:0;-1:-1:-1;;;;;55235:21:0;;:25;55231:104;;-1:-1:-1;;55276:8:0;55231:104;;;55321:3;55315:9;;;;;55231:104;55352:16;55348:20;;:24;55344:101;;-1:-1:-1;;55388:7:0;55344:101;;;55432:2;55426:8;;;;;55344:101;55462:16;55458:20;;:24;55454:101;;-1:-1:-1;;55498:7:0;55454:101;;;55542:2;55536:8;;;;;55454:101;55572:16;55568:20;;:24;55564:101;;-1:-1:-1;;55608:7:0;55564:101;;;55652:2;55646:8;;;;;55564:101;55682:15;55678:19;;:23;55674:98;;-1:-1:-1;;55717:6:0;55674:98;;;55760:1;55754:7;;;;;55674:98;55789:3;55785:7;;:11;55781:86;;-1:-1:-1;;55812:6:0;55781:86;;;55855:1;55849:7;;;;;55781:86;55884:3;55880:7;;:11;55876:86;;-1:-1:-1;;55907:6:0;55876:86;;;55950:1;55944:7;;;;;55876:86;55979:3;55975:7;;:11;55971:23;;-1:-1:-1;;55988:6:0;;55107:894;-1:-1:-1;55107:894:0:o;99098:532::-;99263:15;-1:-1:-1;;;;;99294:29:0;;;;;;;99290:98;;;99359:13;;99374;99290:98;99418:7;:205;;99548:75;-1:-1:-1;;;;;99548:75:0;;-1:-1:-1;;;;;99575:29:0;;;99548:75;-1:-1:-1;;;99548:15:0;:75::i;:::-;99418:205;;;99444:85;-1:-1:-1;;;;;99444:85:0;;-1:-1:-1;;;;;99481:29:0;;;99444:85;-1:-1:-1;;;99444:25:0;:85::i;:::-;99399:224;;99098:532;;;;;;;:::o;97864:779::-;98029:15;-1:-1:-1;;;;;98060:29:0;;;;;;;98056:98;;;98125:13;;98140;98056:98;-1:-1:-1;;;;;;;;98186:45:0;;;;-1:-1:-1;;;;;98262:29:0;;;98241:50;;;98310:17;;98302:26;;;;;;98358:7;:278;;-1:-1:-1;;;;;98566:70:0;;;;:54;;98582:10;;98594;;98566:54;;:15;:54::i;:::-;:70;;;;;;98358:278;;;98384:163;98430:64;98456:10;98468;-1:-1:-1;;;;;98430:64:0;;:25;:64::i;:::-;-1:-1:-1;;;;;98384:163:0;;:24;:163::i;:::-;98339:297;97864:779;-1:-1:-1;;;;;;;97864:779:0:o;95670:550::-;95838:16;-1:-1:-1;;;;;95874:12:0;;95866:21;;;;;;-1:-1:-1;;;;;95905:13:0;;95897:22;;;;;;96015:10;:198;;96137:76;96177:8;96187:9;96198:8;96208:4;96137:39;:76::i;96015:198::-;96044:74;96082:8;96092:9;96103:8;96113:4;96044:37;:74::i;96766:550::-;96936:16;-1:-1:-1;;;;;96972:12:0;;96964:21;;;;;;-1:-1:-1;;;;;97003:13:0;;96995:22;;;;;;97107:10;:202;;97233:76;97271:8;97281:9;97292;97303:5;97233:37;:76::i;97107:202::-;97136:78;97176:8;97186:9;97197;97208:5;97136:39;:78::i;70873:633::-;71031:18;;:::i;:::-;71061:12;71093:4;:19;;;71076:14;:36;71061:51;;71141:358;;;;;;;;71187:14;71141:358;;;;;;71271:5;71257:19;;71263:4;71257:11;;:19;71235:4;:19;;;:41;71141:358;;;;;;71430:1;71418:9;-1:-1:-1;;;;;71418:13:0;;:29;;71446:1;71418:29;;;71434:9;71418:29;-1:-1:-1;;;;;71391:57:0;-1:-1:-1;71392:21:0;;;-1:-1:-1;;;71392:21:0;71391:57;;;;;;71329:4;:38;;;:120;-1:-1:-1;;;;;71141:358:0;;;;;71480:4;71141:358;;;;;71122:377;;;70873:633;;;;;;:::o;79179:1425::-;79425:29;;:::i;:::-;79456:28;;:::i;:::-;79572:4;79577:5;79572:11;;;;;;;;;79559:24;;;;;;;;79572:11;;;;79559:24;;;;;;;-1:-1:-1;;;79559:24:0;;;;;;;;;;-1:-1:-1;79559:24:0;;;-1:-1:-1;;;79559:24:0;;-1:-1:-1;;;;;79559:24:0;;;;;;;;-1:-1:-1;;;79559:24:0;;;;;;;;;;;-1:-1:-1;79698:44:0;;79702:4;;79735:6;79698:3;:44::i;:::-;79694:443;;;79791:6;79762:35;;:10;:25;;;:35;;;79758:369;;;79925:30;;79758:369;80053:10;80065:46;80075:10;80087:6;80095:4;80101:9;80065;:46::i;:::-;80045:67;;;;;;79758:369;80213:4;80232:11;80218:25;;80219:5;80227:1;80219:9;80218:25;;;;;;;;80213:31;;;;;;;;;80200:44;;;;;;;;80213:31;;;;80200:44;;;;;;-1:-1:-1;;;80200:44:0;;;;;;;;;;-1:-1:-1;80200:44:0;;;-1:-1:-1;;;80200:44:0;;-1:-1:-1;;;;;80200:44:0;;;;;;;;-1:-1:-1;;;80200:44:0;;;;;;;;;;;;;;;-1:-1:-1;80254:49:0;;80283:20;;;;;;;;;;;;;;;-1:-1:-1;;;80283:20:0;;;;;;;;;;-1:-1:-1;80283:20:0;;;-1:-1:-1;;;80283:20:0;;-1:-1:-1;;;;;80283:20:0;;;;;;;;-1:-1:-1;;;80283:20:0;;;;;;;;;;;;-1:-1:-1;80254:49:0;80410:44;80414:4;80420:10;:25;;;80447:6;80410:3;:44::i;:::-;80402:60;;;;;-1:-1:-1;;;80402:60:0;;;;;;;;;;;;-1:-1:-1;;;80402:60:0;;;;;;;;;;;;;;;80545:52;80558:4;80564;80570:6;80578:5;80585:11;80545:12;:52::i;:::-;80538:59;;;;79179:1425;;;;;;;;;;:::o;123097:2517::-;123269:30;123322:42;:9;123336:5;123343:9;123354;123322:13;:42::i;:::-;123407:20;;123499;;123311:53;;-1:-1:-1;123407:20:0;123375:29;;123667:19;;;;;123663:1402;;123702:11;123716:17;:15;:17::i;:::-;123748:20;123928:10;;124004:9;;123702:31;;-1:-1:-1;123748:20:0;;;;123831:250;;:12;;123702:31;;123748:20;;-1:-1:-1;;;123928:10:0;;;;;123960:22;-1:-1:-1;;;123960:22:0;;;;;-1:-1:-1;;;;;124004:9:0;;;;-1:-1:-1;;;124035:28:0;;;123831:26;:250::i;:::-;123747:334;;-1:-1:-1;123747:334:0;-1:-1:-1;124111:350:0;:5;124141:9;124168:4;124190:14;124222:21;124261;123747:334;;124383:4;124405:5;124428:19;124111:12;:350::i;:::-;124096:365;-1:-1:-1;124490:349:0;:5;124520:9;124547:4;124569:14;124601:21;124640;124679:33;124730:14;124762:4;124784;124806:19;124490:12;:349::i;:::-;124475:364;;124858:12;124854:94;;;124890:43;:10;124910:9;124921:11;124890:19;:43::i;:::-;124965:12;124961:94;;;124997:43;:10;125017:9;125028:11;124997:19;:43::i;:::-;123663:1402;;;;125076:28;;125150:98;:5;125175:9;125186;125197:4;125203:21;125226;125150:24;:98::i;:::-;125075:173;;-1:-1:-1;125075:173:0;-1:-1:-1;125259:75:0;:8;125275:14;125075:173;;125259:15;:75::i;:::-;125422:1;125405:14;:18;;;125401:207;;;125443:12;125439:73;;;125475:22;:5;125487:9;125475:11;:22::i;:::-;125529:12;125525:73;;;125561:22;:5;125573:9;125561:11;:22::i;:::-;123097:2517;;;;;;;;;;;;;:::o;99974:412::-;100116:14;100173:1;100161:9;:13;;;:218;;100297:82;:71;100313:13;100328;100351:9;100363:4;100297:15;:71::i;:::-;:80;:82::i;:::-;100161:218;;;100194:84;:73;100210:13;100225;100249:9;100248:10;;100261:5;100194:15;:73::i;:84::-;100193:85;;100142:237;99974:412;-1:-1:-1;;;;99974:412:0:o;100730:::-;100872:14;100929:1;100917:9;:13;;;:218;;101053:82;:71;101069:13;101084;101107:9;101119:4;101053:15;:71::i;100917:218::-;100950:84;:73;100966:13;100981;101005:9;101004:10;;101017:5;100950:15;:73::i;89944:165::-;90065:9;;;90079;;90076:16;;90061:32;;90042:61::o;93968:1153::-;94141:7;94318:3;94314:801;;;94337:16;-1:-1:-1;;;;;94394:27:0;;;:180;;94522:52;94538:6;-1:-1:-1;;;;;;;;94522:52:0;;:15;:52::i;:::-;94394:180;;;-1:-1:-1;;;;;94448:47:0;;90424:2;94449:33;;;94448:47;;;;;;94394:180;94337:255;-1:-1:-1;94614:43:0;:31;-1:-1:-1;;;;;94614:17:0;;94337:255;94614:21;:31::i;:::-;:41;:43::i;:::-;94607:50;;;;;94314:801;94688:16;-1:-1:-1;;;;;94745:27:0;;;:213;;94896:62;94922:6;-1:-1:-1;;;;;;;;94896:62:0;;:25;:62::i;:::-;94745:213;;;94799:70;90424:2;94824:33;;;-1:-1:-1;;;;;94799:70:0;;:24;:70::i;:::-;94688:288;-1:-1:-1;;;;;;94999:19:0;;;-1:-1:-1;94991:28:0;;;;;;-1:-1:-1;;;;;95084:19:0;;;;-1:-1:-1;95069:35:0;;91776:1366;91947:7;92082:11;92078:32;;-1:-1:-1;92102:8:0;92095:15;;92078:32;-1:-1:-1;92141:45:0;;;-1:-1:-1;;;;;;;92141:45:0;92197:939;;;;-1:-1:-1;;;;;92253:50:0;;92264:17;;;;;;;92253:38;;;;;:50;92249:323;;;92345:20;;;92387:25;;;92383:174;;92496:60;92522:10;-1:-1:-1;;;;;92496:60:0;;92544:11;92496:25;:60::i;:::-;92481:76;;;;;;;92383:174;92249:323;;92601:73;92626:10;92638:35;92666:6;-1:-1:-1;;;;;92639:21:0;;92626:10;92639:21;;;;;;;92638:27;:35::i;:::-;92601:24;:73::i;:::-;92586:89;;;;;;92197:939;-1:-1:-1;;;;;92901:50:0;;92912:17;;;;;;;92901:38;;;;;:50;:74;;;;;92968:7;92955:10;:20;92901:74;92893:83;;;;;;93012:20;;;93053:72;:60;93012:20;-1:-1:-1;;;;;93053:60:0;;93012:20;93053:25;:60::i;75765:371::-;75863:4;75948;75943:9;;:1;:9;;;;:22;;;;;75961:4;75956:9;;:1;:9;;;;75943:22;75939:41;;;75979:1;75974:6;;:1;:6;;;;75967:13;;;;75939:41;75991:17;76015:4;76011:8;;:1;:8;;;:24;;-1:-1:-1;;;76026:9:0;;;;76011:24;;;76022:1;76011:24;;;75991:44;;;;76045:17;76069:4;76065:8;;:1;:8;;;:24;;-1:-1:-1;;;76080:9:0;;;;76065:24;;;76076:1;76065:24;;;76045:44;;76107:22;;;;;75765:371;-1:-1:-1;;;;;75765:371:0:o;77091:1064::-;77276:29;;:::i;:::-;77307:28;;:::i;:::-;77347:9;77373:11;77359:25;;77360:5;77368:1;77360:9;77359:25;;;;;;;;77347:37;;;;77416:9;77446:1;77432:11;77428:15;;:1;:15;:19;77416:31;;77479:9;77498:651;-1:-1:-1;77539:1:0;77530:5;;;77529:11;77568:4;77573:15;;;77529:11;77573:15;;;;;;77568:21;;;;;;;77555:34;;;;;;;;77568:21;;;;77555:34;;;;;;-1:-1:-1;;;77555:34:0;;;;;;;;;;-1:-1:-1;77555:34:0;;;-1:-1:-1;;;77555:34:0;;-1:-1:-1;;;;;77555:34:0;;;;;;;;-1:-1:-1;;;77555:34:0;;;;;;;;;;;;;;;-1:-1:-1;77696:97:0;;77747:1;77751;77747:5;77743:9;;77770:8;;77696:97;77819:4;77834:11;77824:21;;77825:1;77829;77825:5;77824:21;;;;;;77819:27;;;;;;;77807:39;;;;;;;;77819:27;;;;77807:39;;;;;;-1:-1:-1;;;77807:39:0;;;;;;;;;;-1:-1:-1;77807:39:0;;;-1:-1:-1;;;77807:39:0;;-1:-1:-1;;;;;77807:39:0;;;;;;;;-1:-1:-1;;;77807:39:0;;;;;;;;;;;77894:25;;77807:39;;-1:-1:-1;;;77884:44:0;;77888:4;;77921:6;77884:3;:44::i;:::-;77861:67;;77995:15;:62;;;;;78014:43;78018:4;78024:6;78032:9;:24;;;78014:3;:43::i;:::-;77991:73;;;78059:5;;;77991:73;78084:15;78079:59;;78109:1;78105;:5;78101:9;;78079:59;;;78133:1;78137;78133:5;78129:9;;78079:59;77498:651;;;;77091:1064;;;;;;;;;;;:::o;49616:1689::-;50061:10;;;;;;50012:12;50061:10;;;;;;;;;;50113:19;;-1:-1:-1;;;;;50113:19:0;50012:12;50172:60;50113:19;50217:14;50172:22;:60::i;:::-;50142:90;-1:-1:-1;;;;;;50251:35:0;;;;;;;;50243:50;;;;;-1:-1:-1;;;50243:50:0;;;;;;;;;;;;-1:-1:-1;;;50243:50:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;50345:25:0;;;;50315:24;;;;50314:57;;;;-1:-1:-1;50314:57:0;50382:572;;50551:11;50543:19;;:4;:19;;;50539:368;;50582:26;;;:49;;;50649:26;;;:49;;;50716:35;;;:71;;-1:-1:-1;;;;;;;;50716:71:0;-1:-1:-1;;;;;;;;50716:71:0;;;;-1:-1:-1;;50805:43:0;-1:-1:-1;50805:43:0;;;;;;-1:-1:-1;;;;50866:26:0;-1:-1:-1;;;;50866:26:0;;;;;;50539:368;50920:16;;;:23;;-1:-1:-1;;;;;50920:23:0;-1:-1:-1;;;50920:23:0;;;50382:572;50964:41;;-1:-1:-1;;;;;;50964:41:0;-1:-1:-1;;;;;50964:41:0;;;;;51151:5;:147;;51249:17;;51242:56;;:45;;-1:-1:-1;;;51249:17:0;;51242:45;51249:17;;;51242:25;;;:45;;;:29;:45::i;:::-;:54;:56::i;:::-;51151:147;;;51178:17;;51171:56;;:45;;-1:-1:-1;;;51178:17:0;;51171:45;51178:17;;;51171:25;;;:45;;;:29;:45::i;:56::-;51131:167;;-1:-1:-1;;;;;51131:167:0;;;;;;;;;-1:-1:-1;;;51131:167:0;;;;;-1:-1:-1;49616:1689:0;;;-1:-1:-1;;;;;;;;;;;;49616:1689:0:o;57090:348::-;57243:11;57236:18;;:4;:18;;;;;;;;:23;;;57228:32;;;;;;57305:13;57320:12;57336:28;57352:11;57345:18;;:4;:18;;;;;;;;57336:8;:28::i;:::-;57389:1;57410:13;;;;;57374:12;57410:13;;;;;;;;;;;;:21;;57389:11;;;;;;;;57410:21;;;;;;-1:-1:-1;;;;57090:348:0:o;46850:1569::-;47201:15;;;;;;;47110:28;47201:15;;;;;;;;;;;47247;;;;;;;;;;47110:28;;;;47201:15;;47247;47110:28;;;;47389:24;;;;;47385:356;;-1:-1:-1;;47451:27:0;;;;47514;;;;47385:356;;;47617:5;:27;;;47594:20;:50;47572:72;;47703:5;:27;;;47680:20;:50;47658:72;;47385:356;47789:27;47826;47881:9;47867:23;;:11;:23;;;47863:355;;;-1:-1:-1;;47928:27:0;;;;47991;;;;47863:355;;;48094:5;:27;;;48071:20;:50;48049:72;;48180:5;:27;;;48157:20;:50;48135:72;;47863:355;48251:42;;;;:64;;;;;48348:42;;;;:64;;;;;-1:-1:-1;46850:1569:0;;-1:-1:-1;;;;;;;46850:1569:0:o;67492:1562::-;67667:24;;;;;;;;;;-1:-1:-1;;;;;67667:24:0;;;;;-1:-1:-1;67667:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;67667:24:0;;;;;-1:-1:-1;67667:24:0;;;-1:-1:-1;67737:19:0;;;;67733:275;;67780:15;;-1:-1:-1;;;;;67780:19:0;67772:34;;;;;-1:-1:-1;;;67772:34:0;;;;;;;;;;;;-1:-1:-1;;;67772:34:0;;;;;;;;;;;;;;;-1:-1:-1;67880:15:0;;67733:275;;;67965:15;;67942:55;;67982:14;67942:22;:55::i;:::-;67926:71;;67733:275;68175:30;;;;68227:15;;68056:19;;68115:185;;68152:53;;;;-1:-1:-1;;;;;68115:185:0;-1:-1:-1;;;68115:15:0;:185::i;:::-;68443:30;;;;68495:15;;68056:258;;-1:-1:-1;68324:19:0;;68383:185;;68420:53;;;-1:-1:-1;;;;;68383:185:0;-1:-1:-1;;;68383:15:0;:185::i;:::-;68324:258;;68628:14;:19;;68646:1;68628:19;68624:55;;68649:30;;-1:-1:-1;;;;;;68649:30:0;-1:-1:-1;;;;;68649:30:0;;;;;68624:55;68689:29;;;:52;;;68751:29;;;:52;;;-1:-1:-1;;;;;68817:15:0;;;;;:34;;-1:-1:-1;;;;;;68836:15:0;;;;68817:34;68813:235;;;68961:16;;;:31;;-1:-1:-1;;;;;;68961:31:0;;-1:-1:-1;;;;;68961:31:0;;;;;;;;69006;;;-1:-1:-1;;;69006:31:0;;;;;;;;;;;;;;;68813:235;67492:1562;;;;;;;;:::o;51492:112::-;51587:10;;;;;;;;;;;;;;;;;;51580:17;;;;;;;;;;;;;;;;;;51492:112::o;33655:111::-;33757:1;-1:-1:-1;;;;;33737:21:0;;;;33729:30;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o","userdoc":"{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"version\":1}"},"flattened/UniswapV3Factory.sol:UniswapV3PoolDeployer":{"abi":"[{\"inputs\":[],\"name\":\"parameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","bin":"608060405234801561001057600080fd5b5060e18061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638903573014602d575b600080fd5b60336075565b604080516001600160a01b0396871681529486166020860152929094168383015262ffffff16606083015260029290920b608082015290519081900360a00190f35b600054600154600280546001600160a01b03938416939283169281169162ffffff600160a01b83041691600160b81b9004900b8556fea26469706673582212206fc17bedae4c8f2176199b6de761c8206338b698455bfce2e8abb3abccd099cb64736f6c63430007060033","bin-runtime":"6080604052348015600f57600080fd5b506004361060285760003560e01c80638903573014602d575b600080fd5b60336075565b604080516001600160a01b0396871681529486166020860152929094168383015262ffffff16606083015260029290920b608082015290519081900360a00190f35b600054600154600280546001600160a01b03938416939283169281169162ffffff600160a01b83041691600160b81b9004900b8556fea26469706673582212206fc17bedae4c8f2176199b6de761c8206338b698455bfce2e8abb3abccd099cb64736f6c63430007060033","devdoc":"{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"parameters\":{\"details\":\"Called by the pool constructor to fetch the parameters of the pool Returns factory The factory address Returns token0 The first token of the pool by address sort order Returns token1 The second token of the pool by address sort order Returns fee The fee collected upon every swap in the pool, denominated in hundredths of a bip Returns tickSpacing The minimum number of ticks between initialized ticks\"}},\"version\":1}","hashes":{"parameters()":"89035730"},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"parameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"parameters\":{\"details\":\"Called by the pool constructor to fetch the parameters of the pool Returns factory The factory address Returns token0 The first token of the pool by address sort order Returns token1 The second token of the pool by address sort order Returns fee The fee collected upon every swap in the pool, denominated in hundredths of a bip Returns tickSpacing The minimum number of ticks between initialized ticks\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"parameters()\":{\"notice\":\"Get the parameters to be used in constructing the pool, set transiently during pool creation.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"UniswapV3PoolDeployer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"143776:1263:0:-:0;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"143776:1263:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;144033:37;;;:::i;:::-;;;;-1:-1:-1;;;;;144033:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;144033:37:0;;;;;;;;;;;;-1:-1:-1;;;144033:37:0;;;;-1:-1:-1;;;144033:37:0;;;;;:::o","userdoc":"{\"kind\":\"user\",\"methods\":{\"parameters()\":{\"notice\":\"Get the parameters to be used in constructing the pool, set transiently during pool creation.\"}},\"version\":1}"},"flattened/UniswapV3Factory.sol:UnsafeMath":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122042cbab4df58b99ba51b663388163bc20b4c20a46087a6b8a6e3460a69ea98afb64736f6c63430007060033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122042cbab4df58b99ba51b663388163bc20b4c20a46087a6b8a6e3460a69ea98afb64736f6c63430007060033","devdoc":"{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math functions that do not check inputs or outputs\",\"version\":1}","hashes":{},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math functions that do not check inputs or outputs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods that perform common math functions but do not do any overflow or underflow checks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"flattened/UniswapV3Factory.sol\":\"UnsafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"flattened/UniswapV3Factory.sol\":{\"keccak256\":\"0xb516e6e2defda0e9ac8a90b6c76cd874cdbf6c1903567e7f764b6248906b0ffc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea702955b217985ff8f9787354aa61fe850414819266a1edd68d99a07ca7a4f7\",\"dweb:/ipfs/QmYie2s6UzYqwCeaxZGokguqeNvu5MSj3638QtHAyYNKKn\"]}},\"version\":1}","srcmap":"89696:415:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"89696:415:0:-:0;;;;;;;;","userdoc":"{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods that perform common math functions but do not do any overflow or underflow checks\",\"version\":1}"}},"sourceList":["flattened/UniswapV3Factory.sol"],"version":"0.7.6+commit.7338295f.Darwin.appleclang"}